diff --git a/bootstrap.api.php b/bootstrap.api.php
deleted file mode 100644
index a3a67ba..0000000
--- a/bootstrap.api.php
+++ /dev/null
@@ -1,63 +0,0 @@
-<?php
-/**
- * @file
- * Hooks provided by the Bootstrap base-theme.
- */
-
-/**
- * @addtogroup hooks
- * @{
- */
-
-
-/**
- * Allows sub-themes to alter the array used for colorizing text.
- *
- * @param array $texts
- *   An associative array containing the text and classes to be matched, passed
- *   by reference.
- *
- * @see _bootstrap_colorize_text()
- */
-function hook_bootstrap_colorize_text_alter(&$texts) {
-  // This matches the exact string: "My Unique Button Text".
-  $texts['matches'][t('My Unique Button Text')] = 'primary';
-
-  // This would also match the string above, however the class returned would
-  // also be the one above; "matches" takes precedence over "contains".
-  $texts['contains'][t('Unique')] = 'notice';
-
-  // Remove matching for strings that contain "apply":
-  unset($texts['contains'][t('Apply')]);
-
-  // Change the class that matches "Rebuild" (originally "warning"):
-  $texts['contains'][t('Rebuild')] = 'success';
-}
-
-/**
- * Allows sub-themes to alter the array used for associating an icon with text.
- *
- * @param array $texts
- *   An associative array containing the text and icons to be matched, passed
- *   by reference.
- *
- * @see _bootstrap_iconize_text()
- */
-function hook_bootstrap_iconize_text_alter(&$texts) {
-  // This matches the exact string: "My Unique Button Text".
-  $texts['matches'][t('My Unique Button Text')] = 'heart';
-
-  // This would also match the string above, however the class returned would
-  // also be the one above; "matches" takes precedence over "contains".
-  $texts['contains'][t('Unique')] = 'bullhorn';
-
-  // Remove matching for strings that contain "filter":
-  unset($texts['contains'][t('Filter')]);
-
-  // Change the icon that matches "Upload" (originally "upload"):
-  $texts['contains'][t('Upload')] = 'ok';
-}
-
-/**
- * @} End of "addtogroup hooks".
- */
diff --git a/bootstrap.info b/bootstrap.info
index c137fd2..e6701fa 100644
--- a/bootstrap.info
+++ b/bootstrap.info
@@ -23,25 +23,6 @@ regions[page_bottom]    = 'Page bottom'
 ;; Theme Settings
 ;;;;;;;;;;;;;;;;;;;;;
 
-; Buttons
-; --------------
-settings[bootstrap_button_size] = ''
-settings[bootstrap_button_colorize] = 1
-settings[bootstrap_button_iconize] = 1
-
-; Images
-; --------------
-settings[bootstrap_image_shape] = ''
-settings[bootstrap_image_responsive] = 1
-
-; Tables
-; --------------
-settings[bootstrap_table_bordered] = 0
-settings[bootstrap_table_condensed] = 0
-settings[bootstrap_table_hover] = 1
-settings[bootstrap_table_striped] = 1
-settings[bootstrap_table_responsive] = 1
-
 ; Breadcrumbs
 ; --------------
 settings[bootstrap_breadcrumb] = 1
@@ -79,7 +60,6 @@ settings[bootstrap_popover_selector] = ''
 settings[bootstrap_popover_trigger]['hover'] = 0
 settings[bootstrap_popover_trigger]['focus'] = 0
 settings[bootstrap_popover_trigger]['click'] = 'click'
-settings[bootstrap_popover_trigger_autoclose] = 1
 settings[bootstrap_popover_title] = ''
 settings[bootstrap_popover_content] = ''
 settings[bootstrap_popover_delay] = 0
@@ -89,7 +69,6 @@ settings[bootstrap_popover_container] = 'body'
 ; --------------
 settings[bootstrap_tooltip_enabled] = 1
 settings[bootstrap_tooltip_descriptions] = 1
-settings[bootstrap_tooltip_descriptions_length] = 200
 settings[bootstrap_tooltip_animation] = 1
 settings[bootstrap_tooltip_html] = 0
 settings[bootstrap_tooltip_placement] = 'auto left'
@@ -102,7 +81,7 @@ settings[bootstrap_tooltip_container] = 'body'
 
 ; Advanced
 ; --------------
-settings[bootstrap_cdn] = 3.2.0
+settings[bootstrap_cdn] = 3.0.2
 settings[bootstrap_bootswatch] = ''
 
 ; Global
@@ -159,3 +138,10 @@ exclude[css][] = 'modules/user/user.css'
 ;;;;;;;;;;;;;;;;;;;;;
 
 simplytest_dependencies[] = jquery_update
+
+; Information added by  packaging script on 2013-11-17
+version = "7.x-3.0"
+core = "7.x"
+project = "bootstrap"
+datestamp = "1384678107"
+
diff --git a/bootstrap.make.example b/bootstrap.make.example
index 1eaca6c..9b76967 100644
--- a/bootstrap.make.example
+++ b/bootstrap.make.example
@@ -2,7 +2,7 @@ core = 7.x
 api = 2
 
 libraries[bootstrap][download][type] = "get"
-libraries[bootstrap][download][url] = "https://github.com/twbs/bootstrap/archive/v3.1.1.zip"
+libraries[bootstrap][download][url] = "https://github.com/twbs/bootstrap/archive/v3.0.2.zip"
 libraries[bootstrap][directory_name] = "bootstrap"
 libraries[bootstrap][destination] = "themes/bootstrap"
 libraries[bootstrap][overwrite] = TRUE
diff --git a/css/overrides.css b/css/overrides.css
index 5b77b92..39e72f6 100644
--- a/css/overrides.css
+++ b/css/overrides.css
@@ -1 +1 @@
-html.overlay-open .navbar-fixed-top{z-index:400}html.js fieldset.collapsed{border-left-width:1px;border-right-width:1px;height:auto}html.js input.form-autocomplete{background-image:none}html.js input.form-autocomplete{background-image:none}html.js .autocomplete-throbber{background-position:100% 2px;background-repeat:no-repeat;display:inline-block;height:15px;margin:2px 0 0 2px;width:15px}html.js .autocomplete-throbber.throbbing{background-position:100% -18px}body{position:relative}body.admin-expanded.admin-vertical.admin-nw .navbar,body.admin-expanded.admin-vertical.admin-sw .navbar{margin-left:260px}body.navbar-is-fixed-top{padding-top:64px!important}body.navbar-is-fixed-bottom{padding-bottom:64px!important}body.toolbar{padding-top:30px!important}body.toolbar .navbar-fixed-top{top:30px}body.toolbar.navbar-is-fixed-top{padding-top:94px!important}body.toolbar-drawer{padding-top:64px!important}body.toolbar-drawer .navbar-fixed-top{top:64px}body.toolbar-drawer.navbar-is-fixed-top{padding-top:128px!important}body.admin-menu .navbar-fixed-top{top:29px}body.admin-menu.navbar-is-fixed-top{padding-top:93px!important}body div#admin-toolbar{z-index:1600}body #toolbar,body #admin-menu,body #admin-toolbar{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}body #admin-menu{margin:0;padding:0;position:fixed;z-index:1600}body #admin-menu .dropdown li{line-height:normal}.navbar.container{margin-top:20px}@media screen and (min-width:768px){.navbar.container{max-width:720px}}@media screen and (min-width:992px){.navbar.container{max-width:940px}}@media screen and (min-width:1200px){.navbar.container{max-width:1140px}}.navbar.container>.container{margin:0;padding:0;width:auto}#overlay-container,.overlay-modal-background,.overlay-element{z-index:1500}#toolbar{z-index:1600}.modal{z-index:1620}.modal-dialog{z-index:1630}.ctools-modal-dialog .modal-body{width:100%!important;overflow:auto}.modal-backdrop{z-index:1610}.footer{margin-top:45px;padding-top:35px;padding-bottom:36px;border-top:1px solid #E5E5E5}.element-invisible{margin:0;padding:0;width:1px}.navbar .logo{margin-right:-15px;padding-left:15px;padding-right:15px}@media screen and (min-width:768px){.navbar .logo{margin-right:0;padding-left:0}}ul.secondary{float:left}@media screen and (min-width:768px){ul.secondary{float:right}}.page-header{margin-top:0}.block:first-child h2.block-title{margin-top:0}p:last-child{margin-bottom:0}.region-help>.glyphicon{font-size:18px;float:left;margin:-.05em .5em 0 0}.region-help .block{overflow:hidden}form#search-block-form{margin:0}.navbar #block-search-form{float:none;margin:5px 0 5px 5px}@media screen and (min-width:992px){.navbar #block-search-form{float:right}}.navbar-search .control-group{margin-bottom:0}ul.action-links{margin:12px 0;padding:0}ul.action-links li{display:inline;margin:0;padding:0 6px 0 0}ul.action-links .glyphicon{padding-right:.5em}input,textarea,select,.uneditable-input{max-width:100%;width:auto}input.error{color:#a94442;border-color:#ebccd1}fieldset legend.panel-heading{float:left;line-height:1em;margin:0}fieldset .panel-body{clear:both;display:inherit}fieldset .panel-heading a.panel-title{color:inherit;display:block;margin:-10px -15px;padding:10px 15px}fieldset .panel-heading a.panel-title:hover{text-decoration:none}.form-group:last-child,.panel:last-child{margin-bottom:0}.form-horizontal .form-group{margin-left:0;margin-right:0}.form-actions{clear:both}.resizable-textarea textarea{border-radius:4px 4px 0 0}.radio:first-child,.checkbox:first-child{margin-top:0}.radio:last-child,.checkbox:last-child{margin-bottom:0}.help-block,.control-group .help-inline{color:#999;font-size:12px;margin:5px 0 10px;padding:0}.panel-heading{display:block}a.tabledrag-handle .handle{height:auto;width:auto}.error{color:#a94442}div.error,table tr.error{background-color:#f2dede;color:#a94442}.control-group.error{background:0 0}.control-group.error label,.control-group.error .control-label{color:#a94442;font-weight:600}.control-group.error input,.control-group.error textarea,.control-group.error select,.control-group.error .uneditable-input{color:#555;border:1px solid #ccc}.control-group.error .help-block,.control-group.error .help-inline{color:#333}.nav-tabs{margin-bottom:10px}ul li.collapsed,ul li.expanded,ul li.leaf{list-style:none;list-style-image:none}.tabs--secondary{margin:0 0 10px}.submitted{margin-bottom:1em;font-style:italic;font-weight:400;color:#777}.password-strength{width:17em;float:right;margin-top:1.4em}.password-strength-title{display:inline}.password-strength-text{float:right;font-weight:700}.password-indicator{background-color:#949494;height:.3em;width:100%}.password-indicator div{height:100%;width:0;background-color:#999}input.password-confirm,input.password-field{width:16em;margin-bottom:.4em}div.password-confirm{float:right;margin-top:1.5em;visibility:hidden;width:17em}div.form-item div.password-suggestions{padding:.2em .5em;margin:.7em 0;width:38.5em;border:1px solid #B4B4B4}div.password-suggestions ul{margin-bottom:0}.confirm-parent,.password-parent{clear:left;margin:0;width:36.3em}.progress-wrapper .progress{margin-bottom:10px}.pagination ul>li>a.progress-disabled{float:left}.form-autocomplete .glyphicon{color:#999;font-size:120%}.form-autocomplete .glyphicon.glyphicon-spin{color:#428bca}.form-autocomplete .input-group-addon{background-color:#fff}.ajax-progress .glyphicon{font-size:90%;margin:0 -.25em 0 .5em}.glyphicon-spin{display:inline-block;-moz-animation:spin 1s infinite linear;-o-animation:spin 1s infinite linear;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear}a .glyphicon-spin{display:inline-block;text-decoration:none}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg)}100%{-ms-transform:rotate(359deg)}}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(359deg)}}.glyphicon-refresh{-webkit-transform-origin:50% 45%;-moz-transform-origin:50% 45%;-ms-transform-origin:50% 45%;-o-transform-origin:50% 45%;transform-origin:50% 45%}.tabbable{margin-bottom:20px}.tabs-below>.nav-tabs,.tabs-left>.nav-tabs,.tabs-right>.nav-tabs{border-bottom:0}.tabs-below>.nav-tabs .summary,.tabs-left>.nav-tabs .summary,.tabs-right>.nav-tabs .summary{color:#999;font-size:12px}.tab-pane>.panel-heading{display:none}.tab-content>.active{display:block}.tabs-below>.nav-tabs{border-top:1px solid #ddd}.tabs-below>.nav-tabs>li{margin-top:-1px;margin-bottom:0}.tabs-below>.nav-tabs>li>a{border-radius:0 0 4px 4px}.tabs-below>.nav-tabs>li>a:hover,.tabs-below>.nav-tabs>li>a:focus{border-top-color:#ddd;border-bottom-color:transparent}.tabs-below>.nav-tabs>.active>a,.tabs-below>.nav-tabs>.active>a:hover,.tabs-below>.nav-tabs>.active>a:focus{border-color:transparent #ddd #ddd}.tabs-left>.nav-tabs,.tabs-right>.nav-tabs{padding-bottom:20px;width:220px}.tabs-left>.nav-tabs>li,.tabs-right>.nav-tabs>li{float:none}.tabs-left>.nav-tabs>li:focus,.tabs-right>.nav-tabs>li:focus{outline:0}.tabs-left>.nav-tabs>li>a,.tabs-right>.nav-tabs>li>a{margin-right:0;margin-bottom:3px}.tabs-left>.nav-tabs>li>a:focus,.tabs-right>.nav-tabs>li>a:focus{outline:0}.tabs-left>.tab-content,.tabs-right>.tab-content{border-radius:0 4px 4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);-moz-box-shadow:0 1px 1px rgba(0,0,0,.05);box-shadow:0 1px 1px rgba(0,0,0,.05);border:1px solid #ddd;overflow:hidden;padding:10px 15px}.tabs-left>.nav-tabs{float:left;margin-right:-1px}.tabs-left>.nav-tabs>li>a{border-radius:4px 0 0 4px}.tabs-left>.nav-tabs>li>a:hover,.tabs-left>.nav-tabs>li>a:focus{border-color:#eee #ddd #eee #eee}.tabs-left>.nav-tabs>.active>a,.tabs-left>.nav-tabs>.active>a:hover,.tabs-left>.nav-tabs>.active>a:focus{border-color:#ddd transparent #ddd #ddd;-webkit-box-shadow:-1px 1px 1px rgba(0,0,0,.05);-moz-box-shadow:-1px 1px 1px rgba(0,0,0,.05);box-shadow:-1px 1px 1px rgba(0,0,0,.05)}.tabs-right>.nav-tabs{float:right;margin-left:-1px}.tabs-right>.nav-tabs>li>a{border-radius:0 4px 4px 0}.tabs-right>.nav-tabs>li>a:hover,.tabs-right>.nav-tabs>li>a:focus{border-color:#eee #eee #eee #ddd;-webkit-box-shadow:1px 1px 1px rgba(0,0,0,.05);-moz-box-shadow:1px 1px 1px rgba(0,0,0,.05);box-shadow:1px 1px 1px rgba(0,0,0,.05)}.tabs-right>.nav-tabs>.active>a,.tabs-right>.nav-tabs>.active>a:hover,.tabs-right>.nav-tabs>.active>a:focus{border-color:#ddd #ddd #ddd transparent}th.checkbox,td.checkbox,th.radio,td.radio{display:table-cell}.views-display-settings .label{font-size:100%;color:#666}.views-display-settings .footer{padding:0;margin:4px 0 0}.views-exposed-form .views-exposed-widget .btn{margin-top:1.8em}table .radio input[type=radio],table .checkbox input[type=checkbox]{max-width:inherit}.form-horizontal .form-group label{position:relative;min-height:1px;margin-top:0;margin-bottom:0;padding-top:7px;padding-left:15px;padding-right:15px;text-align:right}@media (min-width:768px){.form-horizontal .form-group label{float:left;width:16.66666667%}}.alert a{font-weight:700}.alert-success a{color:#2b542c}.alert-info a{color:#245269}.alert-warning a{color:#66512c}.alert-danger a{color:#843534}div.image-style-new,div.image-style-new div{display:block}div.image-style-new div.input-group{display:table}td.module,.table-striped>tbody>tr:nth-child(odd)>td.module,.table>tbody>tr>td.module{background:#ddd;font-weight:700}.book-toc>.dropdown-menu{overflow:hidden}.book-toc>.dropdown-menu>.dropdown-header{white-space:nowrap}.book-toc>.dropdown-menu>li:nth-child(1)>a{font-weight:700}.book-toc>.dropdown-menu .dropdown-menu{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;border:0;display:block;font-size:12px;margin:0;padding:0;position:static;width:100%}.book-toc>.dropdown-menu .dropdown-menu>li{padding-left:20px}.book-toc>.dropdown-menu .dropdown-menu>li>a{margin-left:-40px;padding-left:60px}#features-filter .form-item.form-type-checkbox{padding-left:20px}fieldset.features-export-component{font-size:12px}html.js #features-export-form fieldset.features-export-component,fieldset.features-export-component{margin:0 0 10px}fieldset.features-export-component .panel-heading{padding:5px 10px}fieldset.features-export-component .panel-heading a.panel-title{font-size:12px;font-weight:500;margin:-5px -10px;padding:5px 10px}fieldset.features-export-component .panel-body{padding:0 10px}div.features-export-list{margin:-11px 0 10px;padding:0 10px}fieldset.features-export-component .component-select .form-type-checkbox,div.features-export-list .form-type-checkbox{line-height:1em;margin:5px 5px 5px 0!important;min-height:0;padding:3px 3px 3px 25px!important}fieldset.features-export-component .component-select .form-type-checkbox input[type=checkbox],div.features-export-list .form-type-checkbox input[type=checkbox]{margin-top:0}
\ No newline at end of file
+html.overlay-open .navbar-fixed-top{z-index:400}html.js fieldset.collapsed{height:auto}html.js input.form-autocomplete{background-image:none}body{position:relative}body.admin-expanded.admin-vertical.admin-nw .navbar,body.admin-expanded.admin-vertical.admin-sw .navbar{margin-left:260px}body.navbar-is-fixed-top{padding-top:64px!important}body.navbar-is-fixed-bottom{padding-bottom:64px!important}body.toolbar{padding-top:30px!important}body.toolbar .navbar-fixed-top{top:30px}body.toolbar.navbar-is-fixed-top{padding-top:94px!important}body.toolbar-drawer{padding-top:64px!important}body.toolbar-drawer .navbar-fixed-top{top:64px}body.toolbar-drawer.navbar-is-fixed-top{padding-top:128px!important}body.admin-menu .navbar-fixed-top{top:29px}body.admin-menu.navbar-is-fixed-top{padding-top:93px!important}body div#admin-toolbar{z-index:1600}body #toolbar,body #admin-menu,body #admin-toolbar{-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}body #admin-menu{margin:0;padding:0;position:fixed;z-index:1600}body #admin-menu .dropdown li{line-height:normal}.navbar.container{margin-top:20px}@media screen and (min-width:768px){.navbar.container{max-width:720px}}@media screen and (min-width:992px){.navbar.container{max-width:940px}}@media screen and (min-width:1200px){.navbar.container{max-width:1140px}}.navbar.container>.container{margin:0;padding:0;width:auto}#overlay-container,.overlay-modal-background,.overlay-element{z-index:1500}#toolbar{z-index:1600}.modal{z-index:1620}.modal-dialog{z-index:1630}.modal-backdrop{z-index:1610}.footer{margin-top:45px;padding-top:35px;padding-bottom:36px;border-top:1px solid #E5E5E5}.element-invisible{margin:0;padding:0;width:1px}.navbar .logo{margin-right:-15px;padding-left:15px;padding-right:15px}@media screen and (min-width:768px){.navbar .logo{margin-right:0;padding-left:0}}ul.secondary{float:left}@media screen and (min-width:768px){ul.secondary{float:right}}.page-header{margin-top:0}.block:first-child h2.block-title{margin-top:0}p:last-child{margin-bottom:0}.region-help>.glyphicon{font-size:18px;float:left;margin:-.05em .5em 0 0}.region-help .block{overflow:hidden}form#search-block-form{margin:0}.navbar #block-search-form{float:none;margin:5px 0 5px 5px}@media screen and (min-width:992px){.navbar #block-search-form{float:right}}.navbar-search .control-group{margin-bottom:0}ul.action-links{margin:12px 0;padding:0}ul.action-links li{display:inline;margin:0;padding:0 6px 0 0}ul.action-links .glyphicon{padding-right:.5em}input,textarea,select,.uneditable-input{max-width:100%;width:auto}input.error{color:#b94a48;border-color:#ebccd1}fieldset legend.panel-heading{float:left;line-height:1em;margin:0}fieldset .panel-body{clear:both}fieldset .panel-heading a.panel-title{color:inherit;display:block;margin:-10px -15px;padding:10px 15px}fieldset .panel-heading a.panel-title:hover{text-decoration:none}.form-actions{clear:both}.resizable-textarea textarea{border-radius:4px 4px 0 0}.radio:first-child,.checkbox:first-child{margin-top:0}.radio:last-child,.checkbox:last-child{margin-bottom:0}.help-block,.control-group .help-inline{color:#999;font-size:12px;margin:5px 0 10px;padding:0}.panel-heading{display:block}a.tabledrag-handle .handle{height:auto;width:auto}.error{color:#b94a48}div.error,table tr.error{background-color:#f2dede;color:#b94a48}.control-group.error{background:0}.control-group.error label,.control-group.error .control-label{color:#b94a48;font-weight:600}.control-group.error input,.control-group.error textarea,.control-group.error select,.control-group.error .uneditable-input{color:#555;border:1px solid #ccc}.control-group.error .help-block,.control-group.error .help-inline{color:#333}.list-inline>li.first{padding-left:0}.nav-tabs{margin-bottom:10px}ul li.collapsed,ul li.expanded,ul li.leaf{list-style:none;list-style-image:none}.tabs--secondary{margin:0 0 10px}.submitted{margin-bottom:1em;font-style:italic;font-weight:400;color:#777}.password-strength{width:17em;float:right;margin-top:1.4em}.password-strength-title{display:inline}.password-strength-text{float:right;font-weight:700}.password-indicator{background-color:#949494;height:.3em;width:100%}.password-indicator div{height:100%;width:0;background-color:#999}input.password-confirm,input.password-field{width:16em;margin-bottom:.4em}div.password-confirm{float:right;margin-top:1.5em;visibility:hidden;width:17em}div.form-item div.password-suggestions{padding:.2em .5em;margin:.7em 0;width:38.5em;border:1px solid #B4B4B4}div.password-suggestions ul{margin-bottom:0}.confirm-parent,.password-parent{clear:left;margin:0;width:36.3em}.progress-wrapper .progress{margin-bottom:10px}.pagination ul>li>a.progress-disabled{float:left}.form-autocomplete .glyphicon{color:#999;font-size:120%}.form-autocomplete .glyphicon.glyphicon-spin{color:#428bca}.form-autocomplete .input-group-addon{background-color:#fff}.ajax-progress .glyphicon{font-size:90%;margin:0 -.25em 0 .5em}.glyphicon-spin{display:inline-block;-moz-animation:spin 1s infinite linear;-o-animation:spin 1s infinite linear;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear}a .glyphicon-spin{display:inline-block;text-decoration:none}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg)}100%{-ms-transform:rotate(359deg)}}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(359deg)}}.glyphicon-refresh{-webkit-transform-origin:50% 45%;-moz-transform-origin:50% 45%;-ms-transform-origin:50% 45%;-o-transform-origin:50% 45%;transform-origin:50% 45%}.tabbable{margin-bottom:20px}.tabs-below>.nav-tabs,.tabs-left>.nav-tabs,.tabs-right>.nav-tabs{border-bottom:0}.tabs-below>.nav-tabs .summary,.tabs-left>.nav-tabs .summary,.tabs-right>.nav-tabs .summary{color:#999;font-size:12px}.tab-pane>.panel-heading{display:none}.tab-content>.active{display:block}.tabs-below>.nav-tabs{border-top:1px solid #ddd}.tabs-below>.nav-tabs>li{margin-top:-1px;margin-bottom:0}.tabs-below>.nav-tabs>li>a{border-radius:0 0 4px 4px}.tabs-below>.nav-tabs>li>a:hover,.tabs-below>.nav-tabs>li>a:focus{border-top-color:#ddd;border-bottom-color:transparent}.tabs-below>.nav-tabs>.active>a,.tabs-below>.nav-tabs>.active>a:hover,.tabs-below>.nav-tabs>.active>a:focus{border-color:transparent #ddd #ddd}.tabs-left>.nav-tabs,.tabs-right>.nav-tabs{padding-bottom:20px;width:220px}.tabs-left>.nav-tabs>li,.tabs-right>.nav-tabs>li{float:none}.tabs-left>.nav-tabs>li:focus,.tabs-right>.nav-tabs>li:focus{outline:0}.tabs-left>.nav-tabs>li>a,.tabs-right>.nav-tabs>li>a{margin-right:0;margin-bottom:3px}.tabs-left>.nav-tabs>li>a:focus,.tabs-right>.nav-tabs>li>a:focus{outline:0}.tabs-left>.tab-content,.tabs-right>.tab-content{border-radius:0 4px 4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);-moz-box-shadow:0 1px 1px rgba(0,0,0,.05);box-shadow:0 1px 1px rgba(0,0,0,.05);border:1px solid #ddd;overflow:hidden;padding:10px 15px}.tabs-left>.nav-tabs{float:left;margin-right:-1px}.tabs-left>.nav-tabs>li>a{border-radius:4px 0 0 4px}.tabs-left>.nav-tabs>li>a:hover,.tabs-left>.nav-tabs>li>a:focus{border-color:#eee #ddd #eee #eee}.tabs-left>.nav-tabs>.active>a,.tabs-left>.nav-tabs>.active>a:hover,.tabs-left>.nav-tabs>.active>a:focus{border-color:#ddd transparent #ddd #ddd;-webkit-box-shadow:-1px 1px 1px rgba(0,0,0,.05);-moz-box-shadow:-1px 1px 1px rgba(0,0,0,.05);box-shadow:-1px 1px 1px rgba(0,0,0,.05)}.tabs-right>.nav-tabs{float:right;margin-left:-1px}.tabs-right>.nav-tabs>li>a{border-radius:0 4px 4px 0}.tabs-right>.nav-tabs>li>a:hover,.tabs-right>.nav-tabs>li>a:focus{border-color:#eee #eee #eee #ddd;-webkit-box-shadow:1px 1px 1px rgba(0,0,0,.05);-moz-box-shadow:1px 1px 1px rgba(0,0,0,.05);box-shadow:1px 1px 1px rgba(0,0,0,.05)}.tabs-right>.nav-tabs>.active>a,.tabs-right>.nav-tabs>.active>a:hover,.tabs-right>.nav-tabs>.active>a:focus{border-color:#ddd #ddd #ddd transparent}th.checkbox,td.checkbox,th.radio,td.radio{display:table-cell}.views-display-settings .label{font-size:100%;color:#666}.views-display-settings .footer{padding:0;margin:4px 0 0}table .radio input[type=radio],table .checkbox input[type=checkbox]{max-width:inherit}.form-horizontal .form-group label{position:relative;min-height:1px;margin-top:0;margin-bottom:0;padding-top:7px;padding-left:15px;padding-right:15px;text-align:right}@media (min-width:768px){.form-horizontal .form-group label{float:left;width:16.666666666666664%}}.alert a{font-weight:700}.alert-success a{color:#356635}.alert-info a{color:#2d6987}.alert-warning a{color:#a47e3c}.alert-danger a{color:#953b39}
\ No newline at end of file
diff --git a/includes/alter.inc b/includes/alter.inc
deleted file mode 100644
index c8c73df..0000000
--- a/includes/alter.inc
+++ /dev/null
@@ -1,310 +0,0 @@
-<?php
-/**
- * @file
- * alter.inc
- *
- * Contains various implementations of hook_*_alter().
- */
-
-/**
- * Implements hook_css_alter().
- */
-function bootstrap_css_alter(&$css) {
-  $theme_path = drupal_get_path('theme', 'bootstrap');
-  // Exclude specified CSS files from theme.
-  $excludes = bootstrap_get_theme_info(NULL, 'exclude][css');
-  // Add Bootstrap CDN file and overrides.
-  $bootstrap_cdn = theme_get_setting('bootstrap_cdn');
-  if ($bootstrap_cdn) {
-    // Add CDN.
-    if (theme_get_setting('bootstrap_bootswatch')) {
-      $cdn = '//netdna.bootstrapcdn.com/bootswatch/' . $bootstrap_cdn  . '/' . theme_get_setting('bootstrap_bootswatch') . '/bootstrap.min.css';
-    }
-    else {
-      $cdn = '//netdna.bootstrapcdn.com/bootstrap/' . $bootstrap_cdn  . '/css/bootstrap.min.css';
-    }
-    $css[$cdn] = array(
-      'data' => $cdn,
-      'type' => 'external',
-      'every_page' => TRUE,
-      'media' => 'all',
-      'preprocess' => FALSE,
-      'group' => CSS_THEME,
-      'browsers' => array('IE' => TRUE, '!IE' => TRUE),
-      'weight' => -2,
-    );
-    // Add overrides.
-    $override = $theme_path . '/css/overrides.css';
-    $css[$override] = array(
-      'data' => $override,
-      'type' => 'file',
-      'every_page' => TRUE,
-      'media' => 'all',
-      'preprocess' => TRUE,
-      'group' => CSS_THEME,
-      'browsers' => array('IE' => TRUE, '!IE' => TRUE),
-      'weight' => -1,
-    );
-  }
-  if (!empty($excludes)) {
-    $css = array_diff_key($css, drupal_map_assoc($excludes));
-  }
-}
-
-/**
- * Implements hook_element_info_alter().
- */
-function bootstrap_element_info_alter(&$elements) {
-  foreach ($elements as &$element) {
-    // Setup a default "icon" variable. This allows #icon to be passed
-    // to every template and theme function.
-    // @see https://drupal.org/node/2219965
-    if (!isset($element['#icon'])) {
-      $element['#icon'] = NULL;
-    }
-    if (!isset($element['#icon_position'])) {
-      $element['#icon_position'] = 'before';
-    }
-
-    // Pre-render input elements.
-    if (!empty($element['#input'])) {
-      $element['#pre_render'][] = '_bootstrap_pre_render_input';
-    }
-
-    // Process all form elements.
-    $element['#process'][] = '_bootstrap_process_element';
-
-    // Process fieldset elements.
-    if (!empty($element['#type']) && $element['#type'] === 'fieldset') {
-      $element['#theme_wrappers'] = array('bootstrap_panel');
-    }
-    if (!empty($element['#theme']) && $element['#theme'] === 'fieldset') {
-      $element['#theme'] = 'bootstrap_panel';
-    }
-
-    // Replace #process function.
-    if (!empty($element['#process']) && ($key = array_search('form_process_fieldset', $element['#process'])) !== FALSE) {
-      $element['#process'][$key] = '_bootstrap_process_fieldset';
-    }
-
-    // Replace #pre_render function.
-    if (!empty($element['#pre_render']) && ($key = array_search('form_pre_render_fieldset', $element['#pre_render'])) !== FALSE) {
-      $element['#pre_render'][$key] = '_bootstrap_pre_render_fieldset';
-    }
-
-    // Replace #theme_wrappers function.
-    if (!empty($element['#theme_wrappers']) && ($key = array_search('fieldset', $element['#theme_wrappers'])) !== FALSE) {
-      $element['#theme_wrappers'][$key] = 'bootstrap_panel';
-    }
-  }
-}
-
-/**
- * Implements hook_form_alter().
- */
-function bootstrap_form_alter(array &$form, array &$form_state = array(), $form_id = NULL) {
-  if ($form_id) {
-    switch ($form_id) {
-      case 'system_theme_settings':
-        // Include the settings form here.
-        bootstrap_include('bootstrap', 'includes/settings.inc');
-        _bootstrap_settings_form($form, $form_state);
-        break;
-
-      case 'search_form':
-        // Add a clearfix class so the results don't overflow onto the form.
-        $form['#attributes']['class'][] = 'clearfix';
-
-        // Remove container-inline from the container classes.
-        $form['basic']['#attributes']['class'] = array();
-
-        // Hide the default button from display.
-        $form['basic']['submit']['#attributes']['class'][] = 'element-invisible';
-
-        // Implement a theme wrapper to add a submit button containing a search
-        // icon directly after the input element.
-        $form['basic']['keys']['#theme_wrappers'] = array('bootstrap_search_form_wrapper');
-        $form['basic']['keys']['#title'] = '';
-        $form['basic']['keys']['#attributes']['placeholder'] = t('Search');
-        break;
-
-      case 'search_block_form':
-        $form['#attributes']['class'][] = 'form-search';
-
-        $form['search_block_form']['#title'] = '';
-        $form['search_block_form']['#attributes']['placeholder'] = t('Search');
-
-        // Hide the default button from display and implement a theme wrapper
-        // to add a submit button containing a search icon directly after the
-        // input element.
-        $form['actions']['submit']['#attributes']['class'][] = 'element-invisible';
-        $form['search_block_form']['#theme_wrappers'] = array('bootstrap_search_form_wrapper');
-
-        // Apply a clearfix so the results don't overflow onto the form.
-        $form['#attributes']['class'][] = 'content-search';
-        break;
-
-      case 'image_style_form':
-        $form['effects']['new']['new']['#input_group_button'] = TRUE;
-        break;
-
-      case 'path_admin_filter_form':
-        $form['basic']['filter']['#input_group_button'] = TRUE;
-        break;
-    }
-
-  }
-}
-
-/**
- * Implements hook_js_alter().
- */
-function bootstrap_js_alter(&$js) {
-  // Exclude specified JavaScript files from theme.
-  $excludes = bootstrap_get_theme_info(NULL, 'exclude][js');
-
-  $theme_path = drupal_get_path('theme', 'bootstrap');
-
-  // Add or replace JavaScript files when matching paths are detected.
-  // Replacement files must begin with '_', like '_node.js'.
-  $files = _bootstrap_file_scan_directory($theme_path . '/js', '/\.js$/');
-  foreach ($files as $file) {
-    $path = str_replace($theme_path . '/js/', '', $file->uri);
-    // Detect if this is a replacement file.
-    $replace = FALSE;
-    if (preg_match('/^[_]/', $file->filename)) {
-      $replace = TRUE;
-      $path = dirname($path) . '/' . preg_replace('/^[_]/', '', $file->filename);
-    }
-    $matches = array();
-    if (preg_match('/^modules\/([^\/]*)/', $path, $matches)) {
-      if (!module_exists($matches[1])) {
-        continue;
-      }
-      else {
-        $path = str_replace('modules/' . $matches[1], drupal_get_path('module', $matches[1]), $path);
-      }
-    }
-    // Path should always exist to either add or replace JavaScript file.
-    if (!empty($js[$path])) {
-      // Replace file.
-      if ($replace) {
-        $js[$file->uri] = $js[$path];
-        $js[$file->uri]['data'] = $file->uri;
-        unset($js[$path]);
-      }
-      // Add file.
-      else {
-        $js[$file->uri] = drupal_js_defaults($file->uri);
-        $js[$file->uri]['group'] = JS_THEME;
-      }
-    }
-  }
-
-  // Ensure jQuery Once is always loaded.
-  // @see https://drupal.org/node/2149561
-  if (empty($js['misc/jquery.once.js'])) {
-    $jquery_once = drupal_get_library('system', 'jquery.once');
-    $js['misc/jquery.once.js'] = $jquery_once['js']['misc/jquery.once.js'];
-    $js['misc/jquery.once.js'] += drupal_js_defaults('misc/jquery.once.js');
-  }
-
-  // Always add bootstrap.js last.
-  $bootstrap = $theme_path . '/js/bootstrap.js';
-  $js[$bootstrap] = drupal_js_defaults($bootstrap);
-  $js[$bootstrap]['group'] = JS_THEME;
-  $js[$bootstrap]['scope'] = 'footer';
-
-  if (!empty($excludes)) {
-    $js = array_diff_key($js, drupal_map_assoc($excludes));
-  }
-
-  // Add Bootstrap settings.
-  $js['settings']['data'][]['bootstrap'] = array(
-    'anchorsFix' => theme_get_setting('bootstrap_anchors_fix'),
-    'anchorsSmoothScrolling' => theme_get_setting('bootstrap_anchors_smooth_scrolling'),
-    'popoverEnabled' => theme_get_setting('bootstrap_popover_enabled'),
-    'popoverOptions' => array(
-      'animation' => (int) theme_get_setting('bootstrap_popover_animation'),
-      'html' => (int) theme_get_setting('bootstrap_popover_html'),
-      'placement' => theme_get_setting('bootstrap_popover_placement'),
-      'selector' => theme_get_setting('bootstrap_popover_selector'),
-      'trigger' => implode(' ', array_filter(array_values((array) theme_get_setting('bootstrap_popover_trigger')))),
-      'triggerAutoclose' => (int) theme_get_setting('bootstrap_popover_trigger_autoclose'),
-      'title' => theme_get_setting('bootstrap_popover_title'),
-      'content' => theme_get_setting('bootstrap_popover_content'),
-      'delay' => (int) theme_get_setting('bootstrap_popover_delay'),
-      'container' => theme_get_setting('bootstrap_popover_container'),
-    ),
-    'tooltipEnabled' => theme_get_setting('bootstrap_tooltip_enabled'),
-    'tooltipOptions' => array(
-      'animation' => (int) theme_get_setting('bootstrap_tooltip_animation'),
-      'html' => (int) theme_get_setting('bootstrap_tooltip_html'),
-      'placement' => theme_get_setting('bootstrap_tooltip_placement'),
-      'selector' => theme_get_setting('bootstrap_tooltip_selector'),
-      'trigger' => implode(' ', array_filter(array_values((array) theme_get_setting('bootstrap_tooltip_trigger')))),
-      'delay' => (int) theme_get_setting('bootstrap_tooltip_delay'),
-      'container' => theme_get_setting('bootstrap_tooltip_container'),
-    ),
-  );
-
-  // Add CDN.
-  if (theme_get_setting('bootstrap_cdn')) {
-    $cdn = '//netdna.bootstrapcdn.com/bootstrap/' . theme_get_setting('bootstrap_cdn')  . '/js/bootstrap.min.js';
-    $js[$cdn] = drupal_js_defaults();
-    $js[$cdn]['data'] = $cdn;
-    $js[$cdn]['type'] = 'external';
-    $js[$cdn]['every_page'] = TRUE;
-    $js[$cdn]['weight'] = -100;
-  }
-}
-
-/**
- * Implements hook_icon_bundle_list_alter().
- */
-function bootstrap_icon_bundle_list_alter(&$build, $bundle) {
-  if (theme_get_setting('bootstrap_tooltip_enabled')) {
-    foreach ($build as &$icon) {
-      $icon['#attributes']['data-toggle'] = 'tooltip';
-      $icon['#attributes']['data-placement'] = 'bottom';
-    }
-  }
-}
-
-/**
- * Implements hook_menu_local_tasks_alter().
- */
-function bootstrap_menu_local_tasks_alter(&$data, &$router_item, $root_path) {
-  if (!empty($data['actions']['output'])) {
-    $items = array();
-    foreach ($data['actions']['output'] as $item) {
-      $items[] = array(
-        'data' => $item,
-      );
-    }
-    $data['actions']['output'] = array(
-      '#theme' => 'item_list__action_links',
-      '#items' => $items,
-      '#attributes' => array(
-        'class' => array('action-links'),
-      ),
-    );
-  }
-}
-
-/**
- * Implements hook_js_callback_filter_xss_alter().
- */
-function bootstrap_js_callback_filter_xss_alter(array &$allowed_tags = array()) {
-  $allowed_tags[] = 'button';
-}
-
-/**
- * Include #pre_render callbacks for elements.
- */
-bootstrap_include('bootstrap', 'includes/pre-render.inc');
-
-/**
- * Include #process callbacks for elements.
- */
-bootstrap_include('bootstrap', 'includes/process.inc');
diff --git a/includes/bootstrap.drush.inc b/includes/bootstrap.drush.inc
deleted file mode 100644
index 511fa88..0000000
--- a/includes/bootstrap.drush.inc
+++ /dev/null
@@ -1,1000 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap.drush.inc
- *
- * Provides Drush integration.
- */
-
-require_once dirname(__FILE__) . '/common.inc';
-
-/**
- * Implements hook_drush_command().
- */
-function bootstrap_drush_command() {
-  $items['bootstrap-subtheme'] = array(
-    'description' => dt('Creates a Bootstrap subtheme.'),
-    'arguments' => array(
-      'name' => dt('The name of your subtheme.'),
-    ),
-    'options' => array(
-      'destination' => dt('The destination of your subtheme. Defaults to "sites/all/themes".'),
-      'machine-name' => dt('The machine-readable name of your subtheme. This will be auto-generated from the human-readable name if omitted.'),
-      'starterkit' => dt('The starterkit that your subtheme should use. Defaults to "cdn".'),
-      'basetheme' => dt('Specifies a custom base theme. Defaults to "bootstrap".'),
-      'enable' => dt('Automatically enable the subtheme after creation.'),
-      'set-default' => dt('Automatically enable the subtheme after creation and make it the default theme.'),
-      'no-readme' => dt('Skips readme files when generating the subtheme.'),
-      'with-libraries' => dt("Execute the libraries.make file upon completion."),
-    ),
-    'examples' => array(
-      'drush bootstrap-subtheme "My Theme"' => dt('Creates a Bootstrap subtheme called "My Theme".'),
-      'drush bootstrap-subtheme "My Theme" --destination=sites/example.com/themes' => dt('Creates a Bootstrap subtheme called "My Theme" in sites/example.com/themes.'),
-      'drush bootstrap-subtheme "My Theme" --basetheme=my_custom_basetheme' => dt('Uses the default starterkit from a custom basetheme to create a Bootstrap subtheme called "My Theme" in sites/all/themes.'),
-      'drush bootstrap-subtheme "My Theme" --basetheme=my_custom_basetheme --starterkit=my_custom_starterkit' => dt('Uses the my_custom_starterkit from a custom basetheme to create a Bootstrap subtheme called "My Theme" in sites/all/themes.'),
-    ),
-    'aliases' => array('bss'),
-  );
-
-  $items['bootstrap-wizard'] = array(
-    'description' => dt('Guides you through a wizard for generating a Bootstrap subtheme.'),
-    'aliases' => array('bsw'),
-  );
-
-  // @todo Re-enable once SASS sub-themes are supported.
-  // @see https://drupal.org/node/2102895
-  //  $items['bootstrap-guard'] = array(
-  //    'description' => dt('Runs guard for the given theme including Compass and LiveReload by default.'),
-  //    'arguments' => array(
-  //      'name' => dt('The name of your subtheme.'),
-  //    ),
-  //    'options' => array(
-  //      'screen' => dt('Run guard watch in a detached screen.'),
-  //      'force-polling' => dt('Polling is required for making guard watch work with remote file systems e.g. in case of virtual environments where guard runs on the guest but the files are modified on the host.'),
-  //      'latency' => dt("Sometimes it seems to be required to set a latency (e.g. 5) if working with --force-polling because otherwise file changes are detected twice. Hence, not setting a latency might affect your system performance."),
-  //    ),
-  //    'aliases' => array('bsg'),
-  //  );
-
-  // @todo Re-enable once settings have been figured out.
-  /*
-  $items['bootstrap-export'] = array(
-    'description' => dt('Exports the theme settings of a given theme from the database to the .info file.'),
-    'arguments' => array(
-      'theme' => dt('The machine-readable name of the theme to export the theme settings for.'),
-    ),
-    'options' => array(
-      'revert' => dt('Purges the theme settings from the database after exporting them to the .info file.'),
-    ),
-    'examples' => array(
-      'drush bootstrap-export foo' => dt('Exports the theme settings of the "foo" theme to the "foo.info" file in that theme.'),
-      'drush bootstrap-export foo --revert' => dt('Purges the theme settings of the "foo" theme from the database after exporting them to the .info file.'),
-    ),
-    'aliases' => array('bse'),
-  );
-
-  $items['bootstrap-revert'] = array(
-    'description' => dt('Reverts the theme settings of a given theme by deleting them from the database.'),
-    'arguments' => array(
-      'theme' => dt('The machine-readable name of the theme to revert the theme settings for.'),
-    ),
-    'options' => array(
-      'all' => dt('Reverts the theme settings of all Bootstrap sub-themes.'),
-    ),
-    'examples' => array(
-      'drush bootstrap-revert foo' => dt('Reverts the theme settings of the "foo" theme.'),
-    ),
-    'aliases' => array('bsr'),
-  );
-  */
-
-  return $items;
-}
-
-/**
- * Implements hook_drush_help().
- */
-function bootstrap_drush_help($section) {
-  switch ($section) {
-    case 'drush:bootstrap-subtheme':
-      return dt('Generates a Bootstrap subtheme.');
-
-    case 'drush:bootstrap-wizard':
-      return dt('Guides you through a wizard for generating a Bootstrap subtheme.');
-
-    case 'drush:bootstrap-guard':
-      return dt('Runs guard for the given theme including Compass and LiveReload by default.');
-
-    case 'drush:bootstrap-export':
-      return dt('Exports the theme settings of a given theme.');
-
-    case 'drush:bootstrap-revert':
-      return dt('Reverts the theme settings of a given theme.');
-  }
-}
-
-/**
- * Implements drush_hook_COMMAND_validate().
- */
-function drush_bootstrap_subtheme_validate($name = NULL) {
-  if (!isset($name)) {
-    return drush_set_error('BOOTSTRAP_MISSING_ARGUMENT', dt("You didn't specify a name for the subtheme."));
-  }
-
-  // Rebuild the theme data so that we can safely check for the existence of
-  // themes by using the information provided by list_themes().
-  system_rebuild_theme_data();
-
-  if ($machine_name = drush_get_option('machine-name')) {
-    // Validate the machine-readable name of the theme.
-    if (!is_string($machine_name)) {
-      return drush_set_error('BOOTSTRAP_THEME_NAME_INVALID', dt('The --machine-name option expects a string value.'));
-    }
-
-    if (!preg_match('/^[a-z][a-z0-9_]*$/', $machine_name)) {
-      return drush_set_error('BOOTSTRAP_THEME_NAME_INVALID', dt('The machine name (@name) is invalid. It may only contain lowercase numbers, letters and underscores and must start with a letter.', array(
-        '@name' => $machine_name,
-      )));
-    }
-
-    $themes = list_themes();
-    // Validate that the machine-readable name of the theme is unique.
-    if (isset($themes[$machine_name])) {
-      return drush_set_error('BOOTSTRAP_THEME_ALREADY_EXISTS', dt('A theme with the name @name already exists. The machine-readable name must be unique.', array(
-        '@name' => $machine_name,
-      )));
-    }
-  }
-  // Check if the provided destination exists.
-  $destination = drush_get_option('destination', 'sites/all/themes');
-  if (!is_string($destination)) {
-    return drush_set_error('BOOTSTRAP_DESTINATION_INVALID', dt('The --destination option expects a string value.'));
-  }
-
-  if ($basetheme = drush_get_option('basetheme')) {
-    if (!is_string($basetheme)) {
-      return drush_set_error('BOOTSTRAP_BASETHEME_INVALID', dt('The --basetheme option expects a string value.'));
-    }
-
-    // Check if the base theme exists.
-    if (!array_key_exists($basetheme, list_themes())) {
-      return drush_set_error('BOOTSTRAP_BASETHEME_DOES_NOT_EXIST', dt('The base theme @basetheme does not exist or is invalid.', array(
-        '@basetheme' => $basetheme,
-      )));
-    }
-
-    // Check if the base theme is a Bootstrap theme.
-    if (!array_key_exists('bootstrap', drush_bootstrap_theme_trail($basetheme))) {
-      return drush_set_error('BOOTSTRAP_BASETHEME_INVALID', dt('The given base theme is invalid (it has to be a Bootstrap sub-theme or Bootstrap itself).', array(
-        '@basetheme' => $basetheme,
-      )));
-    }
-  }
-
-  if ($starterkit = drush_get_option('starterkit')) {
-    if (!is_string($starterkit)) {
-      return drush_set_error('BOOTSTRAP_STARTERKIT_INVALID', dt('The --starterkit option expects a string value.'));
-    }
-
-    $basetheme = drush_get_option('basetheme', 'bootstrap');
-
-    // Check if the starterkit exists.
-    if (!array_key_exists($starterkit, drush_bootstrap_find_starterkits($basetheme))) {
-      $themes = list_themes();
-
-      return drush_set_error('BOOTSTRAP_STARTERKIT_DOES_NOT_EXIST', dt('There is no valid @basetheme theme starterkit with the name @starterkit. Did you forget to specify the correct basetheme?', array(
-        '@basetheme' => $themes[$basetheme]->info['name'],
-        '@starterkit' => $starterkit,
-      )));
-    }
-  }
-}
-
-/**
- * Implements drush_hook_COMMAND().
- */
-function drush_bootstrap_subtheme($name) {
-  // Try to generate a machine-readable name. If that fails, prompt for one.
-  if (!$machine_name = drush_get_option('machine-name', drush_bootstrap_generate_theme_name($name))) {
-    drush_print(dt("Sorry, I couldn't generate a machine-readable name for @name. Please use the '--machine-name' option to specify it manually.", array(
-      '@name' => $name,
-    )));
-  }
-
-  $basetheme = drush_get_option('basetheme', 'bootstrap');
-  $starterkits = drush_bootstrap_find_starterkits($basetheme);
-  $starterkit = drush_get_option('starterkit', 'cdn');
-  $starterkit = $starterkits[$starterkit];
-
-  // Check whether the destination path does not exist and bail out if it does
-  // so we don't delete any important data by accident.
-  $destination = drush_get_option('destination', 'sites/all/themes') . '/' . $machine_name;
-  if (file_exists($destination)) {
-    return drush_set_error('BOOTSTRAP_SUBTHEME_PATH', dt('The path @path already exists.', array('@path' => $destination)));
-  }
-
-  // Create a temporary directory so we don't leave any stale files if an
-  // operation fails.
-  $temporary = drush_tempdir() . '/' . $name;
-
-  // Try to copy the starterkit to the destination path of the new subtheme.
-  if (!drush_copy_dir($starterkit['path'], $temporary)) {
-    return drush_set_error('BOOTSTRAP_GENERATE_SUBTHEME', dt('Failed to generate subtheme.'));
-  }
-
-  // Delete the .starterkit.inc file.
-  drush_delete_dir($temporary . '/' . basename($starterkit['file']));
-
-  // Put the name and description for the new subtheme in place.
-  $info = array(
-      'name' => $name,
-      'description' => 'Please provide a description for your theme.',
-      'base theme' => $basetheme,
-    ) + $starterkit['info'];
-
-  // If the starterkit does not provide any regions, use those defined in the
-  // base theme (if any).
-  if (empty($info['regions'])) {
-    // We explicitly avoid reading from the generated theme info array for this
-    // and get the raw, unprocessed .info file data of the base theme instead to
-    // prevent any system- or module-provided regions to leak into our theme's
-    // .info file (e.g. via hook_system_info_alter() as used by the dashboard
-    // module).
-    $basetheme_info = drupal_parse_info_file(drupal_get_path('theme', $basetheme) . "/$basetheme.info");
-    if (!empty($basetheme_info['regions'])) {
-      $info['regions'] = $basetheme_info['regions'];
-    }
-  }
-
-  // Write to the new .info file.
-  $file = $temporary . '/' . $machine_name . '.info';
-  if (!file_put_contents($file, drush_bootstrap_compose_info_file($info))) {
-    return drush_set_error('BOOTSTRAP_GENERATE_SUBTHEME', dt('Failed to generate subtheme.'));
-  }
-
-  // Optionally remove README.txt files.
-  if (drush_get_option('no-readme')) {
-    foreach (file_scan_directory($temporary, '/^README/') as $file) {
-      drush_delete_dir($file->uri);
-    }
-  }
-
-  // Recursively rewrite the file names and contents of all the files that are
-  // now in the subtheme's directory to represent the human- and
-  // machine-readable names of the subtheme.
-  $camel = strtr(ucwords(strtr($machine_name, array('_' => ' ', '.' => '_ '))), array(' ' => ''));
-  $search = array(
-    '/{{ THEME }}/' => $machine_name,
-    '/{{ THEME NAME }}/' => $name,
-    '/{{ THEME SANITIZED }}/' => str_replace('_', '-', $machine_name),
-    '/{{ THEME CAMELCASE }}/' => $camel,
-    '/{{ THEME CAMELCASE LOWER }}/' => lcfirst($camel),
-  );
-
-  if (!drush_bootstrap_rewrite_recursive($temporary, array_keys($search), array_values($search))) {
-    return drush_set_error('BOOTSTRAP_GENERATE_SUBTHEME', dt('Failed to generate subtheme.'));
-  }
-
-  // Move the new subtheme to its destination.
-  if (!drush_op('drush_mkdir', dirname($destination)) || !drush_op('drush_move_dir', $temporary, $destination)) {
-    return drush_set_error('BOOTSTRAP_GENERATE_SUBTHEME', dt('Failed to generate subtheme.'));
-  }
-
-  // Rebuild the theme caches so that  we can do some final tasks.
-  drupal_theme_rebuild();
-  system_rebuild_theme_data();
-
-  if (($default = drush_get_option('set-default')) || !drush_get_option('enable')) {
-    // Enable the subtheme.
-    drush_op('theme_enable', array($machine_name));
-
-    if ($default) {
-      // Make the newly created subtheme the default theme.
-      drush_op('variable_set', 'theme_default', $machine_name);
-    }
-  }
-
-  // Execute the theme's libraries.make file unless disabled.
-  if (drush_get_option('with-libraries') && is_file("$destination/libraries.make")) {
-    drush_op('chdir', $destination);
-    drush_invoke_process('@self', 'make', array('libraries.make'), array(
-      'no-core' => TRUE,
-      'contrib-destination' => '.',
-      'yes' => TRUE,
-    ));
-  }
-
-  drush_log(dt('You have successfully created the theme @theme (@name) in @path.', array(
-    '@theme' => $name,
-    '@name' => $machine_name,
-    '@path' => dirname($destination),
-  )), 'success');
-}
-
-/**
- * Implements drush_hook_COMMAND().
- */
-function drush_bootstrap_wizard() {
-  // Rebuild the theme data so that we can safely check for the existence of
-  // themes by using the information provided by list_themes().
-  system_rebuild_theme_data();
-
-  // Prompt for a theme name.
-  $name = drush_prompt(dt('Please enter the name of the new sub-theme'), 'Bootstrap Subtheme');
-
-  // Try to generate a machine-readable name. If that fails, prompt for one.
-  if (!$machine_name = drush_bootstrap_generate_theme_name($name)) {
-    drush_print(dt("Sorry, I couldn't generate a machine-readable name for @name", array(
-      '@name' => $name,
-    )));
-  }
-  // Prompt for a theme name using the automatically generated default if any.
-  drush_set_option('machine-name', drush_bootstrap_require_valid_theme_name(dt('Please enter a machine-readable name for your new theme'), $machine_name));
-
-  // Prompt for a base theme.
-  if (!$basetheme = drush_bootstrap_theme_choice(dt('Please choose a base theme for your new theme'))) {
-    $basetheme = 'bootstrap';
-  }
-  drush_set_option('basetheme', $basetheme);
-
-  // Let the user choose a starterkit.
-  $starterkits = drush_bootstrap_find_starterkits($basetheme);
-  if (!$starterkit = drush_bootstrap_starterkit_choice($starterkits, dt('Please choose a starterkit for your new theme'))) {
-    $starterkit = 'cdn';
-  }
-  drush_set_option('starterkit', $starterkit);
-
-  // Let the user choose a destination.
-  $destination = drush_prompt(dt('Please choose a destination. This is where your sub-theme will be placed'), 'sites/all/themes');
-  drush_set_option('destination', $destination);
-
-  // Optionally skip readme files when generating the subtheme.
-  drush_set_option('no-readme', !drush_confirm(dt("Do you want to keep the starterkit's readme files?")));
-
-  // Finally, let the user choose to directly enable the subtheme.
-  if ($enable = drush_confirm(dt('Do you want to enable your new theme?'))) {
-    drush_set_option('set-default', drush_confirm(dt('Do you want to make your new theme the default theme?')));
-  }
-  drush_set_option('enable', $enable);
-
-  // Finally, let the user decide whether he/she wants to download the libraries directly.
-  if (is_file("{$starterkits[$starterkit]['path']}/libraries.make")) {
-    drush_set_option('with-libraries', drush_confirm(dt('Do you want to download the libraries defined in libraries.make now?')));
-  }
-
-  drush_invoke('bootstrap-subtheme', $name);
-}
-
-/**
- * Implements drush_hook_COMMAND_validate().
- */
-function drush_bootstrap_export_validate($theme = NULL) {
-  return drush_bootstrap_validate_theme($theme);
-}
-
-/**
- * Implements drush_hook_COMMAND().
- *
- * Exports the theme settings for the given theme from the database and writes
- * them into the .info file of that theme.
- *
- * @param string $theme
- *   (optional) The machine-readable name of a theme.
- *
- * @return bool
- *   TRUE on success, FALSE on failure.
- */
-function drush_bootstrap_export($theme = NULL) {
-  if (!isset($theme) && !$theme = drush_bootstrap_theme_choice(dt('Which theme do you want to export the theme settings for?'))) {
-    return;
-  }
-
-  $themes = list_themes();
-
-  // Insert the theme settings from the database.
-  if (!$settings = variable_get('theme_' . $theme . '_settings')) {
-    if (!drush_confirm(dt('There are no theme settings for @theme stored in the database. Do you want to purge the theme settings from the .info file too?', array('@theme' => $themes[$theme]->info['name'])))) {
-      return;
-    }
-  }
-
-  // Parse the current content of the .info file so we can append the settings
-  // from the database.
-  $path = drupal_get_path('theme', $theme) . '/' . $theme . '.info';
-  $info = drupal_parse_info_file($path);
-
-  unset($info['settings']);
-  if (!empty($settings)) {
-    // Append the exported theme settings to the .info file if there are any.
-    $info['settings'] = $settings;
-  }
-
-  // Write the data to the .info file of the theme.
-  if (drush_op('file_put_contents', $path, drush_bootstrap_compose_info_file($info))) {
-    drush_log(dt('The theme settings for the @theme theme have been exported to the .info file of the theme.', array('@theme' => $themes[$theme]->info['name'])), 'success');
-
-    if (drush_get_option('revert')) {
-      // Revert the theme settings if the 'revert' option is set and they have
-      // been exported successfully. In this case, we invoke the API function
-      // through the drush command to display the messages.
-      drush_invoke_process('@self', 'bootstrap-revert', array($theme));
-    }
-
-    return TRUE;
-  }
-  else {
-    // There was an error while exporting the theme settings.
-    return drush_set_error('BOOTSTRAP_EXPORT_ERROR', dt('An error occurred while trying to export the theme settings for the @theme theme.', array('@theme' => $themes[$theme]->info['name'])));
-  }
-}
-
-/**
- * Implements drush_hook_COMMAND_validate().
- */
-function drush_bootstrap_revert_validate($theme = NULL) {
-  return drush_bootstrap_validate_theme($theme);
-}
-
-/**
- * Implements drush_hook_COMMAND().
- *
- * Delete the theme settings that have been stored in the database and thereby
- * reverts them to the default settings from the .info file.
- *
- * @param string $theme
- *   (optional) The machine-readable name of a theme.
- */
-function drush_bootstrap_revert($theme = NULL) {
-  if (drush_get_option('all')) {
-    // Get a list of all Bootstrap sub-themes.
-    $themes = array();
-    foreach (list_themes() as $key => $info) {
-      $trail = drush_bootstrap_theme_trail($key);
-      if (array_key_exists('bootstrap', $trail)) {
-        $themes[$key] = $info->info['name'];
-      }
-    }
-
-    // Get confirmation from user.
-    drush_print(dt('The settings for the following themes will be reverted: @themes', array('@themes' => implode(', ', $themes))));
-    if (!drush_confirm(dt('Do you really want to continue?'))) {
-      return;
-    }
-  }
-  elseif (!isset($theme) && !$theme = drush_bootstrap_theme_choice(dt('Which theme do you want to revert the theme settings for?'))) {
-    return;
-  }
-
-  $info = list_themes();
-  $themes = isset($themes) ? $themes : array($theme => $info[$theme]->info['name']);
-  foreach ($themes as $theme => $name) {
-    // Delete the theme settings variable for the given theme.
-    drush_op('variable_del', 'theme_' . $theme . '_settings');
-
-    // Clear the theme cache.
-    cache_clear_all('bootstrap:' . $theme . ':', 'cache', TRUE);
-  }
-
-  // Rebuild the theme data for good measure.
-  drupal_theme_rebuild();
-  system_rebuild_theme_data();
-
-  drush_log(dt('You have successfully reverted the theme settings for these themes: @themes.', array('@themes' => implode(', ', $themes))), 'success');
-}
-
-/**
- * Implements drush_hook_COMMAND_validate().
- */
-function drush_bootstrap_guard_validate($theme = NULL) {
-  return drush_bootstrap_validate_theme($theme);
-}
-
-/**
- * Implements drush_hook_COMMAND().
- *
- * Starts guard for the given theme for compass, theme registry rebuild and
- * livereload.
- *
- * @param string $theme
- *   (optional) The machine-readable name of a theme.
- */
-function drush_bootstrap_guard($theme = NULL) {
-  if (!isset($theme) && !$theme = drush_bootstrap_theme_choice(dt('Which theme do you want to run Guard for?'))) {
-    return;
-  }
-
-  // Check if Ruby is installed.
-  drush_shell_exec('ruby --version');
-  $output = reset(drush_shell_exec_output());
-  $matches = array();
-  if (!preg_match('/^ruby ([0-9][0-9\.]*)/', $output, $matches)) {
-    // Ruby was not found on this machine.
-    return drush_set_error(dt('You have to install Ruby version 1.9 or newer.'));
-  }
-  elseif (!version_compare($matches[1], '1.8', '>=')) {
-    // Ruby is outdated.
-    return drush_set_error(dt('The installed version of Ruby (@version) is outdated. Please upgrade to version 1.9 or newer.', array(
-      '@version' => $matches[1],
-    )));
-  }
-
-  // Check if Rubygems is installed.
-  drush_shell_exec('gem --version');
-  $output = reset(drush_shell_exec_output());
-  $matches = array();
-  if (!preg_match('/^[0-9][0-9\.]*$/', $output, $matches)) {
-    // Rubygems was not found on this machine.
-    return drush_set_error(dt('You have to install Rubygems version 1.8 or newer.'));
-  }
-  elseif (!version_compare($matches[0], '1.8', '>=')) {
-    // Rubygems is outdated.
-    return drush_set_error(dt('The installed version of Rubygems (@version) is outdated. Please upgrade to version 1.8 or newer.', array(
-      '@version' => $matches[0],
-    )));
-  }
-
-  // Check if Bundler is installed.
-  drush_shell_exec('bundle --version');
-  $output = reset(drush_shell_exec_output());
-  $matches = array();
-  if (!preg_match('/^Bundler version ([0-9][0-9\.]*)/', $output, $matches)) {
-    // Bundler was not found on this machine.
-    return drush_set_error(dt('You have to install Bundler version 1.2 or newer.'));
-  }
-  elseif (!version_compare($matches[1], '1.2', '>=')) {
-    // Bundler is outdated.
-    return drush_set_error(dt('The installed version of Bundler (@version) is outdated. Please upgrade to version 1.2 or newer.', array(
-      '@version' => $matches[1],
-    )));
-  }
-
-  // Retrieve the path to the theme.
-  $path = drupal_get_path('theme', $theme);
-
-  // Output an error message if the gemfiles dependencies are not satisfied.
-  drush_shell_cd_and_exec(DRUPAL_ROOT . '/' . $path, 'bundle check --no-color');
-  $output = drush_shell_exec_output();
-  switch (reset($output)) {
-    case "The Gemfile's dependencies are satisfied":
-      // All is good, we can proceed.
-      break;
-
-    case 'Could not locate Gemfile':
-      return drush_set_error(dt('There was no Gemfile at @path.', array(
-        '@path' => $path,
-      )));
-
-    case "Your Gemfile's dependencies could not be satisfied":
-      // @todo Add prompt for running 'bundle install'.
-    default:
-      return drush_set_error(dt("There was a problem with your setup:\n!error", array(
-        '!error' => implode("\n", $output),
-      )));
-  }
-
-  // This is the command for running guard through bundler.
-  $command = 'bundle exec guard';
-  if (drush_get_option('screen')) {
-    drush_shell_exec('screen --version');
-    if (!preg_match('/^Screen version/', reset(drush_shell_exec_output()))) {
-      // Screen was not found on this machine.
-      return drush_set_error(dt("You have to install 'screen' before you can run 'bootstrap-guard' in a detached screen."));
-    }
-
-    // Check if there is already a screen. Running multiple screens at the same
-    // time ultimately eats up too much performance. This way we ensure that
-    // you don't accidently run the same screen session multiple times.
-    drush_shell_exec('screen -list');
-    foreach (drush_shell_exec_output() as $output) {
-      $output = trim($output);
-      $matches = array();
-      if (preg_match('/^((\d+)\.bootstrap:' . $theme . ':guard)/', $output, $matches)) {
-        $themes = list_themes();
-
-        // Make sure that we only got one screen for each theme at a time.
-        if (drush_confirm(dt("There is already a screen running for @theme. Do you want to restart it?", array('@theme' => $themes[$theme]->name)))) {
-          drush_shell_exec("screen -S $matches[2] -X quit");
-          // We found an existing guard session and killed it.
-          break;
-        }
-        else {
-          // Fine, if the user does not want us to kill the session he has to do
-          // it manually.
-          return drush_set_error(dt("There is already a screen running for the @theme theme (@screen). You have to kill the runing screen with '@command' before you can start a new one.", array(
-            '@theme' => $themes[$theme]->name,
-            '@screen' => $matches[1],
-            '@command' => "screen -S $matches[2] -X quit",
-          )));
-        }
-      }
-    };
-
-    // We want to run the command in a detached (-dmS) screen.
-    $command = "screen -dmS bootstrap:$theme:guard $command";
-  }
-
-  // Polling is required for making guard watch work with remote file systems
-  // e.g. in case of virtual environments where guard runs on the guest but
-  // the files are modified on the host.
-  if (drush_get_option('force-polling')) {
-    $command .= ' --force-polling';
-  }
-
-  // Sometimes it seems to be required to set a latency (e.g. 5) if working with
-  // polling because otherwise the file changes are detected twice. Hence,
-  // not setting a latency might affect your system performance. If it doesn't
-  // simply don't worry about it.
-  if ($latency = drush_get_option('latency')) {
-    $command .= ' --latency ' . $latency;
-  }
-
-  // Change the active directory to the theme folder and run the command there.
-  drush_op('chdir', DRUPAL_ROOT . '/' . drupal_get_path('theme', $theme));
-  drush_shell_exec_interactive($command);
-}
-
-/**
- * Helper function for printing a list of available Bootstrap themes.
- *
- * @param string $message
- *   The message that should be displayed.
- *
- * @return bool|string
- *   The machine-readable name of the chosen theme or FALSE if the operation was
- *   cancelled.
- */
-function drush_bootstrap_theme_choice($message) {
-  $options = array();
-  foreach (list_themes() as $key => $info) {
-    $themes = _bootstrap_get_base_themes($key, TRUE);
-    if (in_array('bootstrap', $themes)) {
-      $parent = count($themes) > 1 ? array_slice($themes, -2, 1) : FALSE;
-      $options[$key] = $info->info['name'] . ($parent ? ' (' . dt('Subtheme of @parent', array('@parent' => reset($parent))) . ')' : '') . ' - ' . strip_tags($info->info['description']);
-    }
-  }
-  return drush_choice($options, $message);
-}
-
-/**
- * Helper function for printing a list of available starterkits.
- *
- * @param array $starterkits
- *   An array of starterkits.
- * @param string $message
- *   The message that should be displayed.
- *
- * @return bool|string
- *   The machine-readable name of the chosen starterkit or FALSE if the
- *   operation was cancelled.
- */
-function drush_bootstrap_starterkit_choice($starterkits, $message) {
-  $themes = list_themes();
-  $options = array();
-  foreach ($starterkits as $key => $info) {
-    $options[$key] = dt('@name: !description (Provided by @provider)', array(
-      '@name' => $info['info']['name'],
-      '!description' => isset($info['info']['description']) ? $info['info']['description'] : dt('No description'),
-      '@provider' => $themes[$info['theme']]->info['name'],
-    ));
-  }
-  return drush_choice($options, $message);
-}
-
-/**
- * Helper function that continuously prompts for a valid machine-readable name.
- *
- * @param string $message
- *   The message that should be displayed.
- * @param string $default
- *   (Optional) The default theme name. Defaults to NULL.
- *
- * @return string
- *   A valid, unique machine-readable name.
- */
-function drush_bootstrap_require_valid_theme_name($message, $default = NULL) {
-  while (TRUE) {
-    // Keep prompting for a machine-name until we get an acceptable value.
-    $prompt = drush_prompt($message, $default);
-
-    if (!preg_match('/^[a-z][a-z0-9_]*$/', $prompt)) {
-      drush_print('The machine-readable name is invalid. It may only contain lowercase numbers, letters and underscores and must start with a letter.');
-    }
-    else {
-      $themes = list_themes();
-      // Validate that the machine-readable name of the theme is unique.
-      if (isset($themes[$prompt])) {
-        drush_print(dt('A theme with the name @name already exists. The machine-readable name must be unique.', array(
-          '@name' => $prompt,
-        )));
-      }
-      else {
-        // The given machine-readable name is valid. Let's proceed.
-        return $prompt;
-      }
-    }
-  }
-}
-
-/**
- * Recursively rewrites (and renames) all files in a given path.
- *
- * @param string $path
- *   The path to rewrite all files in.
- * @param string|array $search
- *   The string(s) to look for when replacing the file names and contents. Can
- *   be an array or a string.
- * @param string|array $replace
- *   The string(s) to replace $search with. Can be an array or a string.
- *
- * @return bool
- *   TRUE if the operation succeeded, FALSE otherwise.
- *
- * @see bootstrap_drush_replace_contents()
- * @see str_replace()
- */
-function drush_bootstrap_rewrite_recursive($path, $search, $replace) {
-  if (!is_dir($path)) {
-    return drush_set_error('INVALID_PATH', dt('The given path @path is not a directory.', array(
-      '!path' => $path,
-    )));
-  }
-
-  // If the file actually is a directory, proceed with the recursion.
-  $directory = new DirectoryIterator($path);
-  foreach ($directory as $item) {
-    if ($item->isDot()) {
-      // Do not process '..' and '.'.
-      continue;
-    }
-
-    // Retrieve the path of the current item.
-    $pathname = $item->getPathname();
-    if ($item->isDir() && !drush_bootstrap_rewrite_recursive($pathname, $search, $replace)) {
-      return FALSE;
-    }
-    elseif ($item->isFile()) {
-      // If it is a file, try to replace its contents.
-      $contents = file_get_contents($pathname);
-      if (($changed = preg_replace($search, $replace, $contents)) === NULL) {
-        return drush_set_error('REWRITE_FAILURE', dt('There was an error while trying to rewrite !path (!search to !replace)', array(
-          '!path' => $pathname,
-          '!search' => $search,
-          '!replace' => $replace,
-        )));
-      }
-
-      if ($contents !== $changed) {
-        file_put_contents($pathname, $changed);
-      }
-    }
-
-    // Try to rename (move) the file if the name was changed.
-    $original = basename($pathname);
-    if (($renamed = preg_replace($search, $replace, $original)) === NULL) {
-      return drush_set_error('REWRITE_FAILURE', dt('There was an error while trying to rewrite !path (!search to !replace)', array(
-        '!path' => $path,
-        '!search' => $search,
-        '!replace' => $replace,
-      )));
-    }
-
-    // Move (rename) if the file or directory name was changed.
-    if ($original !== $renamed) {
-      $new = dirname($pathname) . "/$renamed";
-      if (!drush_move_dir($pathname, $new, TRUE)) {
-        return FALSE;
-      };
-    }
-  }
-
-  return TRUE;
-}
-
-/**
- * Recursively builds an .info file structure from an array.
- *
- * This function will take the current theme information, and create the export
- * based upon the current info file and settings saved within the database.
- *
- * @param array $array
- *   The array to build the .info file from.
- * @param string|bool $prefix
- *   (Optional) Used internally to forward the current prefix (level of nesting)
- *   for the keys. Defaults to NULL.
- *
- * @return string
- *   The full, prettified .info file.
- */
-function drush_bootstrap_compose_info_file($array, $prefix = '') {
-  $info = '';
-  $incremental = !empty($array) && strval(key($array)) === '0' && array_keys($array) === range(0, count($array) - 1);
-  foreach ($array as $key => $value) {
-    if (is_array($value)) {
-      if (empty($prefix)) {
-        $region = ucwords(strtr($key, array('_' => ' ')));
-        $info .= "\n";
-        $info .= "; ========================================\n";
-        $info .= "; $region\n";
-        $info .= "; ========================================\n";
-      }
-
-      $info .= drush_bootstrap_compose_info_file($value, (empty($prefix) ? $key : "{$prefix}[{$key}]"));
-    }
-    else {
-      $key = $incremental ? '' : $key;
-      $value = str_replace("'", "\'", $value);
-      $value = strval($value) === '' ? '"' . $value . '"' : $value;
-      $info .= $prefix ? ("{$prefix}[$key]") : $key;
-      $info .= " = $value\n";
-    }
-  }
-
-  return $info;
-}
-
-/**
- * Retrieve an array of available sites.
- *
- * @return array
- *   An array that contains all the available sites in a multisite environment.
- */
-function drush_bootstrap_sites() {
-  $sites = array();
-  // Look up the available sites by iterating over the contents of the sites
-  // directory.
-  $files = new DirectoryIterator(DRUPAL_ROOT . '/sites');
-  foreach ($files as $file) {
-    // The sites/default folder is not a valid destination.
-    if ($file->isDir() && !$file->isDot() && $file->getFileName() != 'default') {
-      $name = $file->getFileName();
-      $sites[$name] = $name;
-    }
-  }
-  return $sites;
-}
-
-/**
- * Generates a valid machine-readable name for a theme from any string.
- *
- * @param string $string
- *   The string to generate the machine-readable name from.
- *
- * @return string
- *   The generated machine-readable name.
- */
-function drush_bootstrap_generate_theme_name($string) {
-  // Machine-readable names have to start with a lowercase letter.
-  $string = preg_replace('/^[^a-z]+/', '', strtolower($string));
-  // Machine-readable names may only contain alphanumeric characters and
-  // underscores.
-  $string = preg_replace('/[^a-z0-9_]+/', '_', $string);
-  // Trim all trailing and leading underscores.
-  $string = trim($string, '_');
-
-  $themes = list_themes();
-  if (isset($themes[$string])) {
-    $plain = $string;
-    $counter = 0;
-
-    while (isset($themes[$string])) {
-      // Make sure that the machine-readable name of the theme is unique.
-      $string = $plain . '_' . $counter++;
-    }
-  }
-
-  return $string;
-}
-
-/**
- * Helper function for validating a given theme.
- */
-function drush_bootstrap_validate_theme($theme) {
-  if (!isset($theme)) {
-    return;
-  }
-
-  // Rebuild the theme data so that we can safely check for the existence of
-  // themes by using the information provided by list_themes().
-  system_rebuild_theme_data();
-
-  $themes = list_themes();
-  // Check if the given theme exists.
-  if (!isset($themes[$theme])) {
-    return drush_set_error('BOOTSTRAP_THEME_DOES_NOT_EXIST', dt('There is no theme with the name @theme.', array(
-      '@theme' => $theme,
-    )));
-  }
-}
-
-/**
- * Builds the full theme trail (deepest base theme first) for a theme.
- *
- * @param string $theme
- *   (Optional) The key (machine-readable name) of a theme. Defaults to the key
- *   of the current theme.
- *
- * @return array
- *   An array of all themes in the trail, keyed by theme key.
- */
-function drush_bootstrap_theme_trail($theme = NULL) {
-  $theme = isset($theme) ? $theme : $GLOBALS['theme_key'];
-
-  if (($cache = &drupal_static(__FUNCTION__)) && isset($cache[$theme])) {
-    return $cache[$theme];
-  }
-
-  $cache[$theme] = array();
-
-  if ($theme == $GLOBALS['theme'] && isset($GLOBALS['theme_info']->base_themes)) {
-    $cache[$theme] = $GLOBALS['theme_info']->base_themes;
-  }
-
-  $themes = list_themes();
-  if (empty($cache[$theme]) && isset($themes[$theme]->info['base theme'])) {
-    $cache[$theme] = system_find_base_themes($themes, $theme);
-  }
-
-  // Add our current subtheme ($key) to that array.
-  $cache[$theme][$theme] = $themes[$theme]->info['name'];
-
-  return $cache[$theme];
-}
-
-/**
- * Discovers starterkits in a theme.
- *
- * @param string $base_theme
- *   (Optional) The key (machine-readable name) of a theme. Defaults to the key
- *   of the current theme.
- *
- * @return array
- *   An array containing the discovered definitions.
- */
-function drush_bootstrap_find_starterkits($theme = NULL) {
-  $starterkits = array();
-  $theme = isset($theme) ? $theme : $GLOBALS['theme_key'];
-
-  // Retrieve all themes from the theme trail of the given theme.
-  $themes = $theme === FALSE ? list_themes() : drush_bootstrap_theme_trail($theme);
-
-  // Collect paths to all sub-themes grouped by base themes. These will be
-  // used for filtering. This allows base themes to have sub-themes in its
-  // folder hierarchy without affecting the base themes template discovery.
-  $paths = array();
-  foreach (list_themes() as $key => $info) {
-    if (!empty($info->base_theme)) {
-      $paths[$info->base_theme][$key] = dirname($info->filename);
-    }
-  }
-  foreach ($paths as $basetheme => $subthemes) {
-    foreach ($subthemes as $subtheme => $path) {
-      if (isset($paths[$subtheme])) {
-        $paths[$basetheme] = array_merge($paths[$basetheme], $paths[$subtheme]);
-      }
-    }
-  }
-
-  foreach ($themes as $key => $label) {
-    // Retrieve the array of paths that should be ignored for this theme.
-    $ignore = isset($paths[$key]) ? $paths[$key] : array();
-    $path = drupal_get_path('theme', $key);
-
-    foreach (file_scan_directory($path, '/\.starterkit$/', array('key' => 'name')) as $name => $file) {
-      // Ignore sub-theme implementations for the current theme.
-      if (strpos($file->uri, str_replace($ignore, '', $file->uri)) !== 0) {
-        continue;
-      }
-      if ($info = drupal_parse_info_file($file->uri)) {
-        $starterkits[$name] = array(
-          'name' => $name,
-          'path' => dirname($file->uri),
-          'file' => $file->uri,
-          'info' => $info,
-          'theme' => $key,
-        );
-      }
-    }
-  }
-
-  return $starterkits;
-}
diff --git a/includes/common.inc b/includes/common.inc
deleted file mode 100644
index e68113a..0000000
--- a/includes/common.inc
+++ /dev/null
@@ -1,773 +0,0 @@
-<?php
-/**
- * @file
- * common.inc
- *
- * Contains common functionality for the entire base theme.
- */
-
-/**
- * Return information from the .info file of a theme (and possible base themes).
- *
- * @param string $theme_key
- *   The machine name of the theme.
- * @param string $key
- *   The key name of the item to return from the .info file. This value can
- *   include "][" to automatically attempt to traverse any arrays.
- * @param bool $base_themes
- *   Recursively search base themes, defaults to TRUE.
- *
- * @return string|array|false
- *   A string or array depending on the type of value and if a base theme also
- *   contains the same $key, FALSE if no $key is found.
- */
-function bootstrap_get_theme_info($theme_key = NULL, $key = NULL, $base_themes = TRUE) {
-  // If no $theme_key is given, use the current theme if we can determine it.
-  if (!isset($theme_key)) {
-    $theme_key = !empty($GLOBALS['theme_key']) ? $GLOBALS['theme_key'] : FALSE;
-  }
-  if ($theme_key) {
-    $themes = list_themes();
-    if (!empty($themes[$theme_key])) {
-      $theme = $themes[$theme_key];
-      // If a key name was specified, return just that array.
-      if ($key) {
-        $value = FALSE;
-        // Recursively add base theme values.
-        if ($base_themes && isset($theme->base_themes)) {
-          foreach (array_keys($theme->base_themes) as $base_theme) {
-            $value = bootstrap_get_theme_info($base_theme, $key);
-          }
-        }
-        if (!empty($themes[$theme_key])) {
-          $info = $themes[$theme_key]->info;
-          // Allow array traversal.
-          $keys = explode('][', $key);
-          foreach ($keys as $parent) {
-            if (isset($info[$parent])) {
-              $info = $info[$parent];
-            }
-            else {
-              $info = FALSE;
-            }
-          }
-          if (is_array($value)) {
-            if (!empty($info)) {
-              if (!is_array($info)) {
-                $info = array($info);
-              }
-              $value = drupal_array_merge_deep($value, $info);
-            }
-          }
-          else {
-            if (!empty($info)) {
-              if (empty($value)) {
-                $value = $info;
-              }
-              else {
-                if (!is_array($value)) {
-                  $value = array($value);
-                }
-                if (!is_array($info)) {
-                  $info = array($info);
-                }
-                $value = drupal_array_merge_deep($value, $info);
-              }
-            }
-          }
-        }
-        return $value;
-      }
-      // If no info $key was specified, just return the entire info array.
-      return $theme->info;
-    }
-  }
-  return FALSE;
-}
-
-/**
- * Helper function for including theme files.
- *
- * @param string $theme
- *   Name of the theme to use for base path.
- * @param string $path
- *   Path relative to $theme.
- */
-function bootstrap_include($theme, $path) {
-  static $themes = array();
-  if (!isset($themes[$theme])) {
-    $themes[$theme] = drupal_get_path('theme', $theme);
-  }
-  if ($themes[$theme] && ($file = DRUPAL_ROOT . '/' . $themes[$theme] . '/' . $path) && file_exists($file)) {
-    include_once $file;
-  }
-}
-
-/**
- * Helper function for returning whether a theme is Bootstrap based.
- *
- * @param string $theme_key
- *   The machine name of the theme to check, if not set the active theme name
- *   will be used.
- * @param bool $include_theme_key
- *   Whether to append the returned list with $theme_key.
- *
- * @return array
- *   An indexed array of base themes.
- */
-function _bootstrap_get_base_themes($theme_key = NULL, $include_theme_key = FALSE) {
-  static $themes;
-  if (!isset($theme_key)) {
-    $theme_key = $GLOBALS['theme_key'];
-  }
-  if (!isset($themes[$theme_key])) {
-    $themes[$theme_key] = array_unique(array_filter((array) bootstrap_get_theme_info($theme_key, 'base theme')));
-  }
-  if ($include_theme_key) {
-    $themes[$theme_key][] = $theme_key;
-  }
-  return $themes[$theme_key];
-}
-
-/**
- * Helper function that wraps file_scan_directory().
- *
- * Finds all files that match a given mask in a given directory and then caches
- * the results. A general site cache clear will force new scans to be initiated
- * for already cached directories.
- *
- * @param string $dir
- *   The base directory or URI to scan, without trailing slash.
- * @param string $mask
- *   The preg_match() regular expression of the files to find.
- * @param array $options
- *   Additional options to pass to file_scan_directory().
- *
- * @return array
- *   An associative array (keyed on the chosen key) of objects with 'uri',
- *   'filename', and 'name' members corresponding to the matching files.
- *
- * @see file_scan_directory()
- */
-function _bootstrap_file_scan_directory($dir, $mask, array $options = array()) {
-  // Retrieve cached data.
-  $cid = 'theme_registry:bootstrap:files';
-  $files = array();
-  if ($cache = cache_get($cid)) {
-    $files = $cache->data;
-  }
-  // Generate a unique hash for all parameters passed as a change in any of
-  // them would return different results.
-  $hash = drupal_hash_base64(serialize(func_get_args()));
-  if (!isset($files[$hash])) {
-    $files[$hash] = file_scan_directory($dir, $mask, $options);
-    cache_set($cid, $files);
-  }
-  return $files[$hash];
-}
-
-/**
- * Helper function for returning an array of Bootstrap Glyphicons.
- */
-function _bootstrap_glyphicons() {
-  static $icons = array(
-    // Class => Name.
-    'glyphicon-adjust' => 'adjust',
-    'glyphicon-align-center' => 'align-center',
-    'glyphicon-align-justify' => 'align-justify',
-    'glyphicon-align-left' => 'align-left',
-    'glyphicon-align-right' => 'align-right',
-    'glyphicon-arrow-down' => 'arrow-down',
-    'glyphicon-arrow-left' => 'arrow-left',
-    'glyphicon-arrow-right' => 'arrow-right',
-    'glyphicon-arrow-up' => 'arrow-up',
-    'glyphicon-asterisk' => 'asterisk',
-    'glyphicon-backward' => 'backward',
-    'glyphicon-ban-circle' => 'ban-circle',
-    'glyphicon-barcode' => 'barcode',
-    'glyphicon-bell' => 'bell',
-    'glyphicon-bold' => 'bold',
-    'glyphicon-book' => 'book',
-    'glyphicon-bookmark' => 'bookmark',
-    'glyphicon-briefcase' => 'briefcase',
-    'glyphicon-bullhorn' => 'bullhorn',
-    'glyphicon-calendar' => 'calendar',
-    'glyphicon-camera' => 'camera',
-    'glyphicon-certificate' => 'certificate',
-    'glyphicon-check' => 'check',
-    'glyphicon-chevron-down' => 'chevron-down',
-    'glyphicon-chevron-left' => 'chevron-left',
-    'glyphicon-chevron-right' => 'chevron-right',
-    'glyphicon-chevron-up' => 'chevron-up',
-    'glyphicon-circle-arrow-down' => 'circle-arrow-down',
-    'glyphicon-circle-arrow-left' => 'circle-arrow-left',
-    'glyphicon-circle-arrow-right' => 'circle-arrow-right',
-    'glyphicon-circle-arrow-up' => 'circle-arrow-up',
-    'glyphicon-cloud' => 'cloud',
-    'glyphicon-cloud-download' => 'cloud-download',
-    'glyphicon-cloud-upload' => 'cloud-upload',
-    'glyphicon-cog' => 'cog',
-    'glyphicon-collapse-down' => 'collapse-down',
-    'glyphicon-collapse-up' => 'collapse-up',
-    'glyphicon-comment' => 'comment',
-    'glyphicon-compressed' => 'compressed',
-    'glyphicon-copyright-mark' => 'copyright-mark',
-    'glyphicon-credit-card' => 'credit-card',
-    'glyphicon-cutlery' => 'cutlery',
-    'glyphicon-dashboard' => 'dashboard',
-    'glyphicon-download' => 'download',
-    'glyphicon-download-alt' => 'download-alt',
-    'glyphicon-earphone' => 'earphone',
-    'glyphicon-edit' => 'edit',
-    'glyphicon-eject' => 'eject',
-    'glyphicon-envelope' => 'envelope',
-    'glyphicon-euro' => 'euro',
-    'glyphicon-exclamation-sign' => 'exclamation-sign',
-    'glyphicon-expand' => 'expand',
-    'glyphicon-export' => 'export',
-    'glyphicon-eye-close' => 'eye-close',
-    'glyphicon-eye-open' => 'eye-open',
-    'glyphicon-facetime-video' => 'facetime-video',
-    'glyphicon-fast-backward' => 'fast-backward',
-    'glyphicon-fast-forward' => 'fast-forward',
-    'glyphicon-file' => 'file',
-    'glyphicon-film' => 'film',
-    'glyphicon-filter' => 'filter',
-    'glyphicon-fire' => 'fire',
-    'glyphicon-flag' => 'flag',
-    'glyphicon-flash' => 'flash',
-    'glyphicon-floppy-disk' => 'floppy-disk',
-    'glyphicon-floppy-open' => 'floppy-open',
-    'glyphicon-floppy-remove' => 'floppy-remove',
-    'glyphicon-floppy-save' => 'floppy-save',
-    'glyphicon-floppy-saved' => 'floppy-saved',
-    'glyphicon-folder-close' => 'folder-close',
-    'glyphicon-folder-open' => 'folder-open',
-    'glyphicon-font' => 'font',
-    'glyphicon-forward' => 'forward',
-    'glyphicon-fullscreen' => 'fullscreen',
-    'glyphicon-gbp' => 'gbp',
-    'glyphicon-gift' => 'gift',
-    'glyphicon-glass' => 'glass',
-    'glyphicon-globe' => 'globe',
-    'glyphicon-hand-down' => 'hand-down',
-    'glyphicon-hand-left' => 'hand-left',
-    'glyphicon-hand-right' => 'hand-right',
-    'glyphicon-hand-up' => 'hand-up',
-    'glyphicon-hd-video' => 'hd-video',
-    'glyphicon-hdd' => 'hdd',
-    'glyphicon-header' => 'header',
-    'glyphicon-headphones' => 'headphones',
-    'glyphicon-heart' => 'heart',
-    'glyphicon-heart-empty' => 'heart-empty',
-    'glyphicon-home' => 'home',
-    'glyphicon-import' => 'import',
-    'glyphicon-inbox' => 'inbox',
-    'glyphicon-indent-left' => 'indent-left',
-    'glyphicon-indent-right' => 'indent-right',
-    'glyphicon-info-sign' => 'info-sign',
-    'glyphicon-italic' => 'italic',
-    'glyphicon-leaf' => 'leaf',
-    'glyphicon-link' => 'link',
-    'glyphicon-list' => 'list',
-    'glyphicon-list-alt' => 'list-alt',
-    'glyphicon-lock' => 'lock',
-    'glyphicon-log-in' => 'log-in',
-    'glyphicon-log-out' => 'log-out',
-    'glyphicon-magnet' => 'magnet',
-    'glyphicon-map-marker' => 'map-marker',
-    'glyphicon-minus' => 'minus',
-    'glyphicon-minus-sign' => 'minus-sign',
-    'glyphicon-move' => 'move',
-    'glyphicon-music' => 'music',
-    'glyphicon-new-window' => 'new-window',
-    'glyphicon-off' => 'off',
-    'glyphicon-ok' => 'ok',
-    'glyphicon-ok-circle' => 'ok-circle',
-    'glyphicon-ok-sign' => 'ok-sign',
-    'glyphicon-open' => 'open',
-    'glyphicon-paperclip' => 'paperclip',
-    'glyphicon-pause' => 'pause',
-    'glyphicon-pencil' => 'pencil',
-    'glyphicon-phone' => 'phone',
-    'glyphicon-phone-alt' => 'phone-alt',
-    'glyphicon-picture' => 'picture',
-    'glyphicon-plane' => 'plane',
-    'glyphicon-play' => 'play',
-    'glyphicon-play-circle' => 'play-circle',
-    'glyphicon-plus' => 'plus',
-    'glyphicon-plus-sign' => 'plus-sign',
-    'glyphicon-print' => 'print',
-    'glyphicon-pushpin' => 'pushpin',
-    'glyphicon-qrcode' => 'qrcode',
-    'glyphicon-question-sign' => 'question-sign',
-    'glyphicon-random' => 'random',
-    'glyphicon-record' => 'record',
-    'glyphicon-refresh' => 'refresh',
-    'glyphicon-registration-mark' => 'registration-mark',
-    'glyphicon-remove' => 'remove',
-    'glyphicon-remove-circle' => 'remove-circle',
-    'glyphicon-remove-sign' => 'remove-sign',
-    'glyphicon-repeat' => 'repeat',
-    'glyphicon-resize-full' => 'resize-full',
-    'glyphicon-resize-horizontal' => 'resize-horizontal',
-    'glyphicon-resize-small' => 'resize-small',
-    'glyphicon-resize-vertical' => 'resize-vertical',
-    'glyphicon-retweet' => 'retweet',
-    'glyphicon-road' => 'road',
-    'glyphicon-save' => 'save',
-    'glyphicon-saved' => 'saved',
-    'glyphicon-screenshot' => 'screenshot',
-    'glyphicon-sd-video' => 'sd-video',
-    'glyphicon-search' => 'search',
-    'glyphicon-send' => 'send',
-    'glyphicon-share' => 'share',
-    'glyphicon-share-alt' => 'share-alt',
-    'glyphicon-shopping-cart' => 'shopping-cart',
-    'glyphicon-signal' => 'signal',
-    'glyphicon-sort' => 'sort',
-    'glyphicon-sort-by-alphabet' => 'sort-by-alphabet',
-    'glyphicon-sort-by-alphabet-alt' => 'sort-by-alphabet-alt',
-    'glyphicon-sort-by-attributes' => 'sort-by-attributes',
-    'glyphicon-sort-by-attributes-alt' => 'sort-by-attributes-alt',
-    'glyphicon-sort-by-order' => 'sort-by-order',
-    'glyphicon-sort-by-order-alt' => 'sort-by-order-alt',
-    'glyphicon-sound-5-1' => 'sound-5-1',
-    'glyphicon-sound-6-1' => 'sound-6-1',
-    'glyphicon-sound-7-1' => 'sound-7-1',
-    'glyphicon-sound-dolby' => 'sound-dolby',
-    'glyphicon-sound-stereo' => 'sound-stereo',
-    'glyphicon-star' => 'star',
-    'glyphicon-star-empty' => 'star-empty',
-    'glyphicon-stats' => 'stats',
-    'glyphicon-step-backward' => 'step-backward',
-    'glyphicon-step-forward' => 'step-forward',
-    'glyphicon-stop' => 'stop',
-    'glyphicon-subtitles' => 'subtitles',
-    'glyphicon-tag' => 'tag',
-    'glyphicon-tags' => 'tags',
-    'glyphicon-tasks' => 'tasks',
-    'glyphicon-text-height' => 'text-height',
-    'glyphicon-text-width' => 'text-width',
-    'glyphicon-th' => 'th',
-    'glyphicon-th-large' => 'th-large',
-    'glyphicon-th-list' => 'th-list',
-    'glyphicon-thumbs-down' => 'thumbs-down',
-    'glyphicon-thumbs-up' => 'thumbs-up',
-    'glyphicon-time' => 'time',
-    'glyphicon-tint' => 'tint',
-    'glyphicon-tower' => 'tower',
-    'glyphicon-transfer' => 'transfer',
-    'glyphicon-trash' => 'trash',
-    'glyphicon-tree-conifer' => 'tree-conifer',
-    'glyphicon-tree-deciduous' => 'tree-deciduous',
-    'glyphicon-unchecked' => 'unchecked',
-    'glyphicon-upload' => 'upload',
-    'glyphicon-usd' => 'usd',
-    'glyphicon-user' => 'user',
-    'glyphicon-volume-down' => 'volume-down',
-    'glyphicon-volume-off' => 'volume-off',
-    'glyphicon-volume-up' => 'volume-up',
-    'glyphicon-warning-sign' => 'warning-sign',
-    'glyphicon-wrench' => 'wrench',
-    'glyphicon-zoom-in' => 'zoom-in',
-    'glyphicon-zoom-out' => 'zoom-out',
-  );
-  return $icons;
-}
-
-/**
- * Helper function for returning a Bootstrap Glyphicon.
- *
- * @param string $name
- *   The icon name, minus the "glyphicon-" prefix.
- * @param string $default
- *   (Optional) The default value to return.
- *
- * @return string
- *   The HTML markup containing the icon defined by $name, $default value if
- *   icon does not exist or returns empty output for whatever reason.
- */
-function _bootstrap_icon($name, $default = NULL) {
-  $output = NULL;
-  // Ensure the icon specified is a valid Bootstrap Glyphicon.
-  if (_bootstrap_glyphicons_supported() && in_array($name, _bootstrap_glyphicons())) {
-    // Attempt to use the Icon API module, if enabled and it generates output.
-    if (module_exists('icon')) {
-      $output = theme('icon', array('bundle' => 'bootstrap', 'icon' => 'glyphicon-' . $name));
-    }
-    if (empty($output)) {
-      // Mimic the Icon API markup.
-      $attributes = array(
-        'class' => array('icon', 'glyphicon', 'glyphicon-' . $name),
-        'aria-hidden' => 'true',
-      );
-      $output = '<span' . drupal_attributes($attributes) . '></span>';
-    }
-  }
-  return empty($output) && isset($default) ? $default : $output;
-}
-
-/**
- * Helper function for determining if Bootstrap Glyphicons can be used.
- */
-function _bootstrap_glyphicons_supported() {
-  // Use the advanced drupal_static() pattern, since this has the potential to
-  // be called very often by _bootstrap_icon().
-  static $drupal_static_fast;
-  if (!isset($drupal_static_fast)) {
-    $drupal_static_fast['supported'] = &drupal_static(__FUNCTION__);
-    // Get the active theme.
-    $drupal_static_fast['theme'] = variable_get('theme_default', $GLOBALS['theme']);
-  }
-
-  // Get static data.
-  $supported = &$drupal_static_fast['supported'];
-  $theme = &$drupal_static_fast['theme'];
-
-  // Retrieve supported themes.
-  if (!isset($supported)) {
-    $supported = array();
-
-    // Retrieve cached data.
-    $cid = 'theme_registry:bootstrap:icon_support';
-    if (($cache = cache_get($cid)) && !empty($cache->data)) {
-      $supported = $cache->data;
-    }
-
-    if (!isset($supported[$theme])) {
-      // Bootstrap based themes are enabled by default to use CDN. Check if
-      // that is the case here so no file discovery is necessary. If the active
-      // theme does not have this setting, it falls back to the base theme that
-      // does.
-      $supported[$theme] = (bool) theme_get_setting('bootstrap_cdn', $theme);
-
-      // CDN not used, iterate over all of the active (base) themes to determine
-      // if they contain glyphicon font files.
-      if (!$supported[$theme]) {
-        foreach (_bootstrap_get_base_themes($theme, TRUE) as $_theme) {
-          // Scan the theme for files.
-          $fonts = _bootstrap_file_scan_directory(drupal_get_path('theme', $_theme), '/glyphicons-halflings-regular\.(eot|svg|ttf|woff)$/');
-
-          // Fonts found, stop the search.
-          if (!empty($fonts)) {
-            $supported[$theme] = TRUE;
-            break;
-          }
-        }
-      }
-
-      // Cache all supported themes now that this theme is added to the array.
-      cache_set($cid, $supported);
-    }
-  }
-  return $supported[$theme];
-}
-
-/**
- * Helper function for determining whether an element is a button.
- *
- * @param array $element
- *   A renderable element.
- *
- * @return bool
- *   TRUE or FALSE.
- */
-function _bootstrap_is_button($element) {
-  return
-    !empty($element['#type']) &&
-    !empty($element['#value']) && (
-      $element['#type'] === 'button' ||
-      $element['#type'] === 'submit' ||
-      $element['#type'] === 'image_button'
-    );
-}
-
-/**
- * Helper function for adding colors to button elements.
- *
- * @param array $element
- *   The form element, passed by reference.
- */
-function _bootstrap_colorize_button(&$element) {
-  if (_bootstrap_is_button($element)) {
-    // Do not add the class if one is already present in the array.
-    $button_classes = array(
-      'btn-default',
-      'btn-primary',
-      'btn-success',
-      'btn-info',
-      'btn-warning',
-      'btn-danger',
-      'btn-link',
-    );
-    $class_intersection = array_intersect($button_classes, $element['#attributes']['class']);
-    if (empty($class_intersection)) {
-      // Get the matched class.
-      $class = theme_get_setting('bootstrap_button_colorize') ? _bootstrap_colorize_text($element['#value']) : FALSE;
-      // If no particular class matched, use the default style.
-      if (!$class) {
-        $class = 'default';
-      }
-      $element['#attributes']['class'][] = 'btn-' . $class;
-    }
-  }
-}
-
-/**
- * Helper function for associating Bootstrap classes based on a string's value.
- *
- * @param string $string
- *   The string to match classes against.
- * @param string $default
- *   The default class to return if no match is found.
- *
- * @return string
- *   The Bootstrap class matched against the value of $haystack or $default if
- *   no match could be made.
- */
-function _bootstrap_colorize_text($string, $default = '') {
-  static $texts;
-  if (!isset($texts)) {
-    $texts = array(
-      // Text that match these specific strings are checked first.
-      'matches' => array(
-        // Primary class.
-        t('Download feature')   => 'primary',
-
-        // Success class.
-        t('Add effect')         => 'success',
-        t('Add and configure')  => 'success',
-
-        // Info class.
-        t('Save and add')       => 'info',
-        t('Add another item')   => 'info',
-        t('Update style')       => 'info',
-      ),
-
-      // Text that contain these words anywhere in the string are checked last.
-      'contains' => array(
-        // Primary class.
-        t('Confirm')            => 'primary',
-        t('Filter')             => 'primary',
-        t('Submit')             => 'primary',
-        t('Search')             => 'primary',
-
-        // Success class.
-        t('Add')                => 'success',
-        t('Create')             => 'success',
-        t('Save')               => 'success',
-        t('Write')              => 'success',
-
-        // Warning class.
-        t('Export')             => 'warning',
-        t('Import')             => 'warning',
-        t('Restore')            => 'warning',
-        t('Rebuild')            => 'warning',
-
-        // Info class.
-        t('Apply')              => 'info',
-        t('Update')             => 'info',
-
-        // Danger class.
-        t('Delete')             => 'danger',
-        t('Remove')             => 'danger',
-      ),
-    );
-
-    // Allow sub-themes to alter this array of patterns.
-    drupal_alter('bootstrap_colorize_text', $texts);
-  }
-
-  // Iterate over the array.
-  foreach ($texts as $pattern => $strings) {
-    foreach ($strings as $value => $class) {
-      switch ($pattern) {
-        case 'matches':
-          if ($string === $value) {
-            return $class;
-          }
-          break;
-
-        case 'contains':
-          if (strpos(drupal_strtolower($string), drupal_strtolower($value)) !== FALSE) {
-            return $class;
-          }
-          break;
-      }
-    }
-  }
-
-  // Return the default if nothing was matched.
-  return $default;
-}
-
-/**
- * Helper function for adding icons to button elements.
- *
- * @param array $element
- *   The form element, passed by reference.
- */
-function _bootstrap_iconize_button(&$element) {
-  if (theme_get_setting('bootstrap_button_iconize') && _bootstrap_is_button($element) && ($icon = _bootstrap_iconize_text($element['#value']))) {
-    $element['#icon'] = $icon;
-  }
-}
-
-/**
- * Helper function for associating Bootstrap icons with text.
- *
- * @param string $string
- *   The string to match classes against.
- * @param string $default
- *   The default icon to return if no match is found.
- *
- * @return string
- *   The Bootstrap icon matched against the value of $haystack or $default if
- *   no match could be made.
- */
-function _bootstrap_iconize_text($string, $default = '') {
-  static $texts;
-  if (!isset($texts)) {
-    $texts = array(
-      // Text that match these specific strings are checked first.
-      'matches' => array(),
-
-      // Text that contain these words anywhere in the string are checked last.
-      'contains' => array(
-        t('Manage')     => 'cog',
-        t('Configure')  => 'cog',
-        t('Download')   => 'download',
-        t('Export')     => 'export',
-        t('Filter')     => 'filter',
-        t('Import')     => 'import',
-        t('Save')       => 'ok',
-        t('Update')     => 'ok',
-        t('Edit')       => 'pencil',
-        t('Add')        => 'plus',
-        t('Write')      => 'plus',
-        t('Cancel')     => 'remove',
-        t('Delete')     => 'trash',
-        t('Remove')     => 'trash',
-        t('Upload')     => 'upload',
-      ),
-    );
-
-    // Allow sub-themes to alter this array of patterns.
-    drupal_alter('bootstrap_iconize_text', $texts);
-  }
-
-  // Iterate over the array.
-  foreach ($texts as $pattern => $strings) {
-    foreach ($strings as $value => $icon) {
-      switch ($pattern) {
-        case 'matches':
-          if ($string === $value) {
-            return _bootstrap_icon($icon, $default);
-          }
-          break;
-
-        case 'contains':
-          if (strpos(drupal_strtolower($string), drupal_strtolower($value)) !== FALSE) {
-            return _bootstrap_icon($icon, $default);
-          }
-          break;
-      }
-    }
-  }
-
-  // Return a default icon if nothing was matched.
-  return _bootstrap_icon($default);
-}
-
-/**
- * Helper function for invoking a specific suggestion's preprocess functions.
- *
- * @param array $variables
- *   The theme implementation variables array.
- */
-function _bootstrap_preprocess_theme_suggestion(&$variables) {
-  $registry = theme_get_registry();
-  if (!empty($variables['theme_hook_suggestion']) && !empty($registry[$variables['theme_hook_suggestion']]['preprocess functions'])) {
-    // Save the suggestion as the hook to pass to the function.
-    $hook = $variables['theme_hook_suggestion'];
-
-    // Iterate over the preprocess functions.
-    foreach ($registry[$hook]['preprocess functions'] as $function) {
-      if (function_exists($function)) {
-        // Invoke theme hook suggestion preprocess function.
-        $function($variables, $hook);
-
-        // Unset the theme_hook_suggestion so the suggestion's preprocess
-        // functions can provide theme_hook_suggestions if needed.
-        if (!empty($variables['theme_hook_suggestions'])) {
-          unset($variables['theme_hook_suggestion']);
-        }
-      }
-    }
-  }
-}
-
-/**
- * Helper function for invoking a specific suggestion's process functions.
- *
- * @param array $variables
- *   The theme implementation variables array.
- */
-function _bootstrap_process_theme_suggestion(&$variables) {
-  $registry = theme_get_registry();
-  if (!empty($variables['theme_hook_suggestion']) && !empty($registry[$variables['theme_hook_suggestion']]['process functions'])) {
-    // Save the suggestion as the hook to pass to the function.
-    $hook = $variables['theme_hook_suggestion'];
-
-    // Iterate over the process functions.
-    foreach ($registry[$hook]['process functions'] as $function) {
-      if (function_exists($function)) {
-        // Invoke theme hook suggestion process function.
-        $function($variables, $hook);
-
-        // Unset the theme_hook_suggestion so the suggestion's preprocess
-        // functions can provide theme_hook_suggestions if needed.
-        if (!empty($variables['theme_hook_suggestions'])) {
-          unset($variables['theme_hook_suggestion']);
-        }
-      }
-    }
-  }
-}
-
-/**
- * Helper function for determining if a tooltip can be used for a description.
- *
- * @param string $description
- *   The string of text to process.
- *
- * @return bool
- *   Returns TRUE if the $description can be used as a tooltip, FALSE otherwise.
- */
-function _bootstrap_tooltip_description($description) {
-  // Use the advanced drupal_static() pattern, since this is called very often.
-  static $drupal_static_fast;
-  if (!isset($drupal_static_fast)) {
-    $drupal_static_fast['descriptions'] = &drupal_static(__FUNCTION__);
-  }
-  // Get static data.
-  $descriptions = &$drupal_static_fast['descriptions'];
-  $tooltip_descriptions = &$drupal_static_fast['tooltip_descriptions'];
-
-  // Determine if tooltips are enabled.
-  if (!isset($tooltip_descriptions)) {
-    $tooltip_descriptions = theme_get_setting('bootstrap_tooltip_enabled') && theme_get_setting('bootstrap_tooltip_descriptions');
-  }
-
-  // Go ahead and return FALSE if not enabled.
-  if (!$tooltip_descriptions) {
-    return FALSE;
-  }
-
-  $id = drupal_hash_base64($description);
-  if (!isset($descriptions[$id])) {
-    $descriptions[$id] = ($description === strip_tags($description) && strlen($description) <= theme_get_setting('bootstrap_tooltip_descriptions_length'));
-  }
-  return $descriptions[$id];
-}
diff --git a/includes/icons.inc b/includes/icons.inc
deleted file mode 100755
index c5b177a..0000000
--- a/includes/icons.inc
+++ /dev/null
@@ -1,43 +0,0 @@
-<?php
-
-/**
- * @file
- * icons.inc
- * Provide Bootstrap Glyphicons support via the Icon API module.
- */
-
-require_once dirname(__FILE__) . '/common.inc';
-
-/**
- * Implements hook_icon_providers().
- */
-function bootstrap_icon_providers() {
-  $providers['bootstrap'] = array(
-    'title' => t('Bootstrap'),
-    'url' => 'http://getbootstrap.com/components/#glyphicons',
-  );
-  return $providers;
-}
-
-/**
- * Implements hook_icon_bundles().
- */
-function bootstrap_icon_bundles() {
-  $bundles = array();
-  if (_bootstrap_glyphicons_supported()) {
-    $bundles['bootstrap'] = array(
-      'render' => 'sprite',
-      'provider' => 'bootstrap',
-      'title' => t('Bootstrap'),
-      'version' => t('Icons by Glyphicons'),
-      'variations' => array(
-        'icon-white' => t('White'),
-      ),
-      'settings' => array(
-        'tag' => 'span',
-      ),
-      'icons' => _bootstrap_glyphicons(),
-    );
-  }
-  return $bundles;
-}
diff --git a/includes/pre-render.inc b/includes/pre-render.inc
deleted file mode 100644
index 59d0e70..0000000
--- a/includes/pre-render.inc
+++ /dev/null
@@ -1,103 +0,0 @@
-<?php
-/**
- * @file
- * pre-render.inc
- *
- * Contains various implementations for #pre_render callbacks on elements.
- */
-
-/**
- * Pre-render input elements.
- */
-function _bootstrap_pre_render_input($element) {
-  // Only add the "form-control" class for specific element input types.
-  $types = array(
-    // Core.
-    'password',
-    'password_confirm',
-    'select',
-    'textarea',
-    'textfield',
-    // HTML5.
-    'email',
-    // Webform module.
-    'webform_email',
-    'webform_number',
-    // Elements module.
-    'emailfield',
-    'numberfield',
-    'rangefield',
-    'searchfield',
-    'telfield',
-    'urlfield',
-  );
-
-  if (!empty($element['#type']) && (in_array($element['#type'], $types) || ($element['#type'] === 'file' && empty($element['#managed_file'])))) {
-    $element['#attributes']['class'][] = 'form-control';
-  }
-
-  if (!empty($element['#type']) && ($element['#type'] !== 'checkbox' || $element['#type'] !== 'radio' || $element['#type'] !== 'checkboxes' || $element['#type'] !== 'radios')) {
-    if (!empty($element['#description']) && empty($element['#attributes']['title']) && _bootstrap_tooltip_description($element['#description'])) {
-      $element['#attributes']['title'] = $element['#description'];
-    }
-
-    if (!empty($element['#attributes']['title'])) {
-      $element['#attributes']['data-toggle'] = 'tooltip';
-    }
-  }
-  return $element;
-}
-
-/**
- * Pre-render fieldset element.
- */
-function _bootstrap_pre_render_fieldset($element) {
-  // Fieldsets may be rendered outside of a Form API context.
-  if (!isset($element['#parents']) || !isset($element['#groups'])) {
-    return $element;
-  }
-  // Inject group member elements belonging to this group.
-  $parents = implode('][', $element['#parents']);
-  $children = element_children($element['#groups'][$parents]);
-  if (!empty($children)) {
-    if (empty($element['#default_tab'])) {
-      $children_keys = array_values($children);
-      $element['#default_tab'] = $element['#groups'][$parents][array_shift($children_keys)]['#id'];
-    }
-    foreach ($children as $key) {
-      // Break references and indicate that the element should be rendered as
-      // group member.
-      $child = (array) $element['#groups'][$parents][$key];
-      $child['#attributes']['id'] = $child['#id'];
-      $child['#group_fieldset'] = TRUE;
-      // Inject the element as new child element.
-      $element[] = $child;
-
-      $sort = TRUE;
-    }
-    // Re-sort the element's children if we injected group member elements.
-    if (isset($sort)) {
-      $element['#sorted'] = FALSE;
-    }
-  }
-
-  if (isset($element['#group'])) {
-    $group = $element['#group'];
-    // If this element belongs to a group, but the group-holding element does
-    // not exist, we need to render it (at its original location).
-    if (!isset($element['#groups'][$group]['#group_exists'])) {
-      // Intentionally empty to clarify the flow; we simply return $element.
-    }
-    // If we injected this element into the group, then we want to render it.
-    elseif (!empty($element['#group_fieldset'])) {
-      // Intentionally empty to clarify the flow; we simply return $element.
-    }
-    // Otherwise, this element belongs to a group and the group exists, so we do
-    // not render it.
-    elseif (element_children($element['#groups'][$group])) {
-      $element['#printed'] = TRUE;
-    }
-  }
-
-  return $element;
-}
diff --git a/includes/process.inc b/includes/process.inc
deleted file mode 100644
index 7c21e03..0000000
--- a/includes/process.inc
+++ /dev/null
@@ -1,107 +0,0 @@
-<?php
-/**
- * @file
- * process.inc
- *
- * Contains various implementations for #process callbacks on elements.
- */
-
-/**
- * Process all elements.
- */
-function _bootstrap_process_element(&$element, &$form_state) {
-  if (!empty($element['#attributes']['class']) && is_array($element['#attributes']['class'])) {
-    $key = array_search('container-inline', $element['#attributes']['class']);
-    if ($key !== FALSE) {
-      $element['#attributes']['class'][$key] = 'form-inline';
-    }
-
-    if (in_array('form-wrapper', $element['#attributes']['class'])) {
-      $element['#attributes']['class'][] = 'form-group';
-    }
-  }
-
-  // Process form actions.
-  if (!empty($element['#type']) && $element['#type'] === 'actions') {
-    foreach (element_children($element) as $child) {
-      _bootstrap_iconize_button($element[$child]);
-    }
-  }
-
-  // Automatically inject the nearest button found after this element if
-  // #input_group_button exists.
-  if (!empty($element['#input_group_button'])) {
-    // Obtain the parent array to limit search.
-    $array_parents = array();
-    if (!empty($element['#array_parents'])) {
-      $array_parents += $element['#array_parents'];
-      // Remove the current element from the array.
-      array_pop($array_parents);
-    }
-
-    // If element is nested, return the referenced parent from the form.
-    if (!empty($array_parents)) {
-      $parent = &drupal_array_get_nested_value($form_state['complete form'], $array_parents);
-    }
-    // Otherwise return the complete form.
-    else {
-      $parent = &$form_state['complete form'];
-    }
-
-    // Ignore buttons before we find the element in the form.
-    $found_current_element = FALSE;
-    foreach (element_children($parent) as $child) {
-      if ($parent[$child] === $element) {
-        $found_current_element = TRUE;
-        continue;
-      }
-
-      if ($found_current_element && _bootstrap_is_button($parent[$child])) {
-        _bootstrap_iconize_button($parent[$child]);
-        $element['#field_suffix'] = drupal_render($parent[$child]);
-        break;
-      }
-    }
-  }
-  return $element;
-}
-
-/**
- * Process fieldset element.
- */
-function _bootstrap_process_fieldset(&$element, &$form_state) {
-  $parents = implode('][', $element['#parents']);
-
-  // Each fieldset forms a new group. The #type 'vertical_tabs' basically only
-  // injects a new fieldset.
-  $form_state['groups'][$parents]['#group_exists'] = TRUE;
-  $element['#groups'] = &$form_state['groups'];
-
-  // Process vertical tabs group member fieldsets.
-  if (isset($element['#group'])) {
-    // Add this fieldset to the defined group (by reference).
-    $element['#theme_wrappers'] = array('bootstrap_panel');
-    $group = $element['#group'];
-    $form_state['groups'][$group][] = &$element;
-  }
-
-  // Contains form element summary functionality.
-  $element['#attached']['library'][] = array('system', 'drupal.form');
-
-  // Collapsible fieldsets.
-  if (!empty($element['#collapsible'])) {
-    $element['#attached']['library'][] = array('system', 'drupal.collapse');
-    $element['#attributes']['class'][] = 'collapsible';
-    if (!empty($element['#collapsed'])) {
-      $element['#attributes']['class'][] = 'collapsed';
-    }
-  }
-
-  // The .form-wrapper class is required for #states to treat fieldsets like
-  // containers.
-  if (!isset($element['#attributes']['class'])) {
-    $element['#attributes']['class'] = array();
-  }
-
-  return $element;
-}
diff --git a/includes/registry.inc b/includes/registry.inc
deleted file mode 100644
index 0669f55..0000000
--- a/includes/registry.inc
+++ /dev/null
@@ -1,383 +0,0 @@
-<?php
-/**
- * @file
- * registry.inc
- *
- * Contains functions specific to the theme registry.
- *
- * Theme templates, functions and [pre]process functions
- *
- * Theme templates `*.tpl.php` files are stored in the `theme` directory along
- * with `*.func.php` and `*.vars.php` files. The latter two are enabled by the
- * processing done below. The three types of files can be grouped into
- * sub-directories. It is recommended that they are grouped by the modules
- * they originate from. Theme specific hooks should be grouped into a folder
- * named after the theme itself.
- *
- * Function files store theme functions directly related to the base file name
- * or "theme hook", e.g., the hook `foo` would be handled by the
- * `bootstrap_foo` function which would be stored in `foo.func.php`.
- *
- * Variable files store [pre]process functions directly related to the base file
- * file name or "theme hook" just like function files, e.g., the hook `html`
- * would be handled by the `bootstrap_preprocess_html` function held in
- * `html.vars.php`.
- *
- * The two types of files mentioned above should also be used to hold support
- * functions specific to the theming hook. When a function grows too large,
- * break it apart so it becomes more readable.
- *
- * Files specific to theme functions and variable preprocess/process functions
- * should be named after the `base hook`. Alternate hooks (or what is commonly
- * referred to as "hook suggestions") should not be used for the file name.
- * The contents of the theme functions file can hold hook suggestions and it
- * should be related to the base hook. [Pre]process functions for hook
- * suggestions are not supported in Drupal 7 core.
- *
- * Using these files will keep the `template.php` file clean and grouping them
- * within the theme directory will make it easier to discover and work with.
- *
- * Warning: Using core's `path_to_theme` function may return the wrong path.
- * It is difficult to predict to begin with and the changes made here will
- * make it even worse. Use `drupal_get_path('theme', 'bootstrap')` instead.
- */
-
-/**
- * Stub implementation for hook_theme().
- *
- * This base-theme's custom theme hook implementations. Never define "path"
- * or "template" as these are detected and automatically added.
- *
- * @see bootstrap_theme_registry_alter()
- * @see bootstrap_hook_theme_complete()
- * @see bootstrap_theme()
- * @see hook_theme()
- */
-function _bootstrap_theme(&$existing, $type, $theme, $path) {
-  // Bootstrap Dropdowns.
-  $hooks['bootstrap_dropdown'] = array(
-    'render element' => 'element',
-  );
-
-  // Bootstrap Modals.
-  $hooks['bootstrap_modal'] = array(
-    'variables' => array(
-      'heading' => '',
-      'body' => '',
-      'footer' => '',
-      'attributes' => array(),
-      'html_heading' => FALSE,
-    ),
-  );
-
-  // Bootstrap Panels.
-  $hooks['bootstrap_panel'] = array(
-    'render element' => 'element',
-  );
-
-  // Bootstrap search form wrapper.
-  // @todo Remove this as it's not really needed and should use suggestions.
-  $hooks['bootstrap_search_form_wrapper'] = array(
-    'render element' => 'element',
-  );
-  return $hooks;
-}
-
-/**
- * Implements hook_theme_registry_alter().
- */
-function bootstrap_theme_registry_alter(&$registry) {
-  // Retrieve the active theme names.
-  $themes = _bootstrap_get_base_themes(NULL, TRUE);
-
-  // Return the theme registry unaltered if it is not Bootstrap based.
-  if (!in_array('bootstrap', $themes)) {
-    return;
-  }
-
-  // Inject the "footer" variable default in the existing "table" hook.
-  // @see https://drupal.org/node/806982
-  // @todo Make this discoverable in some way instead of a manual injection.
-  $registry['table']['variables']['footer'] = NULL;
-
-  // Process registered hooks in the theme registry.
-  _bootstrap_process_theme_registry($registry, $themes);
-
-  // Process registered hooks in the theme registry to add necessary theme hook
-  // suggestion phased function invocations. This must be run after separately
-  // and after all includes have been loaded.
-  _bootstrap_process_theme_registry_suggestions($registry, $themes);
-
-  // Post-process theme registry. This happens after all altering has occurred.
-  foreach ($registry as $hook => $info) {
-    // Ensure uniqueness.
-    if (!empty($registry[$hook]['includes'])) {
-      $registry[$hook]['includes'] = array_unique($info['includes']);
-    }
-    if (!empty($registry[$hook]['preprocess functions'])) {
-      $registry[$hook]['preprocess functions'] = array_unique($info['preprocess functions']);
-    }
-    if (!empty($registry[$hook]['process functions'])) {
-      $registry[$hook]['process functions'] = array_unique($info['process functions']);
-    }
-
-    // Ensure "theme path" is set.
-    if (!isset($registry[$hook]['theme path'])) {
-      $registry[$hook]['theme path'] = $GLOBALS['theme_path'];
-    }
-  }
-}
-
-/**
- * Processes registered hooks in the theme registry against list of themes.
- *
- * Discovers and fills missing elements in the theme registry. This is similar
- * to _theme_process_registry(), however severely modified for Bootstrap based
- * themes.
- *
- * All additions or modifications must live in `./templates`, relative to the
- * base theme or sub-theme's base folder. These files can be organized in any
- * order using sub-folders as it searches recursively.
- *
- * Adds or modifies the following theme hook keys:
- *  - `includes`: When a variables file `*.vars.php` is found.
- *  - `includes`: When a function file `*.func.php` is found.
- *  - `function`: When a specific theme hook function override is found.
- *  - `template`: When a template file `*.tpl.php` is found in. Note, if both
- *    a function and a template are defined, a template implementation will
- *    always be used and the `function` will be unset.
- *  - `path`: When a template file `*.tpl.php` is found.
- *  - `preprocess functions`: When a specific theme hook suggestion function
- *    `hook_preprocess_HOOK__SUGGESTION` is found.
- *  - `process functions` When a specific theme hook suggestion function
- *    `hook_process_HOOK__SUGGESTION` is found.
- *
- * @param array $registry
- *   The theme registry array, passed by reference.
- * @param string|array $themes
- *   The name of the theme or list of theme names to process.
- *
- * @see bootstrap_theme_registry_alter()
- * @see _theme_process_registry()
- * @see _theme_build_registry()
- */
-function _bootstrap_process_theme_registry(&$registry, $themes) {
-  // Convert to an array if needed.
-  if (is_string($themes)) {
-    $themes = array();
-  }
-
-  // Processor functions work in two distinct phases with the process
-  // functions always being executed after the preprocess functions.
-  $variable_process_phases = array(
-    'preprocess functions' => 'preprocess',
-    'process functions'    => 'process',
-  );
-
-  // Iterate over each theme passed.
-  // Iterate over the [pre]process phases.
-  foreach ($variable_process_phases as $phase_key => $phase) {
-    foreach ($themes as $theme) {
-      // Get the theme's base path.
-      $path = drupal_get_path('theme', $theme);
-
-      // Find theme function overrides.
-      foreach (drupal_system_listing('/\.(func|vars)\.php$/', $path, 'name', 0) as $name => $file) {
-        // Strip off the extension.
-        if (($pos = strpos($name, '.')) !== FALSE) {
-          $name = substr($name, 0, $pos);
-        }
-
-        // Transform "-" in file names to "_" to match theme hook naming scheme.
-        $hook = strtr($name, '-', '_');
-
-        // File to be included by core's theme function when a theme hook is
-        // invoked.
-        if (isset($registry[$hook])) {
-          if (!isset($registry[$hook][$phase_key])) {
-            $registry[$hook][$phase_key] = array();
-          }
-          if (!isset($registry[$hook]['includes'])) {
-            $registry[$hook]['includes'] = array();
-          }
-
-          // Include the file now so functions can be discovered below.
-          include_once DRUPAL_ROOT . '/' . $file->uri;
-          if (!in_array($file->uri, $registry[$hook]['includes'])) {
-            $registry[$hook]['includes'][] = $file->uri;
-          }
-        }
-      }
-
-      // Process core's normal functionality.
-      _theme_process_registry($registry, $theme, $GLOBALS['theme_key'] === $theme ? 'theme' : 'base_theme', $theme, $path);
-
-      // Find necessary templates in the theme.
-      $registry = drupal_array_merge_deep($registry, drupal_find_theme_templates($registry, '.tpl.php', $path));
-
-      // Iterate over each registered hook.
-      foreach ($registry as $hook => $info) {
-        // Remove function callbacks if a template was found.
-        if (isset($info['function']) && isset($info['template'])) {
-          unset($registry[$hook]['function']);
-        }
-
-        // Correct template theme paths.
-        if (!isset($info['theme path'])) {
-          $registry[$hook]['theme path'] = $path;
-        }
-
-        // Correct the type that is implementing this override.
-        $registry[$hook]['type'] = $GLOBALS['theme_path'] === $registry[$hook]['theme path'] ? 'theme' : 'base_theme';
-
-        // Setup a default "context" variable. This allows #context to be passed
-        // to every template and theme function.
-        // @see https://drupal.org/node/2035055
-        if (isset($info['variables']) && !isset($info['variables']['context'])) {
-          $registry[$hook]['variables']['context'] = array();
-        }
-
-        // Setup a default "icon" variable. This allows #icon to be passed
-        // to every template and theme function.
-        // @see https://drupal.org/node/2219965
-        if (isset($info['variables']) && !isset($info['variables']['icon'])) {
-          $registry[$hook]['variables']['icon'] = NULL;
-        }
-        if (isset($info['variables']) && !isset($info['variables']['icon_position'])) {
-          $registry[$hook]['variables']['icon_position'] = 'before';
-        }
-      }
-    }
-  }
-}
-
-/**
- * Processes registered hooks in the theme registry against list of themes.
- *
- * This is used to add the necessary phased functions to theme hook suggestions.
- * Because it uses get_defined_functions(), it must be invoked after all
- * includes have been detected and loaded. This is similar to
- * drupal_find_theme_functions(), however severely modified for Bootstrap based
- * themes.
- *
- * @param array $registry
- *   The theme registry array, passed by reference.
- * @param string|array $themes
- *   The name of the theme or list of theme names to process.
- *
- * @return array
- *   The functions found, suitable for returning from hook_theme;
- *
- * @see https://drupal.org/node/939462
- * @see drupal_find_theme_functions()
- */
-function _bootstrap_process_theme_registry_suggestions(&$registry, $themes) {
-  // Convert to an array if needed.
-  if (is_string($themes)) {
-    $themes = array();
-  }
-
-  // Merge in normal core detections first.
-  $registry = drupal_array_merge_deep($registry, drupal_find_theme_functions($registry, $themes));
-
-  // Processor functions work in two distinct phases with the process
-  // functions always being executed after the preprocess functions.
-  $variable_process_phases = array(
-    'preprocess functions' => 'preprocess',
-    'process functions'    => 'process',
-  );
-
-  $functions = get_defined_functions();
-
-  // Iterate over each theme passed.
-  foreach ($themes as $theme) {
-    // Iterate over each registered hook.
-    foreach ($registry as $hook => $info) {
-      // The pattern to match.
-      $pattern = isset($info['pattern']) ? $info['pattern'] : ($hook . '__');
-
-      // Only process hooks that have not explicitly "turned off" patterns.
-      if (empty($pattern)) {
-        continue;
-      }
-
-      // Iterate over the [pre]process phases.
-      foreach ($variable_process_phases as $phase_key => $phase) {
-        // Find functions matching the specific theme, phase and pattern.
-        if ($matches = preg_grep('/^' . $theme . '_' . $phase . '_' . $pattern . '/', $functions['user'])) {
-          foreach ($matches as $match) {
-            // Determine the current theme implementation.
-            $hook = substr($match, strlen($theme . '_' . $phase) + 1);
-            $base_hook = $hook;
-
-            // If there's no current theme implementation, keep checking for
-            // more generic base hooks. If there's still no implementation,
-            // one must be created using the last found implementation
-            // information.
-            if (!isset($registry[$base_hook]) || isset($registry[$base_hook]['base hook'])) {
-              // Iteratively strip everything after the last '__' delimiter,
-              // until an implementation is found.
-              while ($pos = strrpos($base_hook, '__')) {
-                $base_hook = substr($base_hook, 0, $pos);
-                if (isset($registry[$base_hook])) {
-                  break;
-                }
-              }
-
-              // No base hook was found, this allows the implementation to be
-              // ignored in the next steps.
-              if (!isset($registry[$base_hook])) {
-                $base_hook = FALSE;
-              }
-            }
-
-            // Process specific base hook implementations if necessary.
-            if ($base_hook) {
-              // The matched theme implementation does not exist in the
-              // registry, one must be created if base hook information was
-              // found, otherwise it will be ignored.
-              if (!isset($registry[$hook])) {
-                $hook_type = isset($registry[$base_hook]['function']) ? 'function' : 'template';
-                $arg_name = isset($registry[$base_hook]['variables']) ? 'variables' : 'render element';
-                $registry[$hook] = array(
-                  $hook_type => $registry[$base_hook][$hook_type],
-                  $arg_name => $registry[$base_hook][$arg_name],
-                  'base hook' => $base_hook,
-                  'type' => $registry[$base_hook]['type'],
-                  'preprocess functions' => array(),
-                  'process functions' => array(),
-                );
-                if (isset($registry[$base_hook]['path'])) {
-                  $registry[$hook]['path'] = $registry[$base_hook]['path'];
-                }
-                if (isset($registry[$base_hook]['theme path'])) {
-                  $registry[$hook]['theme path'] = $registry[$base_hook]['theme path'];
-                }
-              }
-            }
-
-            // If the hook exists, merge in the functions. Otherwise ignore it
-            // since there was no base hook found and a new implementation
-            // could not be created.
-            if (isset($registry[$hook])) {
-              $registry[$hook] = drupal_array_merge_deep($registry[$hook], array(
-                $phase_key => array($match),
-              ));
-
-              // Due to how theme() functions, if a base hook implements
-              // preprocess or process functions, then the base hook info is
-              // used to invoke the necessary phase functions instead of the
-              // suggestion hook info. To get around this, a helper function
-              // must be appended to the base hook info so it can call the
-              // theme suggestion implementation's phase function.
-              $function = '_bootstrap_' . $phase . '_theme_suggestion';
-              if (!in_array($function, $registry[$base_hook][$phase_key])) {
-                $registry[$base_hook][$phase_key][] = $function;
-              }
-            }
-          }
-        }
-      }
-    }
-  }
-}
diff --git a/includes/settings.inc b/includes/settings.inc
deleted file mode 100644
index 6c9f031..0000000
--- a/includes/settings.inc
+++ /dev/null
@@ -1,609 +0,0 @@
-<?php
-/**
- * @file
- * settings.inc
- */
-
-/**
- * Contains the form for the theme settings.
- *
- * @param array $form
- *   The form array, passed by reference.
- * @param array $form_state
- *   The form state array, passed by reference.
- */
-function _bootstrap_settings_form(&$form, $form_state) {
-  // Do not add Bootstrap specific settings to non-bootstrap based themes.
-  $theme = !empty($form_state['build_info']['args'][0]) ? $form_state['build_info']['args'][0] : FALSE;
-
-  // Global or non Bootstrap based theme settings.
-  if ($theme === FALSE || !in_array('bootstrap', _bootstrap_get_base_themes($theme, TRUE))) {
-    return;
-  }
-
-  // Get defined regions.
-  $regions = system_region_list($theme);
-
-  // Display a warning if jquery_update isn't enabled.
-  if ((!module_exists('jquery_update') || !version_compare(variable_get('jquery_update_jquery_version', '1.10'), '1.7', '>=')) && !theme_get_setting('bootstrap_toggle_jquery_error')) {
-    drupal_set_message(t('jQuery Update is not enabled, Bootstrap requires a minimum jQuery version of 1.7 or higher.<br/>Please enable <a href="https://drupal.org/project/jquery_update">jQuery Update module</a> 7.x-2.3 or higher, you must manually set this in the configuration after it is installed.'), 'error', FALSE);
-  }
-
-  // Wrap global setting fieldsets in vertical tabs.
-  $form['global'] = array(
-    '#type' => 'vertical_tabs',
-    '#prefix' => '<h2><small>' . t('Override Global Settings') . '</small></h2>',
-    '#weight' => -9,
-  );
-  $form['theme_settings']['#group'] = 'global';
-  $form['logo']['#group'] = 'global';
-  $form['favicon']['#group'] = 'global';
-
-  // Do not add Bootstrap specific settings to global settings.
-  if (empty($form_state['build_info']['args'][0])) {
-    unset($form['general']['#prefix']);
-    return;
-  }
-
-  $form['bootstrap'] = array(
-    '#type' => 'vertical_tabs',
-    '#attached' => array(
-      'js'  => array(drupal_get_path('theme', 'bootstrap') . '/js/bootstrap.admin.js'),
-    ),
-    '#prefix' => '<h2><small>' . t('Bootstrap Settings') . '</small></h2>',
-    '#weight' => -10,
-  );
-
-  // General.
-  $form['general'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('General'),
-    '#group' => 'bootstrap',
-  );
-
-  // Buttons.
-  $form['general']['buttons'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Buttons'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['general']['buttons']['bootstrap_button_size'] = array(
-    '#type' => 'select',
-    '#title' => t('Default button size'),
-    '#default_value' => theme_get_setting('bootstrap_button_size'),
-    '#empty_option' => t('Normal'),
-    '#options' => array(
-      'btn-xs' => t('Extra Small'),
-      'btn-sm' => t('Small'),
-      'btn-lg' => t('Large'),
-    ),
-  );
-  $form['general']['buttons']['bootstrap_button_colorize'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Colorize Buttons'),
-    '#default_value' => theme_get_setting('bootstrap_button_colorize'),
-    '#description' => t('Adds classes to buttons based on their text value. See: <a href="!bootstrap_url" target="_blank">Buttons</a> and <a href="!api_url" target="_blank">hook_bootstrap_colorize_text_alter()</a>', array(
-      '!bootstrap_url' => 'http://getbootstrap.com/css/#buttons',
-      '!api_url' => 'http://drupalcode.org/project/bootstrap.git/blob/refs/heads/7.x-3.x:/bootstrap.api.php#l13',
-    )),
-  );
-  $form['general']['buttons']['bootstrap_button_iconize'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Iconize Buttons'),
-    '#default_value' => theme_get_setting('bootstrap_button_iconize'),
-    '#description' => t('Adds icons to buttons based on the text value. See: <a href="!api_url" target="_blank">hook_bootstrap_iconize_text_alter()</a>', array(
-      '!api_url' => 'http://drupalcode.org/project/bootstrap.git/blob/refs/heads/7.x-3.x:/bootstrap.api.php#l37',
-    )),
-  );
-
-  // Images.
-  $form['general']['images'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Images'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['general']['images']['bootstrap_image_shape'] = array(
-    '#type' => 'select',
-    '#title' => t('Default image shape'),
-    '#description' => t('Add classes to an <code>&lt;img&gt;</code> element to easily style images in any project. Note: Internet Explorer 8 lacks support for rounded corners. See: <a href="!bootstrap_url" target="_blank">Image Shapes</a>', array(
-      '!bootstrap_url' => 'http://getbootstrap.com/css/#images-shapes',
-    )),
-    '#default_value' => theme_get_setting('bootstrap_image_shape'),
-    '#empty_option' => t('None'),
-    '#options' => array(
-      'img-rounded' => t('Rounded'),
-      'img-circle' => t('Circle'),
-      'img-thumbnail' => t('Thumbnail'),
-    ),
-  );
-  $form['general']['images']['bootstrap_image_responsive'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Responsive Images'),
-    '#default_value' => theme_get_setting('bootstrap_image_responsive'),
-    '#description' => t('Images in Bootstrap 3 can be made responsive-friendly via the addition of the <code>.img-responsive</code> class. This applies <code>max-width: 100%;</code> and <code>height: auto;</code> to the image so that it scales nicely to the parent element.'),
-  );
-
-  // Tables.
-  $form['general']['tables'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Tables'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['general']['tables']['bootstrap_table_bordered'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Bordered table'),
-    '#default_value' => theme_get_setting('bootstrap_table_bordered'),
-    '#description' => t('Add borders on all sides of the table and cells.'),
-  );
-  $form['general']['tables']['bootstrap_table_condensed'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Condensed table'),
-    '#default_value' => theme_get_setting('bootstrap_table_condensed'),
-    '#description' => t('Make tables more compact by cutting cell padding in half.'),
-  );
-  $form['general']['tables']['bootstrap_table_hover'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Hover rows'),
-    '#default_value' => theme_get_setting('bootstrap_table_hover'),
-    '#description' => t('Enable a hover state on table rows.'),
-  );
-  $form['general']['tables']['bootstrap_table_striped'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Striped rows'),
-    '#default_value' => theme_get_setting('bootstrap_table_striped'),
-    '#description' => t('Add zebra-striping to any table row within the <code>&lt;tbody&gt;</code>. <strong>Note:</strong> Striped tables are styled via the <code>:nth-child</code> CSS selector, which is not available in Internet Explorer 8.'),
-  );
-  $form['general']['tables']['bootstrap_table_responsive'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Responsive tables'),
-    '#default_value' => theme_get_setting('bootstrap_table_responsive'),
-    '#description' => t('Makes tables responsive by wrapping them in <code>.table-responsive</code> to make them scroll horizontally up to small devices (under 768px). When viewing on anything larger than 768px wide, you will not see any difference in these tables.'),
-  );
-
-  // Components.
-  $form['components'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Components'),
-    '#group' => 'bootstrap',
-  );
-
-  // Breadcrumbs.
-  $form['components']['breadcrumbs'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Breadcrumbs'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['components']['breadcrumbs']['bootstrap_breadcrumb'] = array(
-    '#type' => 'select',
-    '#title' => t('Breadcrumb visibility'),
-    '#default_value' => theme_get_setting('bootstrap_breadcrumb'),
-    '#options' => array(
-      0 => t('Hidden'),
-      1 => t('Visible'),
-      2 => t('Only in admin areas'),
-    ),
-  );
-  $form['components']['breadcrumbs']['bootstrap_breadcrumb_home'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Show "Home" breadcrumb link'),
-    '#default_value' => theme_get_setting('bootstrap_breadcrumb_home'),
-    '#description' => t('If your site has a module dedicated to handling breadcrumbs already, ensure this setting is enabled.'),
-    '#states' => array(
-      'invisible' => array(
-        ':input[name="bootstrap_breadcrumb"]' => array('value' => 0),
-      ),
-    ),
-  );
-  $form['components']['breadcrumbs']['bootstrap_breadcrumb_title'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Show current page title at end'),
-    '#default_value' => theme_get_setting('bootstrap_breadcrumb_title'),
-    '#description' => t('If your site has a module dedicated to handling breadcrumbs already, ensure this setting is disabled.'),
-    '#states' => array(
-      'invisible' => array(
-        ':input[name="bootstrap_breadcrumb"]' => array('value' => 0),
-      ),
-    ),
-  );
-
-  // Navbar.
-  $form['components']['navbar'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Navbar'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['components']['navbar']['bootstrap_navbar_position'] = array(
-    '#type' => 'select',
-    '#title' => t('Navbar Position'),
-    '#description' => t('Select your Navbar position.'),
-    '#default_value' => theme_get_setting('bootstrap_navbar_position'),
-    '#options' => array(
-      'static-top' => t('Static Top'),
-      'fixed-top' => t('Fixed Top'),
-      'fixed-bottom' => t('Fixed Bottom'),
-    ),
-    '#empty_option' => t('Normal'),
-  );
-  $form['components']['navbar']['bootstrap_navbar_inverse'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Inverse navbar style'),
-    '#description' => t('Select if you want the inverse navbar style.'),
-    '#default_value' => theme_get_setting('bootstrap_navbar_inverse'),
-  );
-
-  // Region wells.
-  $wells = array(
-    '' => t('None'),
-    'well' => t('.well (normal)'),
-    'well well-sm' => t('.well-sm (small)'),
-    'well well-lg' => t('.well-lg (large)'),
-  );
-  $form['components']['region_wells'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Region wells'),
-    '#description' => t('Enable the <code>.well</code>, <code>.well-sm</code> or <code>.well-lg</code> classes for specified regions. See: documentation on !wells.', array(
-      '!wells' => l(t('Bootstrap Wells'), 'http://getbootstrap.com/components/#wells'),
-    )),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  foreach ($regions as $name => $title) {
-    $form['components']['region_wells']['bootstrap_region_well-' . $name] = array(
-      '#title' => $title,
-      '#type' => 'select',
-      '#attributes' => array(
-        'class' => array('input-sm'),
-      ),
-      '#options' => $wells,
-      '#default_value' => theme_get_setting('bootstrap_region_well-' . $name),
-    );
-  }
-
-  // JavaScript settings.
-  $form['javascript'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('JavaScript'),
-    '#group' => 'bootstrap',
-  );
-
-  // Anchors.
-  $form['javascript']['anchors'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Anchors'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['javascript']['anchors']['bootstrap_anchors_fix'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Fix anchor positions'),
-    '#default_value' => theme_get_setting('bootstrap_anchors_fix'),
-    '#description' => t('Ensures anchors are correctly positioned only when there is margin or padding detected on the BODY element. This is useful when fixed navbar or administration menus are used.'),
-  );
-  $form['javascript']['anchors']['bootstrap_anchors_smooth_scrolling'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Enable smooth scrolling'),
-    '#default_value' => theme_get_setting('bootstrap_anchors_smooth_scrolling'),
-    '#description' => t('Animates page by scrolling to an anchor link target smoothly when clicked.'),
-    '#states' => array(
-      'invisible' => array(
-        ':input[name="bootstrap_anchors_fix"]' => array('checked' => FALSE),
-      ),
-    ),
-  );
-
-  // Popovers.
-  $form['javascript']['popovers'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Popovers'),
-    '#description' => t('Add small overlays of content, like those on the iPad, to any element for housing secondary information.'),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['javascript']['popovers']['bootstrap_popover_enabled'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Enable popovers.'),
-    '#description' => t('Elements that have the !code attribute set will automatically initialize the popover upon page load. !warning', array(
-      '!code' => '<code>data-toggle="popover"</code>',
-      '!warning' => '<strong class="error text-error">WARNING: This feature can sometimes impact performance. Disable if pages appear to "hang" after initial load.</strong>',
-    )),
-    '#default_value' => theme_get_setting('bootstrap_popover_enabled'),
-  );
-  $form['javascript']['popovers']['options'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Options'),
-    '#description' => t('These are global options. Each popover can independently override desired settings by appending the option name to !data. Example: !data-animation.', array(
-      '!data' => '<code>data-</code>',
-      '!data-animation' => '<code>data-animation="false"</code>',
-    )),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-    '#states' => array(
-      'visible' => array(
-        ':input[name="bootstrap_popover_enabled"]' => array('checked' => TRUE),
-      ),
-    ),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_animation'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('animate'),
-    '#description' => t('Apply a CSS fade transition to the popover.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_animation'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_html'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('HTML'),
-    '#description' => t("Insert HTML into the popover. If false, jQuery's text method will be used to insert content into the DOM. Use text if you're worried about XSS attacks."),
-    '#default_value' => theme_get_setting('bootstrap_popover_html'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_placement'] = array(
-    '#type' => 'select',
-    '#title' => t('placement'),
-    '#description' => t('Where to position the popover. When "auto" is specified, it will dynamically reorient the popover. For example, if placement is "auto left", the popover will display to the left when possible, otherwise it will display right.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_placement'),
-    '#options' => drupal_map_assoc(array(
-      'top',
-      'bottom',
-      'left',
-      'right',
-      'auto',
-      'auto top',
-      'auto bottom',
-      'auto left',
-      'auto right',
-    )),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_selector'] = array(
-    '#type' => 'textfield',
-    '#title' => t('selector'),
-    '#description' => t('If a selector is provided, tooltip objects will be delegated to the specified targets. In practice, this is used to enable dynamic HTML content to have popovers added. See !this and !example.', array(
-      '!this' => l(t('this'), 'https://github.com/twbs/bootstrap/issues/4215'),
-      '!example' => l(t('an informative example'), 'http://jsfiddle.net/fScua/'),
-    )),
-    '#default_value' => theme_get_setting('bootstrap_popover_selector'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_trigger'] = array(
-    '#type' => 'checkboxes',
-    '#title' => t('trigger'),
-    '#description' => t('How a popover is triggered.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_trigger'),
-    '#options' => drupal_map_assoc(array(
-      'click',
-      'hover',
-      'focus',
-      'manual',
-    )),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_trigger_autoclose'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Auto-close on document click'),
-    '#description' => t('Will automatically close the current popover if a click occurs anywhere else other than the popover element.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_trigger_autoclose'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_title'] = array(
-    '#type' => 'textfield',
-    '#title' => t('title'),
-    '#description' => t("Default title value if \"title\" attribute isn't present."),
-    '#default_value' => theme_get_setting('bootstrap_popover_title'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_content'] = array(
-    '#type' => 'textfield',
-    '#title' => t('content'),
-    '#description' => t('Default content value if "data-content" or "data-target" attributes are not present.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_content'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_delay'] = array(
-    '#type' => 'textfield',
-    '#title' => t('delay'),
-    '#description' => t('The amount of time to delay showing and hiding the popover (in milliseconds). Does not apply to manual trigger type.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_delay'),
-  );
-  $form['javascript']['popovers']['options']['bootstrap_popover_container'] = array(
-    '#type' => 'textfield',
-    '#title' => t('container'),
-    '#description' => t('Appends the popover to a specific element. Example: "body". This option is particularly useful in that it allows you to position the popover in the flow of the document near the triggering element - which will prevent the popover from floating away from the triggering element during a window resize.'),
-    '#default_value' => theme_get_setting('bootstrap_popover_container'),
-  );
-
-  // Tooltips.
-  $form['javascript']['tooltips'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Tooltips'),
-    '#description' => t("Inspired by the excellent jQuery.tipsy plugin written by Jason Frame; Tooltips are an updated version, which don't rely on images, use CSS3 for animations, and data-attributes for local title storage. See !link for more documentation.", array(
-      '!link' => l(t('Bootstrap tooltips'), 'http://getbootstrap.com/javascript/#tooltips'),
-    )),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['javascript']['tooltips']['bootstrap_tooltip_enabled'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Enable tooltips'),
-    '#description' => t('Elements that have the !code attribute set will automatically initialize the tooltip upon page load. !warning', array(
-      '!code' => '<code>data-toggle="tooltip"</code>',
-      '!warning' => '<strong class="error text-error">WARNING: This feature can sometimes impact performance. Disable if pages appear to "hang" after initial load.</strong>',
-    )),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_enabled'),
-  );
-  $form['javascript']['tooltips']['bootstrap_tooltip_descriptions'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Use Tooltips for simple form descriptions'),
-    '#description' => t('Form items that contain simple descriptions (no HTML, no title attribute and are less than the specified length below) will be converted into tooltips. This helps reduce the sometimes unnecessary noise of form item descriptions. Descriptions that contain longer text or HTML as actionable descriptions (user needs to click) will not be converted. This ensures it is always visible so its usability remains intact.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_descriptions'),
-    '#states' => array(
-      'visible' => array(
-        ':input[name="bootstrap_tooltip_enabled"]' => array('checked' => TRUE),
-      ),
-    ),
-  );
-  $form['javascript']['tooltips']['bootstrap_tooltip_descriptions_length'] = array(
-    '#type' => 'textfield',
-    '#title' => t('Simple form description length'),
-    '#description' => t('The character length limit used to determine when a description makes a sense to be used as a tooltip.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_descriptions_length'),
-    '#states' => array(
-      'visible' => array(
-        ':input[name="bootstrap_tooltip_enabled"]' => array('checked' => TRUE),
-        ':input[name="bootstrap_tooltip_descriptions"]' => array('checked' => TRUE),
-      ),
-    ),
-  );
-  $form['javascript']['tooltips']['options'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Options'),
-    '#description' => t('These are global options. Each tooltip can independently override desired settings by appending the option name to !data. Example: !data-animation.', array(
-      '!data' => '<code>data-</code>',
-      '!data-animation' => '<code>data-animation="false"</code>',
-    )),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-    '#states' => array(
-      'visible' => array(
-        ':input[name="bootstrap_tooltip_enabled"]' => array('checked' => TRUE),
-      ),
-    ),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_animation'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('animate'),
-    '#description' => t('Apply a CSS fade transition to the tooltip.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_animation'),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_html'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('HTML'),
-    '#description' => t("Insert HTML into the tooltip. If false, jQuery's text method will be used to insert content into the DOM. Use text if you're worried about XSS attacks."),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_html'),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_placement'] = array(
-    '#type' => 'select',
-    '#title' => t('placement'),
-    '#description' => t('Where to position the tooltip. When "auto" is specified, it will dynamically reorient the tooltip. For example, if placement is "auto left", the tooltip will display to the left when possible, otherwise it will display right.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_placement'),
-    '#options' => drupal_map_assoc(array(
-      'top',
-      'bottom',
-      'left',
-      'right',
-      'auto',
-      'auto top',
-      'auto bottom',
-      'auto left',
-      'auto right',
-    )),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_selector'] = array(
-    '#type' => 'textfield',
-    '#title' => t('selector'),
-    '#description' => t('If a selector is provided, tooltip objects will be delegated to the specified targets.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_selector'),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_trigger'] = array(
-    '#type' => 'checkboxes',
-    '#title' => t('trigger'),
-    '#description' => t('How a tooltip is triggered.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_trigger'),
-    '#options' => drupal_map_assoc(array(
-      'click',
-      'hover',
-      'focus',
-      'manual',
-    )),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_delay'] = array(
-    '#type' => 'textfield',
-    '#title' => t('delay'),
-    '#description' => t('The amount of time to delay showing and hiding the tooltip (in milliseconds). Does not apply to manual trigger type.'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_delay'),
-  );
-  $form['javascript']['tooltips']['options']['bootstrap_tooltip_container'] = array(
-    '#type' => 'textfield',
-    '#title' => t('container'),
-    '#description' => t('Appends the tooltip to a specific element. Example: "body"'),
-    '#default_value' => theme_get_setting('bootstrap_tooltip_container'),
-  );
-
-  // Advanced settings.
-  $form['advanced'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('Advanced'),
-    '#group' => 'bootstrap',
-  );
-
-  // BootstrapCDN.
-  $form['advanced']['bootstrap_cdn'] = array(
-    '#type' => 'fieldset',
-    '#title' => t('BootstrapCDN'),
-    '#description' => t('Use !bootstrapcdn to serve the Bootstrap framework files. Enabling this setting will prevent this theme from attempting to load any Bootstrap framework files locally. !warning', array(
-      '!bootstrapcdn' => l(t('BootstrapCDN'), 'http://bootstrapcdn.com', array(
-        'external' => TRUE,
-      )),
-      '!warning' => '<div class="alert alert-info messages info"><strong>' . t('NOTE') . ':</strong> ' . t('While BootstrapCDN (content distribution network) is the preferred method for providing huge performance gains in load time, this method does depend on using this third party service. BootstrapCDN is under no obligation or commitment to provide guaranteed up-time or service quality for this theme. If you choose to disable this setting, you must provide your own Bootstrap source and/or optional CDN delivery implementation.') . '</div>',
-    )),
-    '#collapsible' => TRUE,
-    '#collapsed' => TRUE,
-  );
-  $form['advanced']['bootstrap_cdn']['bootstrap_cdn'] = array(
-    '#type' => 'select',
-    '#title' => t('BootstrapCDN version'),
-    '#options' => drupal_map_assoc(array(
-      '3.2.0',
-      '3.1.1',
-      '3.1.0',
-      '3.0.3',
-      '3.0.2',
-      '3.0.1',
-      '3.0.0',
-    )),
-    '#default_value' => theme_get_setting('bootstrap_cdn'),
-    '#empty_option' => t('Disabled'),
-    '#empty_value' => NULL,
-  );
-
-  // Bootswatch.
-  $bootswatch_themes = array();
-  $request = drupal_http_request('http://api.bootswatch.com/3/');
-  if ($request && $request->code === '200' && !empty($request->data)) {
-    if (($api = drupal_json_decode($request->data)) && is_array($api) && !empty($api['themes'])) {
-      foreach ($api['themes'] as $bootswatch_theme) {
-        $bootswatch_themes[strtolower($bootswatch_theme['name'])] = $bootswatch_theme['name'];
-      }
-    }
-  }
-  $form['advanced']['bootstrap_cdn']['bootstrap_bootswatch'] = array(
-    '#type' => 'select',
-    '#title' => t('Bootswatch theme'),
-    '#description' => t('Use !bootstrapcdn to serve a Bootswatch Theme. Choose Bootswatch theme here.', array(
-      '!bootstrapcdn' => l(t('BootstrapCDN'), 'http://bootstrapcdn.com', array(
-        'external' => TRUE,
-      )),
-    )),
-    '#default_value' => theme_get_setting('bootstrap_bootswatch'),
-    '#options' => $bootswatch_themes,
-    '#empty_option' => t('Disabled'),
-    '#empty_value' => NULL,
-    '#suffix' => '<div id="bootswatch-preview"></div>',
-    '#states' => array(
-      'invisible' => array(
-        ':input[name="bootstrap_cdn"]' => array('value' => ''),
-      ),
-    ),
-  );
-  if (empty($bootswatch_themes)) {
-    $form['advanced']['bootstrap_cdn']['bootstrap_bootswatch']['#prefix'] = '<div class="alert alert-danger messages error"><strong>' . t('ERROR') . ':</strong> ' . t('Unable to reach Bootswatch API. Please ensure the server your website is hosted on is able to initiate HTTP requests.') . '</div>';
-  }
-
-  // Suppress jQuery message.
-  $form['advanced']['bootstrap_toggle_jquery_error'] = array(
-    '#type' => 'checkbox',
-    '#title' => t('Suppress jQuery version error message'),
-    '#default_value' => theme_get_setting('bootstrap_toggle_jquery_error'),
-    '#description' => t('Enable this if the version of jQuery has been upgraded to 1.7+ using a method other than the !jquery_update module.', array(
-      '!jquery_update' => l(t('jQuery Update'), 'https://drupal.org/project/jquery_update'),
-    )),
-  );
-
-}
diff --git a/js/bootstrap.admin.js b/js/bootstrap.admin.js
index 24f53d6..492de14 100644
--- a/js/bootstrap.admin.js
+++ b/js/bootstrap.admin.js
@@ -10,37 +10,6 @@
     attach: function (context) {
       var $context = $(context);
 
-      // General.
-      $context.find('#edit-general').drupalSetSummary(function () {
-        var summary = [];
-        // Buttons.
-        var size = $context.find('select[name="bootstrap_button_size"] :selected');
-        if (size.val()) {
-          summary.push(Drupal.t('@size Buttons', {
-            '@size': size.text()
-          }));
-        }
-
-        // Images.
-        var shape = $context.find('select[name="bootstrap_image_shape"] :selected');
-        if (shape.val()) {
-          summary.push(Drupal.t('@shape Images', {
-            '@shape': shape.text()
-          }));
-        }
-        if ($context.find(':input[name="bootstrap_image_responsive"]').is(':checked')) {
-          summary.push(Drupal.t('Responsive Images'));
-        }
-
-        // Tables.
-        if ($context.find(':input[name="bootstrap_table_responsive"]').is(':checked')) {
-          summary.push(Drupal.t('Responsive Tables'));
-        }
-
-        return summary.join(', ');
-
-      });
-
       // Components.
       $context.find('#edit-components').drupalSetSummary(function () {
         var summary = [];
@@ -86,6 +55,10 @@
           }
           summary.push(bootstrapCDN);
         }
+        // Rebuild registry.
+        if ($context.find('input[name="bootstrap_rebuild_registry"]').is(':checked')) {
+          summary.push(Drupal.t('Rebuild Registry'));
+        }
         return summary.join(', ');
       });
     }
@@ -111,7 +84,7 @@
               $('<img/>').attr({
                 src: themes[i].thumbnail,
                 alt: themes[i].name
-              }).addClass('img-responsive')
+              })
             )
             .appendTo($preview);
           }
diff --git a/js/bootstrap.js b/js/bootstrap.js
index b4cf99d..86bccbd 100644
--- a/js/bootstrap.js
+++ b/js/bootstrap.js
@@ -57,36 +57,11 @@ var Drupal = Drupal || {};
   Drupal.behaviors.bootstrapPopovers = {
     attach: function (context, settings) {
       if (settings.bootstrap && settings.bootstrap.popoverEnabled) {
-        var $currentPopover = $();
-        if (settings.bootstrap.popoverOptions.triggerAutoclose) {
-          $(document).on('click', function (e) {
-            if ($currentPopover.length && !$(e.target).is('[data-toggle=popover]') && $(e.target).parents('.popover.in').length === 0) {
-              $currentPopover.popover('hide');
-              $currentPopover = $();
-            }
-          });
-        }
-        var elements = $(context).find('[data-toggle=popover]').toArray();
+        var elements = $(context).find('[data-toggle="popover"]').toArray();
         for (var i = 0; i < elements.length; i++) {
           var $element = $(elements[i]);
-          var options = $.extend({}, settings.bootstrap.popoverOptions, $element.data());
-          if (!options.content) {
-            options.content = function () {
-              var target = $(this).data('target');
-              return target && $(target) && $(target).length && $(target).clone().removeClass('element-invisible').wrap('<div/>').parent()[$(this).data('bs.popover').options.html ? 'html' : 'text']() || '';
-            }
-          }
-          $element.popover(options).on('click', function (e) {
-            e.preventDefault();
-          });
-          if (settings.bootstrap.popoverOptions.triggerAutoclose) {
-            $element.on('show.bs.popover', function () {
-              if ($currentPopover.length) {
-                $currentPopover.popover('hide');
-              }
-              $currentPopover = $(this);
-            });
-          }
+          var options = $.extend(true, {}, settings.bootstrap.popoverOptions, $element.data());
+          $element.popover(options);
         }
       }
     }
@@ -101,7 +76,7 @@ var Drupal = Drupal || {};
         var elements = $(context).find('[data-toggle="tooltip"]').toArray();
         for (var i = 0; i < elements.length; i++) {
           var $element = $(elements[i]);
-          var options = $.extend({}, settings.bootstrap.tooltipOptions, $element.data());
+          var options = $.extend(true, {}, settings.bootstrap.tooltipOptions, $element.data());
           $element.tooltip(options);
         }
       }
@@ -142,28 +117,22 @@ var Drupal = Drupal || {};
         }
       }
       $scrollableElement.once('bootstrap-anchors', function () {
-        $scrollableElement.on('click.bootstrap-anchors', 'a[href*="#"]:not([data-toggle],[data-target],[data-slide])', function(e) {
+        $scrollableElement.on('click.bootstrap-anchors', 'a[href*="#"]:not([data-toggle],[data-target])', function(e) {
           this.scrollTo(e);
         });
       });
     },
     bootstrapAnchor: function (element) {
-      element.validAnchor = element.nodeName === 'A' && (location.hostname === element.hostname || !element.hostname) && (element.hash.replace(/#/,'').length > 0);
+      element.validAnchor = element.nodeName === 'A' && (location.hostname === element.hostname || !element.hostname) && element.hash.replace(/#/,'').length;
       element.scrollTo = function(event) {
         var attr = 'id';
         var $target = $(element.hash);
-        // Check for anchors that use the name attribute instead.
         if (!$target.length) {
           attr = 'name';
           $target = $('[name="' + element.hash.replace('#', '') + '"');
         }
-        // Immediately stop if no anchors are found.
-        if (!this.validAnchor && !$target.length) {
-          return;
-        }
-        // Anchor is valid, continue if there is an offset.
         var offset = $target.offset().top - parseInt($scrollableElement.css('paddingTop'), 10) - parseInt($scrollableElement.css('marginTop'), 10);
-        if (offset > 0) {
+        if (this.validAnchor && $target.length && offset > 0) {
           if (event) {
             event.preventDefault();
           }
@@ -175,7 +144,7 @@ var Drupal = Drupal || {};
               top: offset + 'px',
               zIndex: -1000
             })
-            .appendTo($scrollableElement);
+            .appendTo(document);
           $target.removeAttr(attr);
           var complete = function () {
             location.hash = element.hash;
@@ -194,15 +163,4 @@ var Drupal = Drupal || {};
     }
   };
 
-  /**
-   * Tabledrag theming elements.
-   */
-  Drupal.theme.tableDragChangedMarker = function () {
-    return '<span class="tabledrag-changed glyphicon glyphicon-asterisk text-warning"></span>';
-  };
-
-  Drupal.theme.tableDragChangedWarning = function () {
-    return '<div class="tabledrag-changed-warning alert alert-warning messages warning">' + Drupal.theme('tableDragChangedMarker') + ' ' + Drupal.t('Changes made in this table will not be saved until the form is submitted.') + '</div>';
-  };
-
 })(jQuery, Drupal);
diff --git a/js/misc/_collapse.js b/js/misc/_collapse.js
deleted file mode 100644
index 66b754f..0000000
--- a/js/misc/_collapse.js
+++ /dev/null
@@ -1,86 +0,0 @@
-(function ($) {
-
-/**
- * Toggle the visibility of a fieldset using smooth animations.
- */
-Drupal.toggleFieldset = function (fieldset) {
-  var $toggle = $($(fieldset).find('[data-toggle=collapse]').data('target'));
-  if ($toggle.length) {
-    $toggle.collapse('toggle');
-  }
-};
-
-/**
- * Scroll a given fieldset into view as much as possible.
- */
-Drupal.collapseScrollIntoView = function (node) {
-  var h = document.documentElement.clientHeight || document.body.clientHeight || 0;
-  var offset = document.documentElement.scrollTop || document.body.scrollTop || 0;
-  var posY = $(node).offset().top;
-  var fudge = 55;
-  if (posY + node.offsetHeight + fudge > h + offset) {
-    if (node.offsetHeight > h) {
-      window.scrollTo(0, posY);
-    }
-    else {
-      window.scrollTo(0, posY + node.offsetHeight - h + fudge);
-    }
-  }
-};
-
-Drupal.behaviors.collapse = {
-  attach: function (context, settings) {
-    $('fieldset.collapsible', context).once('collapse', function () {
-      var $fieldset = $(this);
-      // Expand fieldset if there are errors inside, or if it contains an
-      // element that is targeted by the URI fragment identifier.
-      var anchor = location.hash && location.hash != '#' ? ', ' + location.hash : '';
-      if ($fieldset.find('.error' + anchor).length) {
-        $fieldset.removeClass('collapsed');
-      }
-
-      var summary = $('<span class="summary"></span>');
-      $fieldset.
-        bind('summaryUpdated', function () {
-          var text = $.trim($fieldset.drupalGetSummary());
-          summary.html(text ? ' (' + text + ')' : '');
-        })
-        .trigger('summaryUpdated');
-
-      // Turn the legend into a clickable link, but retain span.fieldset-legend
-      // for CSS positioning.
-      var $legend = $('> legend .fieldset-legend', this);
-
-      $('<span class="fieldset-legend-prefix element-invisible"></span>')
-        .append($fieldset.hasClass('collapsed') ? Drupal.t('Show') : Drupal.t('Hide'))
-        .prependTo($legend);
-
-      $fieldset.find('[data-toggle=collapse]').on('click', function (e) {
-        e.preventDefault();
-      });
-
-      // Bind Bootstrap events with Drupal core events.
-      $fieldset
-        .append(summary)
-        .on('show.bs.collapse', function () {
-          $fieldset
-            .removeClass('collapsed')
-            .find('> legend span.fieldset-legend-prefix').html(Drupal.t('Hide'));
-        })
-        .on('shown.bs.collapse', function () {
-          $fieldset.trigger({ type: 'collapsed', value: false });
-          Drupal.collapseScrollIntoView($fieldset.get(0));
-        })
-        .on('hide.bs.collapse', function () {
-          $fieldset
-            .addClass('collapsed')
-            .find('> legend span.fieldset-legend-prefix').html(Drupal.t('Show'));
-        })
-        .on('hidden.bs.collapse', function () {
-          $fieldset.trigger({ type: 'collapsed', value: true });
-        });
-    });
-  }
-};
-
-})(jQuery);
diff --git a/js/misc/_vertical-tabs.js b/js/misc/_vertical-tabs.js
index 041ce5e..e8588e0 100644
--- a/js/misc/_vertical-tabs.js
+++ b/js/misc/_vertical-tabs.js
@@ -17,9 +17,6 @@ Drupal.behaviors.verticalTabs = {
     $('.vertical-tabs-panes', context).once('vertical-tabs', function () {
       $(this).addClass('tab-content');
       var focusID = $(':hidden.vertical-tabs-active-tab', this).val();
-      if (typeof focusID === 'undefined' || !focusID.length) {
-        focusID = false;
-      }
       var tab_focus;
 
       // Check if there are some fieldsets that can be converted to vertical-tabs
@@ -44,8 +41,7 @@ Drupal.behaviors.verticalTabs = {
           .addClass('tab-pane vertical-tabs-pane')
           .data('verticalTab', vertical_tab)
           .find('> legend').remove();
-        $(this).find('> div').removeClass('panel-collapse collapse').addClass('fade');
-        if (this.id === focusID) {
+        if (this.id == focusID) {
           tab_focus = $(this);
         }
       });
@@ -112,15 +108,14 @@ Drupal.verticalTab.prototype = {
     this.fieldset
       .siblings('fieldset.vertical-tabs-pane')
         .each(function () {
-          $(this).removeClass('active').find('> div').removeClass('in');
+          $(this).addClass('fade');
           var tab = $(this).data('verticalTab');
           tab.item.removeClass('selected');
         })
         .end()
-        .addClass('active')
+        .addClass('fade in')
         .siblings(':hidden.vertical-tabs-active-tab')
         .val(this.fieldset.attr('id'));
-    this.fieldset.find('> div').addClass('in');
     this.fieldset.data('verticalTab').item.find('a').tab('show');
     this.item.addClass('selected');
     // Mark the active tab for screen readers.
diff --git a/js/misc/autocomplete.js b/js/misc/autocomplete.js
index fd304d3..498cdf9 100644
--- a/js/misc/autocomplete.js
+++ b/js/misc/autocomplete.js
@@ -26,16 +26,6 @@ Drupal.behaviors.autocomplete = {
 };
 
 /**
- * Prevents the form from submitting if the suggestions popup is open
- * and closes the suggestions popup when doing so.
- */
-Drupal.autocompleteSubmit = function () {
-  return $('.form-autocomplete > .dropdown').each(function () {
-    this.owner.hidePopup();
-  }).length == 0;
-};
-
-/**
  * Highlights a suggestion.
  */
 Drupal.jsAC.prototype.highlight = function (node) {
@@ -115,17 +105,17 @@ Drupal.jsAC.prototype.found = function (matches) {
 };
 
 Drupal.jsAC.prototype.setStatus = function (status) {
-  var $throbber = $('.glyphicon-refresh, .autocomplete-throbber', $('#' + this.input.id).parent()).first();
-  var throbbingClass = $throbber.is('.autocomplete-throbber') ? 'throbbing' : 'glyphicon-spin';
+  var $throbber = $('.glyphicon-refresh', $('#' + this.input.id).parent());
+
   switch (status) {
     case 'begin':
-      $throbber.addClass(throbbingClass);
+      $throbber.addClass('glyphicon-spin');
       $(this.ariaLive).html(Drupal.t('Searching for matches...'));
       break;
     case 'cancel':
     case 'error':
     case 'found':
-      $throbber.removeClass(throbbingClass);
+      $throbber.removeClass('glyphicon-spin');
       break;
   }
 };
diff --git a/js/misc/states.js b/js/misc/states.js
deleted file mode 100644
index a896008..0000000
--- a/js/misc/states.js
+++ /dev/null
@@ -1,24 +0,0 @@
-(function($) {
-  // Unbind core state.js from document first so we can then override below.
-  $(document).unbind('state:disabled');
-
-  /**
-   * Global state change handlers. These are bound to "document" to cover all
-   * elements whose state changes. Events sent to elements within the page
-   * bubble up to these handlers. We use this system so that themes and modules
-   * can override these state change handlers for particular parts of a page.
-   */
-  $(document).bind('state:disabled', function(e) {
-    // Only act when this change was triggered by a dependency and not by the
-    // element monitoring itself.
-    if (e.trigger) {
-      $(e.target)
-        .attr('disabled', e.value)
-        .closest('.form-item, .form-submit, .form-wrapper').toggleClass('form-disabled', e.value)
-        .find(':input').attr('disabled', e.value);
-
-      // Note: WebKit nightlies don't reflect that change correctly.
-      // See https://bugs.webkit.org/show_bug.cgi?id=23789
-    }
-  });
-})(jQuery);
diff --git a/js/modules/ctools/js/modal.js b/js/modules/ctools/js/modal.js
index e9c421e..0b5d101 100644
--- a/js/modules/ctools/js/modal.js
+++ b/js/modules/ctools/js/modal.js
@@ -85,8 +85,6 @@
       }
     }
 
-    $('body').addClass('modal-open');
-
     resize();
 
     $('.modal-title', Drupal.CTools.Modal.modal).html(Drupal.CTools.Modal.currentSettings.loadingText);
@@ -94,23 +92,16 @@
     $('#modalContent .modal-body').html(Drupal.theme(settings.throbberTheme));
   };
 
-  Drupal.CTools.Modal.dismiss = function() {
-    if (Drupal.CTools.Modal.modal) {
-      $('body').removeClass('modal-open');
-      Drupal.CTools.Modal.unmodalContent(Drupal.CTools.Modal.modal);
-    }
-  };
-
   /**
    * Provide the HTML to create the modal dialog in the Bootstrap style.
    */
   Drupal.theme.prototype.CToolsModalDialog = function () {
     var html = ''
     html += '  <div id="ctools-modal">'
-    html += '    <div class="ctools-modal-dialog modal-dialog">'
+    html += '    <div class="ctools-modal-dialog">'
     html += '      <div class="modal-content">'
     html += '        <div class="modal-header">';
-    html += '          <button type="button" class="close ctools-close-modal" aria-hidden="true">&times;</button>';
+    html += '          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>';
     html += '          <h4 id="modal-title" class="modal-title">&nbsp;</h4>';
     html += '        </div>';
     html += '        <div id="modal-content" class="modal-body">';
diff --git a/js/modules/dashboard/dashboard.js b/js/modules/dashboard/dashboard.js
deleted file mode 100644
index 8d2c3ff..0000000
--- a/js/modules/dashboard/dashboard.js
+++ /dev/null
@@ -1,27 +0,0 @@
-(function ($) {
-  // Override core JS so it works with "button" tags.
-  if (Drupal.behaviors.dashboard && Drupal.behaviors.dashboard.setupDrawer) {
-    /**
-     * Sets up the drag-and-drop behavior and the 'close' button.
-     */
-    Drupal.behaviors.dashboard.setupDrawer = function () {
-      $('div.customize .canvas-content :input').click(Drupal.behaviors.dashboard.exitCustomizeMode);
-      $('div.customize .canvas-content').append('<a class="button" href="' + Drupal.settings.dashboard.dashboard + '">' + Drupal.t('Done') + '</a>');
-      // Initialize drag-and-drop.
-      var regions = $('#dashboard div.region');
-      regions.sortable({
-        connectWith: regions,
-        cursor: 'move',
-        cursorAt: {top:0},
-        dropOnEmpty: true,
-        items: '> div.block, > div.disabled-block',
-        placeholder: 'block-placeholder clearfix',
-        tolerance: 'pointer',
-        start: Drupal.behaviors.dashboard.start,
-        over: Drupal.behaviors.dashboard.over,
-        sort: Drupal.behaviors.dashboard.sort,
-        update: Drupal.behaviors.dashboard.update
-      });
-    };
-  }
-})(jQuery);
diff --git a/js/modules/field_ui/field_ui.js b/js/modules/field_ui/field_ui.js
deleted file mode 100644
index 1eafd02..0000000
--- a/js/modules/field_ui/field_ui.js
+++ /dev/null
@@ -1,43 +0,0 @@
-(function ($) {
-  // Override core JS so it works with "button" tags.
-  if (Drupal.fieldUIOverview && Drupal.fieldUIOverview.AJAXRefreshRows) {
-    /**
-     * Triggers Ajax refresh of selected rows.
-     *
-     * The 'format type' selects can trigger a series of changes in child rows.
-     * The #ajax behavior is therefore not attached directly to the selects, but
-     * triggered manually through a hidden #ajax 'Refresh' button.
-     *
-     * @param rows
-     *   A hash object, whose keys are the names of the rows to refresh (they
-     *   will receive the 'ajax-new-content' effect on the server side), and
-     *   whose values are the DOM element in the row that should get an Ajax
-     *   throbber.
-     */
-    Drupal.fieldUIOverview.AJAXRefreshRows = function (rows) {
-      // Separate keys and values.
-      var rowNames = [];
-      var ajaxElements = [];
-      $.each(rows, function (rowName, ajaxElement) {
-        rowNames.push(rowName);
-        ajaxElements.push(ajaxElement);
-      });
-
-      if (rowNames.length) {
-        // Add a throbber next each of the ajaxElements.
-        var $throbber = $('<div class="ajax-progress ajax-progress-throbber"><div class="throbber">&nbsp;</div></div>');
-        $(ajaxElements)
-          .addClass('progress-disabled')
-          .after($throbber);
-
-        // Fire the Ajax update.
-        $(':input[name=refresh_rows]').val(rowNames.join(' '));
-        $(':input#edit-refresh').mousedown();
-
-        // Disabled elements do not appear in POST ajax data, so we mark the
-        // elements disabled only after firing the request.
-        $(ajaxElements).attr('disabled', true);
-      }
-    };
-  }
-})(jQuery);
diff --git a/js/modules/file/file.js b/js/modules/file/file.js
deleted file mode 100644
index edc485a..0000000
--- a/js/modules/file/file.js
+++ /dev/null
@@ -1,71 +0,0 @@
-(function ($) {
-  // Override core JS so it works with "button" tags.
-  /**
-   * Attach behaviors to the file upload and remove buttons.
-   */
-  Drupal.behaviors.fileButtons = {
-    attach: function (context) {
-      $(':input.form-submit', context).bind('mousedown', Drupal.file.disableFields);
-      $('div.form-managed-file :input.form-submit', context).bind('mousedown', Drupal.file.progressBar);
-    },
-    detach: function (context) {
-      $(':input.form-submit', context).unbind('mousedown', Drupal.file.disableFields);
-      $('div.form-managed-file :input.form-submit', context).unbind('mousedown', Drupal.file.progressBar);
-    }
-  };
-  if (Drupal.file) {
-    /**
-     * Prevent file uploads when using buttons not intended to upload.
-     */
-    Drupal.file.disableFields = function (event){
-      var clickedButton = this;
-
-      // Only disable upload fields for Ajax buttons.
-      if (!$(clickedButton).hasClass('ajax-processed')) {
-        return;
-      }
-
-      // Check if we're working with an "Upload" button.
-      var $enabledFields = [];
-      if ($(this).closest('div.form-managed-file').length > 0) {
-        $enabledFields = $(this).closest('div.form-managed-file').find(':input.form-file');
-      }
-
-      // Temporarily disable upload fields other than the one we're currently
-      // working with. Filter out fields that are already disabled so that they
-      // do not get enabled when we re-enable these fields at the end of behavior
-      // processing. Re-enable in a setTimeout set to a relatively short amount
-      // of time (1 second). All the other mousedown handlers (like Drupal's Ajax
-      // behaviors) are excuted before any timeout functions are called, so we
-      // don't have to worry about the fields being re-enabled too soon.
-      // @todo If the previous sentence is true, why not set the timeout to 0?
-      var $fieldsToTemporarilyDisable = $('div.form-managed-file :input.form-file').not($enabledFields).not(':disabled');
-      $fieldsToTemporarilyDisable.attr('disabled', 'disabled');
-      setTimeout(function (){
-        $fieldsToTemporarilyDisable.attr('disabled', false);
-      }, 1000);
-    };
-    /**
-     * Add progress bar support if possible.
-     */
-    Drupal.file.progressBar = function (event) {
-      var clickedButton = this;
-      var $progressId = $(clickedButton).closest('div.form-managed-file').find(':input.file-progress');
-      if ($progressId.length) {
-        var originalName = $progressId.attr('name');
-
-        // Replace the name with the required identifier.
-        $progressId.attr('name', originalName.match(/APC_UPLOAD_PROGRESS|UPLOAD_IDENTIFIER/)[0]);
-
-        // Restore the original name after the upload begins.
-        setTimeout(function () {
-          $progressId.attr('name', originalName);
-        }, 1000);
-      }
-      // Show the progress bar if the upload takes longer than half a second.
-      setTimeout(function () {
-        $(clickedButton).closest('div.form-managed-file').find('div.ajax-progress-bar').slideDown();
-      }, 500);
-    };
-  }
-})(jQuery);
diff --git a/starterkits/cdn/README.txt b/starterkits/cdn/README.txt
deleted file mode 100644
index a668d4b..0000000
--- a/starterkits/cdn/README.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-To help consolidate and remove possible future inconsistencies, the
-documentation for this sub-theme starter kit has been moved to:
-http://drupal.org/node/1978010.
diff --git a/starterkits/cdn/cdn.starterkit b/starterkits/cdn/cdn.starterkit
deleted file mode 100644
index cd0f885..0000000
--- a/starterkits/cdn/cdn.starterkit
+++ /dev/null
@@ -1,27 +0,0 @@
-name = Bootstrap CDN
-description = Uses http://bootstrapcdn.com for all styles and JavaScript. No source files or compiling is necessary and is recommended for simple sites or beginners.
-core = 7.x
-base theme = bootstrap
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Regions
-;;;;;;;;;;;;;;;;;;;;;
-
-regions[navigation]     = 'Navigation'
-regions[header]         = 'Top Bar'
-regions[highlighted]    = 'Highlighted'
-regions[help]           = 'Help'
-regions[content]        = 'Content'
-regions[sidebar_first]  = 'Primary'
-regions[sidebar_second] = 'Secondary'
-regions[footer]         = 'Footer'
-regions[page_top]       = 'Page top'
-regions[page_bottom]    = 'Page bottom'
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Stylesheets
-;;;;;;;;;;;;;;;;;;;;;
-
-stylesheets[all][] = css/style.css
diff --git a/starterkits/cdn/css/README.txt b/starterkits/cdn/css/README.txt
deleted file mode 100644
index ead495b..0000000
--- a/starterkits/cdn/css/README.txt
+++ /dev/null
@@ -1 +0,0 @@
-Edit the style.css file to your liking.
diff --git a/starterkits/cdn/css/style.css b/starterkits/cdn/css/style.css
deleted file mode 100644
index 2d381c5..0000000
--- a/starterkits/cdn/css/style.css
+++ /dev/null
@@ -1,3 +0,0 @@
-/**
- * Styles for the {{ THEME NAME }} theme.
- */
diff --git a/starterkits/cdn/favicon.ico b/starterkits/cdn/favicon.ico
deleted file mode 100644
index dea5740..0000000
Binary files a/starterkits/cdn/favicon.ico and /dev/null differ
diff --git a/starterkits/cdn/logo.png b/starterkits/cdn/logo.png
deleted file mode 100644
index 9477336..0000000
Binary files a/starterkits/cdn/logo.png and /dev/null differ
diff --git a/starterkits/cdn/screenshot.png b/starterkits/cdn/screenshot.png
deleted file mode 100644
index 7b6893a..0000000
Binary files a/starterkits/cdn/screenshot.png and /dev/null differ
diff --git a/starterkits/cdn/template.php b/starterkits/cdn/template.php
deleted file mode 100755
index ffa1a05..0000000
--- a/starterkits/cdn/template.php
+++ /dev/null
@@ -1,5 +0,0 @@
-<?php
-/**
- * @file
- * template.php
- */
diff --git a/starterkits/cdn/templates/README.txt b/starterkits/cdn/templates/README.txt
deleted file mode 100644
index 6fa8a40..0000000
--- a/starterkits/cdn/templates/README.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-This folder is where you should place all your overriding template files. By
-default, the Bootstrap base theme provides all the necessary template files in
-various folders inside of sites/*/themes/bootstrap/templates. For example, the
-page.tpl.php template file is located at
-sites/*/themes/bootstrap/templates/system/page.tpl.php. To override any of these
-files, copy them from the Bootstrap base theme and place them in here.
diff --git a/starterkits/less/README.txt b/starterkits/less/README.txt
deleted file mode 100644
index a668d4b..0000000
--- a/starterkits/less/README.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-To help consolidate and remove possible future inconsistencies, the
-documentation for this sub-theme starter kit has been moved to:
-http://drupal.org/node/1978010.
diff --git a/starterkits/less/css/README.txt b/starterkits/less/css/README.txt
deleted file mode 100644
index 923569d..0000000
--- a/starterkits/less/css/README.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-If using Method 1, this folder is where the output from the compiled LESS files
-should be generated. If using the LESS module, this folder can be ignored or
-removed.
-
-If using Method 2, edit the style.css file to your liking.
diff --git a/starterkits/less/css/style.css b/starterkits/less/css/style.css
deleted file mode 100644
index e040090..0000000
--- a/starterkits/less/css/style.css
+++ /dev/null
@@ -1,4 +0,0 @@
-/**
- * This file should get overwritten if Method 1 is used. If Method 2 is chosen,
- * remove this comment and start adding your styles to this file.
- */
diff --git a/starterkits/less/favicon.ico b/starterkits/less/favicon.ico
deleted file mode 100644
index dea5740..0000000
Binary files a/starterkits/less/favicon.ico and /dev/null differ
diff --git a/starterkits/less/less.starterkit b/starterkits/less/less.starterkit
deleted file mode 100644
index 5a84ffe..0000000
--- a/starterkits/less/less.starterkit
+++ /dev/null
@@ -1,48 +0,0 @@
-name = LESS (source)
-description = Uses the LESS Bootstrap framework source files and must be compiled (not for beginners).
-core = 7.x
-base theme = bootstrap
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Regions
-;;;;;;;;;;;;;;;;;;;;;
-
-regions[navigation]     = 'Navigation'
-regions[header]         = 'Top Bar'
-regions[highlighted]    = 'Highlighted'
-regions[help]           = 'Help'
-regions[content]        = 'Content'
-regions[sidebar_first]  = 'Primary'
-regions[sidebar_second] = 'Secondary'
-regions[footer]         = 'Footer'
-regions[page_top]       = 'Page top'
-regions[page_bottom]    = 'Page bottom'
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Stylesheets
-;;;;;;;;;;;;;;;;;;;;;
-
-stylesheets[all][] = css/style.css
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Scripts
-;;;;;;;;;;;;;;;;;;;;;
-
-scripts[] = 'bootstrap/js/affix.js'
-scripts[] = 'bootstrap/js/alert.js'
-scripts[] = 'bootstrap/js/button.js'
-scripts[] = 'bootstrap/js/carousel.js'
-scripts[] = 'bootstrap/js/collapse.js'
-scripts[] = 'bootstrap/js/dropdown.js'
-scripts[] = 'bootstrap/js/modal.js'
-scripts[] = 'bootstrap/js/tooltip.js'
-scripts[] = 'bootstrap/js/popover.js'
-scripts[] = 'bootstrap/js/scrollspy.js'
-scripts[] = 'bootstrap/js/tab.js'
-scripts[] = 'bootstrap/js/transition.js'
-
-; Disable BootstrapCDN so the compiled LESS source files can be used.
-settings[bootstrap_cdn] = ''
diff --git a/starterkits/less/less/README.txt b/starterkits/less/less/README.txt
deleted file mode 100644
index 85293ea..0000000
--- a/starterkits/less/less/README.txt
+++ /dev/null
@@ -1,35 +0,0 @@
-The following files are simply duplicates from the Bootstrap library. With
-modifications in were to reference the imports. In theory, you could replace
-them if you update the Bootstrap framework by copying them from that framework
-again. Just make sure to modify the import paths to reference the
-`./bootstrap/less` folder:
-```
-./less/bootstrap.less
-./less/responsive.less
-./less/variables.less
-```
-
-The `./less/variables.less` file is generally where you will spend most of
-your time customizing the various Bootstrap settings. Feel free to manually
-edit it or even replace it with a service like
-[BootTheme](http://www.boottheme.com).
-
-The `./less/fixes.less` file contains various Bootstrap and Drupal fixes. It
-may contain a few enhancements, feel free to edit this file as you see fit.
-
-The following files are relatively blank (they may contain some code for the
-inital sub-theme), but this is where you will actually spend most of your time
-specifying specific styling for your sites configuration.
-```
-./less/header.less
-./less/content.less
-./less/footer.less
-```
-
-And finally, the `./less/style.less` file is the glue that holds it all
-together and compiles everything into one file. Generally, you will not need
-to modify this file unless you need to add or remove imported files. For
-example, if you do not want your site to have responsive capabilities, free to
-comment or remove that line. If you are a file hierarchy wizard and need to
-separate your theme into multiple files, insert additional `@import '...';`
-lines. 
diff --git a/starterkits/less/less/bootstrap.less b/starterkits/less/less/bootstrap.less
deleted file mode 100644
index 23f2f60..0000000
--- a/starterkits/less/less/bootstrap.less
+++ /dev/null
@@ -1,50 +0,0 @@
-// Core variables and mixins
-@import "variables"; // Modify this for custom colors, font-sizes, etc
-@import "../bootstrap/less/mixins.less";
-
-// Reset
-@import "../bootstrap/less/normalize.less";
-@import "../bootstrap/less/print.less";
-
-// Core CSS
-@import "../bootstrap/less/scaffolding.less";
-@import "../bootstrap/less/type.less";
-@import "../bootstrap/less/code.less";
-@import "../bootstrap/less/grid.less";
-
-@import "../bootstrap/less/tables.less";
-@import "../bootstrap/less/forms.less";
-@import "../bootstrap/less/buttons.less";
-
-// Components
-@import "../bootstrap/less/component-animations.less";
-@import "../bootstrap/less/glyphicons.less";
-@import "../bootstrap/less/dropdowns.less";
-@import "../bootstrap/less/button-groups.less";
-@import "../bootstrap/less/input-groups.less";
-@import "../bootstrap/less/navs.less";
-@import "../bootstrap/less/navbar.less";
-@import "../bootstrap/less/breadcrumbs.less";
-@import "../bootstrap/less/pagination.less";
-@import "../bootstrap/less/pager.less";
-@import "../bootstrap/less/labels.less";
-@import "../bootstrap/less/badges.less";
-@import "../bootstrap/less/jumbotron.less";
-@import "../bootstrap/less/thumbnails.less";
-@import "../bootstrap/less/alerts.less";
-@import "../bootstrap/less/progress-bars.less";
-@import "../bootstrap/less/media.less";
-@import "../bootstrap/less/list-group.less";
-@import "../bootstrap/less/panels.less";
-@import "../bootstrap/less/wells.less";
-@import "../bootstrap/less/close.less";
-
-// Components w/ JavaScript
-@import "../bootstrap/less/modals.less";
-@import "../bootstrap/less/tooltip.less";
-@import "../bootstrap/less/popovers.less";
-@import "../bootstrap/less/carousel.less";
-
-// Utility classes
-@import "../bootstrap/less/utilities.less";
-@import "../bootstrap/less/responsive-utilities.less";
diff --git a/starterkits/less/less/content.less b/starterkits/less/less/content.less
deleted file mode 100644
index f83569b..0000000
--- a/starterkits/less/less/content.less
+++ /dev/null
@@ -1 +0,0 @@
-// Insert your styling here.
diff --git a/starterkits/less/less/footer.less b/starterkits/less/less/footer.less
deleted file mode 100644
index f83569b..0000000
--- a/starterkits/less/less/footer.less
+++ /dev/null
@@ -1 +0,0 @@
-// Insert your styling here.
diff --git a/starterkits/less/less/header.less b/starterkits/less/less/header.less
deleted file mode 100644
index f83569b..0000000
--- a/starterkits/less/less/header.less
+++ /dev/null
@@ -1 +0,0 @@
-// Insert your styling here.
diff --git a/starterkits/less/less/overrides.less b/starterkits/less/less/overrides.less
deleted file mode 100644
index 1e23e8e..0000000
--- a/starterkits/less/less/overrides.less
+++ /dev/null
@@ -1,764 +0,0 @@
-// Bootstrap variables.
-@import 'variables';
-
-// Media query variables.
-@tablet:  ~"screen and (min-width: @{screen-sm-min})";
-@normal:  ~"screen and (min-width: @{screen-md-min})";
-@wide:    ~"screen and (min-width: @{screen-lg-min})";
-
-// Drop shadows.
-.box-shadow(@shadow) {
-  -webkit-box-shadow: @shadow;
-     -moz-box-shadow: @shadow;
-          box-shadow: @shadow;
-}
-
-html {
-  &.overlay-open .navbar-fixed-top {
-    z-index: 400;
-  }
-  &.js {
-    // Collapsible fieldsets.
-    fieldset.collapsed {
-      border-left-width: 1px;
-      border-right-width: 1px;
-      height: auto;
-    }
-    // Throbbers.
-    input.form-autocomplete {
-      background-image: none;
-    }
-    // Autocomplete.
-    input.form-autocomplete {
-      background-image: none;
-    }
-    // Autocomplete (fallback throbber, no icon).
-    .autocomplete-throbber {
-      background-position: 100% 2px;
-      background-repeat: no-repeat;
-      display: inline-block;
-      height: 15px;
-      margin: 2px 0 0 2px;
-      width: 15px;
-    }
-    .autocomplete-throbber.throbbing {
-      background-position: 100% -18px;
-    }
-  }
-}
-body {
-  // Fix horizontal scrolling on iOS devices.
-  // http://drupal.org/node/1870076
-  position: relative;
-  &.admin-expanded.admin-vertical.admin-nw .navbar,
-  &.admin-expanded.admin-vertical.admin-sw .navbar {
-    margin-left: 260px;
-  }
-  // Add padding to body if various toolbar or navbars are fixed on top.
-  &.navbar-is-fixed-top {
-    padding-top: 64px !important;
-  }
-  &.navbar-is-fixed-bottom {
-    padding-bottom: 64px !important;
-  }
-  &.toolbar {
-    padding-top: 30px !important;
-    .navbar-fixed-top {
-      top: 30px;
-    }
-    &.navbar-is-fixed-top {
-      padding-top: 94px !important;
-    }
-  }
-  &.toolbar-drawer {
-    padding-top: 64px !important;
-    .navbar-fixed-top {
-      top: 64px;
-    }
-    &.navbar-is-fixed-top {
-      padding-top: 128px !important;
-    }
-  }
-  // Admin_menu toolbar.
-  &.admin-menu {
-    .navbar-fixed-top {
-      top: 29px;
-    }
-    &.navbar-is-fixed-top {
-      padding-top: 93px !important;
-    }
-  }
-  div#admin-toolbar {
-    z-index: 1600;
-  }
-  // Override box-shadow styles on all "admin" menus.
-  #toolbar, #admin-menu, #admin-toolbar {
-    .box-shadow(none);
-  }
-  // Override #admin-menu style.
-  #admin-menu {
-    margin: 0;
-    padding: 0;
-    position: fixed;
-    z-index: 1600;
-    .dropdown li {
-      line-height: normal;
-    }
-  }
-}
-
-// Default navbar.
-.navbar.container {
-  @media @tablet {
-    max-width: ((@container-sm - @grid-gutter-width));
-  }
-  @media @normal {
-    max-width: ((@container-md - @grid-gutter-width));
-  }
-  @media @wide {
-    max-width: ((@container-lg - @grid-gutter-width));
-  }
-  margin-top: 20px;
-  > .container {
-    margin: 0;
-    padding: 0;
-    width: auto;
-  }
-}
-
-// Adjust z-index of core components.
-#overlay-container,
-.overlay-modal-background,
-.overlay-element {
-  z-index: 1500;
-}
-#toolbar {
-  z-index: 1600;
-}
-// Adjust z-index of bootstrap modals
-.modal {
-  z-index: 1620;
-}
-.modal-dialog {
-  z-index: 1630;
-}
-.ctools-modal-dialog .modal-body {
-  width: 100% !important;
-  overflow: auto;
-}
-.modal-backdrop {
-  z-index: 1610;
-}
-.footer {
-  margin-top: 45px;
-  padding-top: 35px;
-  padding-bottom: 36px;
-  border-top: 1px solid #E5E5E5;
-}
-
-// Element invisible fix
-.element-invisible {
-  margin: 0;
-  padding: 0;
-  width: 1px;
-}
-
-// Branding.
-.navbar .logo {
-  margin-right: -15px;
-  padding-left: 15px;
-  padding-right: 15px;
-  @media @tablet {
-    margin-right: 0;
-    padding-left: 0;
-  }
-}
-
-// Navigation.
-ul.secondary {
-  float: left;
-  @media @tablet {
-    float: right;
-  }
-}
-
-// Page header.
-.page-header {
-  margin-top: 0;
-}
-
-// Blocks
-.block {
-  &:first-child h2.block-title {
-    margin-top: 0;
-  }
-}
-
-// Paragraphs.
-p:last-child {
-  margin-bottom: 0;
-}
-
-// Help region.
-.region-help {
-  > .glyphicon {
-    font-size: @font-size-large;
-    float: left;
-    margin: -0.05em 0.5em 0 0;
-  }
-  .block {
-    overflow: hidden;
-  }
-}
-
-// Search form.
-form#search-block-form {
-  margin: 0;
-}
-.navbar #block-search-form {
-  float: none;
-  margin: 5px 0 5px 5px;
-  @media @normal {
-    float: right;
-  }
-}
-.navbar-search .control-group {
-  margin-bottom:0px;
-}
-
-// Action Links
-ul.action-links {
-  margin: @padding-base-horizontal 0;
-  padding: 0;
-  li {
-    display: inline;
-    margin: 0;
-    padding: 0 @padding-base-vertical 0 0;
-  }
-  .glyphicon {
-    padding-right: 0.5em;
-  }
-}
-
-// Form elements.
-input, textarea, select, .uneditable-input {
-  max-width: 100%;
-  width: auto;
-}
-input.error {
-  color: @state-danger-text;
-  border-color: @state-danger-border;
-}
-fieldset legend.panel-heading {
-  float: left;
-  line-height: 1em;
-  margin: 0;
-}
-fieldset .panel-body {
-  clear: both;
-  display: inherit;
-}
-fieldset .panel-heading a.panel-title {
-  color: inherit;
-  display: block;
-  margin: -10px -15px;
-  padding: 10px 15px;
-  &:hover {
-    text-decoration: none;
-  }
-}
-.form-group:last-child,
-.panel:last-child {
-  margin-bottom: 0;
-}
-.form-horizontal .form-group {
-  margin-left: 0;
-  margin-right: 0;
-}
-.form-actions{
-  clear: both;
-}
-.resizable-textarea textarea {
-  border-radius: @border-radius-base @border-radius-base 0 0;
-}
-.radio, .checkbox {
-  &:first-child {
-    margin-top: 0;
-  }
-  &:last-child {
-    margin-bottom: 0;
-  }
-}
-.help-block, .control-group .help-inline {
-  color: @gray-light;
-  font-size: 12px;
-  margin: 5px 0 10px;
-  padding: 0;
-}
-.panel-heading {
-  display: block;
-}
-a.tabledrag-handle .handle {
-  height: auto;
-  width: auto;
-}
-
-// Error containers.
-.error {
-  color: @state-danger-text;
-}
-div.error,
-table tr.error {
-  background-color: @state-danger-bg;
-  color: @state-danger-text;
-}
-.control-group.error {
-  background: none;
-  label, .control-label {
-    color: @state-danger-text;
-    font-weight: 600;
-  }
-  input, textarea, select, .uneditable-input {
-    color: @input-color;
-    border: 1px solid @input-border;
-  }
-  .help-block, .help-inline {
-    color: @text-color;
-  }
-}
-
-// Lists
-.nav-tabs {
-  margin-bottom: 10px;
-}
-ul li.collapsed,
-ul li.expanded,
-ul li.leaf {
-  list-style: none;
-  list-style-image: none;
-}
-.tabs--secondary {
-  margin: 0 0 10px;
-}
-
-// Submitted
-.submitted {
-  margin-bottom: 1em;
-  font-style: italic;
-  font-weight: normal;
-  color: #777;
-}
-
-// Password strength indicator.
-.password-strength {
-  width: 17em;
-  float: right;  /* LTR */
-  margin-top: 1.4em;
-}
-.password-strength-title {
-  display: inline;
-}
-.password-strength-text {
-  float: right; /* LTR */
-  font-weight: bold;
-}
-.password-indicator {
-  background-color: darken(@input-color-placeholder, 2%);
-  height: 0.3em;
-  width: 100%;
-  div {
-    height: 100%;
-    width: 0%;
-    background-color: @input-color-placeholder;
-  }
-}
-input.password-confirm,
-input.password-field {
-  width: 16em;
-  margin-bottom: 0.4em;
-}
-div.password-confirm {
-  float: right;  /* LTR */
-  margin-top: 1.5em;
-  visibility: hidden;
-  width: 17em;
-}
-div.form-item div.password-suggestions {
-  padding: 0.2em 0.5em;
-  margin: 0.7em 0;
-  width: 38.5em;
-  border: 1px solid #B4B4B4;
-}
-div.password-suggestions ul {
-  margin-bottom: 0;
-}
-.confirm-parent,
-.password-parent {
-  clear: left; /* LTR */
-  margin: 0;
-  width: 36.3em;
-}
-
-// Progress bar.
-.progress-wrapper .progress {
-  margin-bottom: 10px;
-}
-
-// Views AJAX pager.
-.pagination ul > li > a {
-  &.progress-disabled {
-    float: left;
-  }
-}
-
-// Autocomplete and throbber
-.form-autocomplete {
-  .glyphicon {
-    color: @gray-light;
-    font-size: 120%;
-    &.glyphicon-spin {
-      color: @brand-primary;
-    }
-  }
-  .input-group-addon {
-    background-color: rgb(255, 255, 255);
-  }
-}
-
-// AJAX "Throbber".
-.ajax-progress {
-  .glyphicon {
-    font-size: 90%;
-    margin: 0 -.25em 0 0.5em;
-  }
-}
-
-.glyphicon-spin {
-  display: inline-block;
-  -moz-animation: spin 1s infinite linear;
-  -o-animation: spin 1s infinite linear;
-  -webkit-animation: spin 1s infinite linear;
-  animation: spin 1s infinite linear;
-}
-a .glyphicon-spin {
-  display: inline-block;
-  text-decoration: none;
-}
-@-moz-keyframes spin {
-  0% {
-    -moz-transform: rotate(0deg);
-  }
-  100% {
-    -moz-transform: rotate(359deg);
-  }
-}
-@-webkit-keyframes spin {
-  0% {
-    -webkit-transform: rotate(0deg);
-  }
-  100% {
-    -webkit-transform: rotate(359deg);
-  }
-}
-@-o-keyframes spin {
-  0% {
-    -o-transform: rotate(0deg);
-  }
-  100% {
-    -o-transform: rotate(359deg);
-  }
-}
-@-ms-keyframes spin {
-  0% {
-    -ms-transform: rotate(0deg);
-  }
-  100% {
-    -ms-transform: rotate(359deg);
-  }
-}
-@keyframes spin {
-  0% {
-    transform: rotate(0deg);
-  }
-  100% {
-    transform: rotate(359deg);
-  }
-}
-
-.glyphicon-refresh {
-  -webkit-transform-origin: 50% 45%;
-  -moz-transform-origin: 50% 45%;
-  -ms-transform-origin: 50% 45%;
-  -o-transform-origin: 50% 45%;
-  transform-origin: 50% 45%;
-}
-
-/**
- * Missing Bootstrap 2 tab styling.
- * @see http://stackoverflow.com/questions/18432577/stacked-tabs-in-bootstrap-3
- * @see http://bootply.com/74926
- */
-.tabbable {
-  margin-bottom: 20px;
-}
-.tabs-below, .tabs-left, .tabs-right {
-  > .nav-tabs {
-    border-bottom: 0;
-    .summary {
-      color: @nav-disabled-link-color;
-      font-size: @font-size-small;
-    }
-  }
-}
-.tab-pane > .panel-heading {
-  display: none;
-}
-.tab-content > .active {
-  display: block;
-}
-
-// Below.
-.tabs-below {
-  > .nav-tabs {
-    border-top: 1px solid @nav-tabs-border-color;
-    > li {
-      margin-top: -1px;
-      margin-bottom: 0;
-      > a {
-        border-radius: 0 0 @border-radius-base @border-radius-base;
-        &:hover,
-        &:focus {
-          border-top-color: @nav-tabs-border-color;
-          border-bottom-color: transparent;
-        }
-      }
-    }
-    > .active {
-      > a,
-      > a:hover,
-      > a:focus {
-        border-color: transparent @nav-tabs-border-color @nav-tabs-border-color @nav-tabs-border-color;
-      }
-    }
-  }
-}
-
-// Left and right tabs.
-.tabs-left,
-.tabs-right {
-  > .nav-tabs {
-    padding-bottom: 20px;
-    width: 220px;
-    > li {
-      float: none;
-      &:focus {
-        outline: 0;
-      }
-      > a {
-        margin-right: 0;
-        margin-bottom: 3px;
-        &:focus {
-          outline: 0;
-        }
-      }
-    }
-  }
-  > .tab-content {
-    border-radius: 0 @border-radius-base @border-radius-base @border-radius-base;
-    .box-shadow(0 1px 1px rgba(0,0,0,.05));
-    border: 1px solid @nav-tabs-border-color;
-    overflow: hidden;
-    padding: 10px 15px;
-  }
-}
-
-// Left tabs.
-.tabs-left {
-  > .nav-tabs {
-    float: left;
-    margin-right: -1px;
-    > li > a {
-      border-radius: @border-radius-base 0 0 @border-radius-base;
-      &:hover,
-      &:focus {
-        border-color: @nav-tabs-link-hover-border-color @nav-tabs-border-color @nav-tabs-link-hover-border-color @nav-tabs-link-hover-border-color;
-      }
-    }
-    > .active > a,
-    > .active > a:hover,
-    > .active > a:focus {
-      border-color: @nav-tabs-border-color transparent @nav-tabs-border-color @nav-tabs-border-color;
-      .box-shadow(-1px 1px 1px rgba(0,0,0,.05));
-    }
-  }
-}
-
-// Right tabs.
-.tabs-right {
-  > .nav-tabs {
-    float: right;
-    margin-left: -1px;
-    > li > a {
-      border-radius: 0 @border-radius-base @border-radius-base 0;
-      &:hover,
-      &:focus {
-        border-color: @nav-tabs-link-hover-border-color @nav-tabs-link-hover-border-color @nav-tabs-link-hover-border-color @nav-tabs-border-color;
-        .box-shadow(1px 1px 1px rgba(0,0,0,.05));
-      }
-    }
-    > .active > a,
-    > .active > a:hover,
-    > .active > a:focus {
-      border-color: @nav-tabs-border-color @nav-tabs-border-color @nav-tabs-border-color transparent;
-    }
-  }
-}
-
-// Checkbox cell fix.
-th.checkbox,
-td.checkbox,
-th.radio,
-td.radio {
-  display: table-cell;
-}
-
-// Views UI fixes.
-.views-display-settings {
-  .label {
-    font-size: 100%;
-    color:#666666;
-  }
-  .footer {
-    padding:0;
-    margin:4px 0 0 0;
-  }
-}
-.views-exposed-form .views-exposed-widget .btn {
-  margin-top: 1.8em;
-}
-
-// Radio and checkbox in table fixes
-table {
-  .radio input[type="radio"],
-  .checkbox input[type="checkbox"] {
-    max-width: inherit;
-  }
-}
-
-// Exposed filters
-.form-horizontal .form-group label {
-  position: relative;
-  min-height: 1px;
-  margin-top: 0;
-  margin-bottom: 0;
-  padding-top: 7px;
-  padding-left:  (@grid-gutter-width / 2);
-  padding-right: (@grid-gutter-width / 2);
-  text-align: right;
-
-  @media (min-width: @screen-sm-min) {
-    float: left;
-    width: percentage((2 / @grid-columns));
-  }
-}
-
-// Treat all links inside alert as .alert-link
-.alert a {
-  font-weight: @alert-link-font-weight;
-}
-.alert-success a {
-  color: darken(@alert-success-text, 10%);
-}
-.alert-info a {
-  color: darken(@alert-info-text, 10%);
-}
-.alert-warning a {
-  color: darken(@alert-warning-text, 10%);
-}
-.alert-danger a {
-  color: darken(@alert-danger-text, 10%);
-}
-
-// Override image module.
-div.image-style-new,
-div.image-style-new div {
-  display: block;
-}
-div.image-style-new div.input-group {
-  display: table;
-}
-
-td.module,
-.table-striped>tbody>tr:nth-child(odd)>td.module,
-.table>tbody>tr>td.module {
-  background: @table-border-color;
-  font-weight: 700;
-}
-
-// Book module.
-.book-toc > .dropdown-menu {
-  overflow: hidden;
-  > .dropdown-header {
-    white-space: nowrap;
-  }
-  > li:nth-child(1) > a {
-    font-weight: bold;
-  }
-  .dropdown-menu {
-    .box-shadow(none);
-    border: 0;
-    display: block;
-    font-size: @font-size-small;
-    margin: 0;
-    padding: 0;
-    position: static;
-    width: 100%;
-    > li {
-      padding-left: 20px;
-      > a {
-        margin-left: -40px;
-        padding-left: 60px;
-      }
-    }
-  }
-}
-
-// Features module.
-#features-filter .form-item.form-type-checkbox {
-  padding-left: 20px;
-}
-fieldset.features-export-component {
-  font-size: @font-size-small;
-  html.js #features-export-form &, & {
-    margin: 0 0 (@line-height-computed / 2);
-  }
-  .panel-heading {
-    padding: 5px 10px;
-    a.panel-title {
-      font-size: @font-size-small;
-      font-weight: 500;
-      margin: -5px -10px;
-      padding: 5px 10px;
-    }
-  }
-  .panel-body {
-    padding: 0 10px;
-  }
-}
-div.features-export-list {
-  margin: -11px 0 10px;
-  padding: 0 10px;
-}
-
-fieldset.features-export-component .component-select ,
-div.features-export-list {
-  .form-type-checkbox {
-    line-height: 1em;
-    margin: 5px 5px 5px 0 !important;
-    min-height: 0;
-    padding: 3px 3px 3px 25px!important;
-    input[type=checkbox] {
-      margin-top: 0;
-    }
-  }
-}
diff --git a/starterkits/less/less/style.less b/starterkits/less/less/style.less
deleted file mode 100644
index 9a3a051..0000000
--- a/starterkits/less/less/style.less
+++ /dev/null
@@ -1,10 +0,0 @@
-// Bootstrap library.
-@import 'bootstrap';
-
-// Base-theme overrides.
-@import 'overrides';
-
-// Theme specific.
-@import 'header';
-@import 'content';
-@import 'footer';
diff --git a/starterkits/less/less/variables.less b/starterkits/less/less/variables.less
deleted file mode 100755
index f4e289e..0000000
--- a/starterkits/less/less/variables.less
+++ /dev/null
@@ -1,829 +0,0 @@
-//
-// Variables
-// --------------------------------------------------
-
-
-//== Colors
-//
-//## Gray and brand colors for use across Bootstrap.
-
-@gray-darker:            lighten(#000, 13.5%); // #222
-@gray-dark:              lighten(#000, 20%);   // #333
-@gray:                   lighten(#000, 33.5%); // #555
-@gray-light:             lighten(#000, 60%);   // #999
-@gray-lighter:           lighten(#000, 93.5%); // #eee
-
-@brand-primary:         #428bca;
-@brand-success:         #5cb85c;
-@brand-info:            #5bc0de;
-@brand-warning:         #f0ad4e;
-@brand-danger:          #d9534f;
-
-
-//== Scaffolding
-//
-// ## Settings for some of the most global styles.
-
-//** Background color for `<body>`.
-@body-bg:               #fff;
-//** Global text color on `<body>`.
-@text-color:            @gray-dark;
-
-//** Global textual link color.
-@link-color:            @brand-primary;
-//** Link hover color set via `darken()` function.
-@link-hover-color:      darken(@link-color, 15%);
-
-
-//== Typography
-//
-//## Font, line-height, and color for body text, headings, and more.
-
-@font-family-sans-serif:  "Helvetica Neue", Helvetica, Arial, sans-serif;
-@font-family-serif:       Georgia, "Times New Roman", Times, serif;
-//** Default monospace fonts for `<code>`, `<kbd>`, and `<pre>`.
-@font-family-monospace:   Menlo, Monaco, Consolas, "Courier New", monospace;
-@font-family-base:        @font-family-sans-serif;
-
-@font-size-base:          14px;
-@font-size-large:         ceil((@font-size-base * 1.25)); // ~18px
-@font-size-small:         ceil((@font-size-base * 0.85)); // ~12px
-
-@font-size-h1:            floor((@font-size-base * 2.6)); // ~36px
-@font-size-h2:            floor((@font-size-base * 2.15)); // ~30px
-@font-size-h3:            ceil((@font-size-base * 1.7)); // ~24px
-@font-size-h4:            ceil((@font-size-base * 1.25)); // ~18px
-@font-size-h5:            @font-size-base;
-@font-size-h6:            ceil((@font-size-base * 0.85)); // ~12px
-
-//** Unit-less `line-height` for use in components like buttons.
-@line-height-base:        1.428571429; // 20/14
-//** Computed "line-height" (`font-size` * `line-height`) for use with `margin`, `padding`, etc.
-@line-height-computed:    floor((@font-size-base * @line-height-base)); // ~20px
-
-//** By default, this inherits from the `<body>`.
-@headings-font-family:    inherit;
-@headings-font-weight:    500;
-@headings-line-height:    1.1;
-@headings-color:          inherit;
-
-
-//-- Iconography
-//
-//## Specify custom locations of the include Glyphicons icon font. Useful for those including Bootstrap via Bower.
-
-@icon-font-path:          "../bootstrap/fonts/";
-@icon-font-name:          "glyphicons-halflings-regular";
-@icon-font-svg-id:				"glyphicons_halflingsregular";
-
-//== Components
-//
-//## Define common padding and border radius sizes and more. Values based on 14px text and 1.428 line-height (~20px to start).
-
-@padding-base-vertical:     6px;
-@padding-base-horizontal:   12px;
-
-@padding-large-vertical:    10px;
-@padding-large-horizontal:  16px;
-
-@padding-small-vertical:    5px;
-@padding-small-horizontal:  10px;
-
-@padding-xs-vertical:       1px;
-@padding-xs-horizontal:     5px;
-
-@line-height-large:         1.33;
-@line-height-small:         1.5;
-
-@border-radius-base:        4px;
-@border-radius-large:       6px;
-@border-radius-small:       3px;
-
-//** Global color for active items (e.g., navs or dropdowns).
-@component-active-color:    #fff;
-//** Global background color for active items (e.g., navs or dropdowns).
-@component-active-bg:       @brand-primary;
-
-//** Width of the `border` for generating carets that indicator dropdowns.
-@caret-width-base:          4px;
-//** Carets increase slightly in size for larger components.
-@caret-width-large:         5px;
-
-
-//== Tables
-//
-//## Customizes the `.table` component with basic values, each used across all table variations.
-
-//** Padding for `<th>`s and `<td>`s.
-@table-cell-padding:            8px;
-//** Padding for cells in `.table-condensed`.
-@table-condensed-cell-padding:  5px;
-
-//** Default background color used for all tables.
-@table-bg:                      transparent;
-//** Background color used for `.table-striped`.
-@table-bg-accent:               #f9f9f9;
-//** Background color used for `.table-hover`.
-@table-bg-hover:                #f5f5f5;
-@table-bg-active:               @table-bg-hover;
-
-//** Border color for table and cell borders.
-@table-border-color:            #ddd;
-
-
-//== Buttons
-//
-//## For each of Bootstrap's buttons, define text, background and border color.
-
-@btn-font-weight:                normal;
-
-@btn-default-color:              #333;
-@btn-default-bg:                 #fff;
-@btn-default-border:             #ccc;
-
-@btn-primary-color:              #fff;
-@btn-primary-bg:                 @brand-primary;
-@btn-primary-border:             darken(@btn-primary-bg, 5%);
-
-@btn-success-color:              #fff;
-@btn-success-bg:                 @brand-success;
-@btn-success-border:             darken(@btn-success-bg, 5%);
-
-@btn-info-color:                 #fff;
-@btn-info-bg:                    @brand-info;
-@btn-info-border:                darken(@btn-info-bg, 5%);
-
-@btn-warning-color:              #fff;
-@btn-warning-bg:                 @brand-warning;
-@btn-warning-border:             darken(@btn-warning-bg, 5%);
-
-@btn-danger-color:               #fff;
-@btn-danger-bg:                  @brand-danger;
-@btn-danger-border:              darken(@btn-danger-bg, 5%);
-
-@btn-link-disabled-color:        @gray-light;
-
-
-//== Forms
-//
-//##
-
-//** `<input>` background color
-@input-bg:                       #fff;
-//** `<input disabled>` background color
-@input-bg-disabled:              @gray-lighter;
-
-//** Text color for `<input>`s
-@input-color:                    @gray;
-//** `<input>` border color
-@input-border:                   #ccc;
-//** `<input>` border radius
-@input-border-radius:            @border-radius-base;
-//** Border color for inputs on focus
-@input-border-focus:             #66afe9;
-
-//** Placeholder text color
-@input-color-placeholder:        @gray-light;
-
-//** Default `.form-control` height
-@input-height-base:              (@line-height-computed + (@padding-base-vertical * 2) + 2);
-//** Large `.form-control` height
-@input-height-large:             (ceil(@font-size-large * @line-height-large) + (@padding-large-vertical * 2) + 2);
-//** Small `.form-control` height
-@input-height-small:             (floor(@font-size-small * @line-height-small) + (@padding-small-vertical * 2) + 2);
-
-@legend-color:                   @gray-dark;
-@legend-border-color:            #e5e5e5;
-
-//** Background color for textual input addons
-@input-group-addon-bg:           @gray-lighter;
-//** Border color for textual input addons
-@input-group-addon-border-color: @input-border;
-
-
-//== Dropdowns
-//
-//## Dropdown menu container and contents.
-
-//** Background for the dropdown menu.
-@dropdown-bg:                    #fff;
-//** Dropdown menu `border-color`.
-@dropdown-border:                rgba(0,0,0,.15);
-//** Dropdown menu `border-color` **for IE8**.
-@dropdown-fallback-border:       #ccc;
-//** Divider color for between dropdown items.
-@dropdown-divider-bg:            #e5e5e5;
-
-//** Dropdown link text color.
-@dropdown-link-color:            @gray-dark;
-//** Hover color for dropdown links.
-@dropdown-link-hover-color:      darken(@gray-dark, 5%);
-//** Hover background for dropdown links.
-@dropdown-link-hover-bg:         #f5f5f5;
-
-//** Active dropdown menu item text color.
-@dropdown-link-active-color:     @component-active-color;
-//** Active dropdown menu item background color.
-@dropdown-link-active-bg:        @component-active-bg;
-
-//** Disabled dropdown menu item background color.
-@dropdown-link-disabled-color:   @gray-light;
-
-//** Text color for headers within dropdown menus.
-@dropdown-header-color:          @gray-light;
-
-// Note: Deprecated @dropdown-caret-color as of v3.1.0
-@dropdown-caret-color:           #000;
-
-
-//-- Z-index master list
-//
-// Warning: Avoid customizing these values. They're used for a bird's eye view
-// of components dependent on the z-axis and are designed to all work together.
-//
-// Note: These variables are not generated into the Customizer.
-
-@zindex-navbar:            1000;
-@zindex-dropdown:          1000;
-@zindex-popover:           1010;
-@zindex-tooltip:           1030;
-@zindex-navbar-fixed:      1030;
-@zindex-modal-background:  1040;
-@zindex-modal:             1050;
-
-
-//== Media queries breakpoints
-//
-//## Define the breakpoints at which your layout will change, adapting to different screen sizes.
-
-// Extra small screen / phone
-// Note: Deprecated @screen-xs and @screen-phone as of v3.0.1
-@screen-xs:                  480px;
-@screen-xs-min:              @screen-xs;
-@screen-phone:               @screen-xs-min;
-
-// Small screen / tablet
-// Note: Deprecated @screen-sm and @screen-tablet as of v3.0.1
-@screen-sm:                  768px;
-@screen-sm-min:              @screen-sm;
-@screen-tablet:              @screen-sm-min;
-
-// Medium screen / desktop
-// Note: Deprecated @screen-md and @screen-desktop as of v3.0.1
-@screen-md:                  992px;
-@screen-md-min:              @screen-md;
-@screen-desktop:             @screen-md-min;
-
-// Large screen / wide desktop
-// Note: Deprecated @screen-lg and @screen-lg-desktop as of v3.0.1
-@screen-lg:                  1200px;
-@screen-lg-min:              @screen-lg;
-@screen-lg-desktop:          @screen-lg-min;
-
-// So media queries don't overlap when required, provide a maximum
-@screen-xs-max:              (@screen-sm-min - 1);
-@screen-sm-max:              (@screen-md-min - 1);
-@screen-md-max:              (@screen-lg-min - 1);
-
-
-//== Grid system
-//
-//## Define your custom responsive grid.
-
-//** Number of columns in the grid.
-@grid-columns:              12;
-//** Padding between columns. Gets divided in half for the left and right.
-@grid-gutter-width:         30px;
-// Navbar collapse
-//** Point at which the navbar becomes uncollapsed.
-@grid-float-breakpoint:     @screen-sm-min;
-//** Point at which the navbar begins collapsing.
-@grid-float-breakpoint-max: (@grid-float-breakpoint - 1);
-
-
-//== Container sizes
-//
-//## Define the maximum width of `.container` for different screen sizes.
-
-// Small screen / tablet
-@container-tablet:             ((720px + @grid-gutter-width));
-//** For `@screen-sm-min` and up.
-@container-sm:                 @container-tablet;
-
-// Medium screen / desktop
-@container-desktop:            ((940px + @grid-gutter-width));
-//** For `@screen-md-min` and up.
-@container-md:                 @container-desktop;
-
-// Large screen / wide desktop
-@container-large-desktop:      ((1140px + @grid-gutter-width));
-//** For `@screen-lg-min` and up.
-@container-lg:                 @container-large-desktop;
-
-
-//== Navbar
-//
-//##
-
-// Basics of a navbar
-@navbar-height:                    50px;
-@navbar-margin-bottom:             @line-height-computed;
-@navbar-border-radius:             @border-radius-base;
-@navbar-padding-horizontal:        floor((@grid-gutter-width / 2));
-@navbar-padding-vertical:          ((@navbar-height - @line-height-computed) / 2);
-@navbar-collapse-max-height:       340px;
-
-@navbar-default-color:             #777;
-@navbar-default-bg:                #f8f8f8;
-@navbar-default-border:            darken(@navbar-default-bg, 6.5%);
-
-// Navbar links
-@navbar-default-link-color:                #777;
-@navbar-default-link-hover-color:          #333;
-@navbar-default-link-hover-bg:             transparent;
-@navbar-default-link-active-color:         #555;
-@navbar-default-link-active-bg:            darken(@navbar-default-bg, 6.5%);
-@navbar-default-link-disabled-color:       #ccc;
-@navbar-default-link-disabled-bg:          transparent;
-
-// Navbar brand label
-@navbar-default-brand-color:               @navbar-default-link-color;
-@navbar-default-brand-hover-color:         darken(@navbar-default-brand-color, 10%);
-@navbar-default-brand-hover-bg:            transparent;
-
-// Navbar toggle
-@navbar-default-toggle-hover-bg:           #ddd;
-@navbar-default-toggle-icon-bar-bg:        #888;
-@navbar-default-toggle-border-color:       #ddd;
-
-
-// Inverted navbar
-// Reset inverted navbar basics
-@navbar-inverse-color:                      @gray-light;
-@navbar-inverse-bg:                         #222;
-@navbar-inverse-border:                     darken(@navbar-inverse-bg, 10%);
-
-// Inverted navbar links
-@navbar-inverse-link-color:                 @gray-light;
-@navbar-inverse-link-hover-color:           #fff;
-@navbar-inverse-link-hover-bg:              transparent;
-@navbar-inverse-link-active-color:          @navbar-inverse-link-hover-color;
-@navbar-inverse-link-active-bg:             darken(@navbar-inverse-bg, 10%);
-@navbar-inverse-link-disabled-color:        #444;
-@navbar-inverse-link-disabled-bg:           transparent;
-
-// Inverted navbar brand label
-@navbar-inverse-brand-color:                @navbar-inverse-link-color;
-@navbar-inverse-brand-hover-color:          #fff;
-@navbar-inverse-brand-hover-bg:             transparent;
-
-// Inverted navbar toggle
-@navbar-inverse-toggle-hover-bg:            #333;
-@navbar-inverse-toggle-icon-bar-bg:         #fff;
-@navbar-inverse-toggle-border-color:        #333;
-
-
-//== Navs
-//
-//##
-
-//=== Shared nav styles
-@nav-link-padding:                          10px 15px;
-@nav-link-hover-bg:                         @gray-lighter;
-
-@nav-disabled-link-color:                   @gray-light;
-@nav-disabled-link-hover-color:             @gray-light;
-
-@nav-open-link-hover-color:                 #fff;
-
-//== Tabs
-@nav-tabs-border-color:                     #ddd;
-
-@nav-tabs-link-hover-border-color:          @gray-lighter;
-
-@nav-tabs-active-link-hover-bg:             @body-bg;
-@nav-tabs-active-link-hover-color:          @gray;
-@nav-tabs-active-link-hover-border-color:   #ddd;
-
-@nav-tabs-justified-link-border-color:            #ddd;
-@nav-tabs-justified-active-link-border-color:     @body-bg;
-
-//== Pills
-@nav-pills-border-radius:                   @border-radius-base;
-@nav-pills-active-link-hover-bg:            @component-active-bg;
-@nav-pills-active-link-hover-color:         @component-active-color;
-
-
-//== Pagination
-//
-//##
-
-@pagination-color:                     @link-color;
-@pagination-bg:                        #fff;
-@pagination-border:                    #ddd;
-
-@pagination-hover-color:               @link-hover-color;
-@pagination-hover-bg:                  @gray-lighter;
-@pagination-hover-border:              #ddd;
-
-@pagination-active-color:              #fff;
-@pagination-active-bg:                 @brand-primary;
-@pagination-active-border:             @brand-primary;
-
-@pagination-disabled-color:            @gray-light;
-@pagination-disabled-bg:               #fff;
-@pagination-disabled-border:           #ddd;
-
-
-//== Pager
-//
-//##
-
-@pager-bg:                             @pagination-bg;
-@pager-border:                         @pagination-border;
-@pager-border-radius:                  15px;
-
-@pager-hover-bg:                       @pagination-hover-bg;
-
-@pager-active-bg:                      @pagination-active-bg;
-@pager-active-color:                   @pagination-active-color;
-
-@pager-disabled-color:                 @pagination-disabled-color;
-
-
-//== Jumbotron
-//
-//##
-
-@jumbotron-padding:              30px;
-@jumbotron-color:                inherit;
-@jumbotron-bg:                   @gray-lighter;
-@jumbotron-heading-color:        inherit;
-@jumbotron-font-size:            ceil((@font-size-base * 1.5));
-
-
-//== Form states and alerts
-//
-//## Define colors for form feedback states and, by default, alerts.
-
-@state-success-text:             #3c763d;
-@state-success-bg:               #dff0d8;
-@state-success-border:           darken(spin(@state-success-bg, -10), 5%);
-
-@state-info-text:                #31708f;
-@state-info-bg:                  #d9edf7;
-@state-info-border:              darken(spin(@state-info-bg, -10), 7%);
-
-@state-warning-text:             #8a6d3b;
-@state-warning-bg:               #fcf8e3;
-@state-warning-border:           darken(spin(@state-warning-bg, -10), 5%);
-
-@state-danger-text:              #a94442;
-@state-danger-bg:                #f2dede;
-@state-danger-border:            darken(spin(@state-danger-bg, -10), 5%);
-
-
-//== Tooltips
-//
-//##
-
-//** Tooltip max width
-@tooltip-max-width:           200px;
-//** Tooltip text color
-@tooltip-color:               #fff;
-//** Tooltip background color
-@tooltip-bg:                  #000;
-@tooltip-opacity:             .9;
-
-//** Tooltip arrow width
-@tooltip-arrow-width:         5px;
-//** Tooltip arrow color
-@tooltip-arrow-color:         @tooltip-bg;
-
-
-//== Popovers
-//
-//##
-
-//** Popover body background color
-@popover-bg:                          #fff;
-//** Popover maximum width
-@popover-max-width:                   276px;
-//** Popover border color
-@popover-border-color:                rgba(0,0,0,.2);
-//** Popover fallback border color
-@popover-fallback-border-color:       #ccc;
-
-//** Popover title background color
-@popover-title-bg:                    darken(@popover-bg, 3%);
-
-//** Popover arrow width
-@popover-arrow-width:                 10px;
-//** Popover arrow color
-@popover-arrow-color:                 #fff;
-
-//** Popover outer arrow width
-@popover-arrow-outer-width:           (@popover-arrow-width + 1);
-//** Popover outer arrow color
-@popover-arrow-outer-color:           fadein(@popover-border-color, 5%);
-//** Popover outer arrow fallback color
-@popover-arrow-outer-fallback-color:  darken(@popover-fallback-border-color, 20%);
-
-
-//== Labels
-//
-//##
-
-//** Default label background color
-@label-default-bg:            @gray-light;
-//** Primary label background color
-@label-primary-bg:            @brand-primary;
-//** Success label background color
-@label-success-bg:            @brand-success;
-//** Info label background color
-@label-info-bg:               @brand-info;
-//** Warning label background color
-@label-warning-bg:            @brand-warning;
-//** Danger label background color
-@label-danger-bg:             @brand-danger;
-
-//** Default label text color
-@label-color:                 #fff;
-//** Default text color of a linked label
-@label-link-hover-color:      #fff;
-
-
-//== Modals
-//
-//##
-
-//** Padding applied to the modal body
-@modal-inner-padding:         20px;
-
-//** Padding applied to the modal title
-@modal-title-padding:         15px;
-//** Modal title line-height
-@modal-title-line-height:     @line-height-base;
-
-//** Background color of modal content area
-@modal-content-bg:                             #fff;
-//** Modal content border color
-@modal-content-border-color:                   rgba(0,0,0,.2);
-//** Modal content border color **for IE8**
-@modal-content-fallback-border-color:          #999;
-
-//** Modal backdrop background color
-@modal-backdrop-bg:           #000;
-//** Modal backdrop opacity
-@modal-backdrop-opacity:      .5;
-//** Modal header border color
-@modal-header-border-color:   #e5e5e5;
-//** Modal footer border color
-@modal-footer-border-color:   @modal-header-border-color;
-
-@modal-lg:                    900px;
-@modal-md:                    600px;
-@modal-sm:                    300px;
-
-
-//== Alerts
-//
-//## Define alert colors, border radius, and padding.
-
-@alert-padding:               15px;
-@alert-border-radius:         @border-radius-base;
-@alert-link-font-weight:      bold;
-
-@alert-success-bg:            @state-success-bg;
-@alert-success-text:          @state-success-text;
-@alert-success-border:        @state-success-border;
-
-@alert-info-bg:               @state-info-bg;
-@alert-info-text:             @state-info-text;
-@alert-info-border:           @state-info-border;
-
-@alert-warning-bg:            @state-warning-bg;
-@alert-warning-text:          @state-warning-text;
-@alert-warning-border:        @state-warning-border;
-
-@alert-danger-bg:             @state-danger-bg;
-@alert-danger-text:           @state-danger-text;
-@alert-danger-border:         @state-danger-border;
-
-
-//== Progress bars
-//
-//##
-
-//** Background color of the whole progress component
-@progress-bg:                 #f5f5f5;
-//** Progress bar text color
-@progress-bar-color:          #fff;
-
-//** Default progress bar color
-@progress-bar-bg:             @brand-primary;
-//** Success progress bar color
-@progress-bar-success-bg:     @brand-success;
-//** Warning progress bar color
-@progress-bar-warning-bg:     @brand-warning;
-//** Danger progress bar color
-@progress-bar-danger-bg:      @brand-danger;
-//** Info progress bar color
-@progress-bar-info-bg:        @brand-info;
-
-
-//== List group
-//
-//##
-
-//** Background color on `.list-group-item`
-@list-group-bg:                 #fff;
-//** `.list-group-item` border color
-@list-group-border:             #ddd;
-//** List group border radius
-@list-group-border-radius:      @border-radius-base;
-
-//** Background color of single list elements on hover
-@list-group-hover-bg:           #f5f5f5;
-//** Text color of active list elements
-@list-group-active-color:       @component-active-color;
-//** Background color of active list elements
-@list-group-active-bg:          @component-active-bg;
-//** Border color of active list elements
-@list-group-active-border:      @list-group-active-bg;
-@list-group-active-text-color:  lighten(@list-group-active-bg, 40%);
-
-@list-group-link-color:         #555;
-@list-group-link-heading-color: #333;
-
-
-//== Panels
-//
-//##
-
-@panel-bg:                    #fff;
-@panel-body-padding:          15px;
-@panel-border-radius:         @border-radius-base;
-
-//** Border color for elements within panels
-@panel-inner-border:          #ddd;
-@panel-footer-bg:             #f5f5f5;
-
-@panel-default-text:          @gray-dark;
-@panel-default-border:        #ddd;
-@panel-default-heading-bg:    #f5f5f5;
-
-@panel-primary-text:          #fff;
-@panel-primary-border:        @brand-primary;
-@panel-primary-heading-bg:    @brand-primary;
-
-@panel-success-text:          @state-success-text;
-@panel-success-border:        @state-success-border;
-@panel-success-heading-bg:    @state-success-bg;
-
-@panel-info-text:             @state-info-text;
-@panel-info-border:           @state-info-border;
-@panel-info-heading-bg:       @state-info-bg;
-
-@panel-warning-text:          @state-warning-text;
-@panel-warning-border:        @state-warning-border;
-@panel-warning-heading-bg:    @state-warning-bg;
-
-@panel-danger-text:           @state-danger-text;
-@panel-danger-border:         @state-danger-border;
-@panel-danger-heading-bg:     @state-danger-bg;
-
-
-//== Thumbnails
-//
-//##
-
-//** Padding around the thumbnail image
-@thumbnail-padding:           4px;
-//** Thumbnail background color
-@thumbnail-bg:                @body-bg;
-//** Thumbnail border color
-@thumbnail-border:            #ddd;
-//** Thumbnail border radius
-@thumbnail-border-radius:     @border-radius-base;
-
-//** Custom text color for thumbnail captions
-@thumbnail-caption-color:     @text-color;
-//** Padding around the thumbnail caption
-@thumbnail-caption-padding:   9px;
-
-
-//== Wells
-//
-//##
-
-@well-bg:                     #f5f5f5;
-@well-border:                 darken(@well-bg, 7%);
-
-
-//== Badges
-//
-//##
-
-@badge-color:                 #fff;
-//** Linked badge text color on hover
-@badge-link-hover-color:      #fff;
-@badge-bg:                    @gray-light;
-
-//** Badge text color in active nav link
-@badge-active-color:          @link-color;
-//** Badge background color in active nav link
-@badge-active-bg:             #fff;
-
-@badge-font-weight:           bold;
-@badge-line-height:           1;
-@badge-border-radius:         10px;
-
-
-//== Breadcrumbs
-//
-//##
-
-@breadcrumb-padding-vertical:   8px;
-@breadcrumb-padding-horizontal: 15px;
-//** Breadcrumb background color
-@breadcrumb-bg:                 #f5f5f5;
-//** Breadcrumb text color
-@breadcrumb-color:              #ccc;
-//** Text color of current page in the breadcrumb
-@breadcrumb-active-color:       @gray-light;
-//** Textual separator for between breadcrumb elements
-@breadcrumb-separator:          "/";
-
-
-//== Carousel
-//
-//##
-
-@carousel-text-shadow:                        0 1px 2px rgba(0,0,0,.6);
-
-@carousel-control-color:                      #fff;
-@carousel-control-width:                      15%;
-@carousel-control-opacity:                    .5;
-@carousel-control-font-size:                  20px;
-
-@carousel-indicator-active-bg:                #fff;
-@carousel-indicator-border-color:             #fff;
-
-@carousel-caption-color:                      #fff;
-
-
-//== Close
-//
-//##
-
-@close-font-weight:           bold;
-@close-color:                 #000;
-@close-text-shadow:           0 1px 0 #fff;
-
-
-//== Code
-//
-//##
-
-@code-color:                  #c7254e;
-@code-bg:                     #f9f2f4;
-
-@kbd-color:                   #fff;
-@kbd-bg:                      #333;
-
-@pre-bg:                      #f5f5f5;
-@pre-color:                   @gray-dark;
-@pre-border-color:            #ccc;
-@pre-scrollable-max-height:   340px;
-
-
-//== Type
-//
-//##
-
-//** Text muted color
-@text-muted:                  @gray-light;
-//** Abbreviations and acronyms border color
-@abbr-border-color:           @gray-light;
-//** Headings small color
-@headings-small-color:        @gray-light;
-//** Blockquote small color
-@blockquote-small-color:      @gray-light;
-//** Blockquote font size
-@blockquote-font-size:        (@font-size-base * 1.25);
-//** Blockquote border color
-@blockquote-border-color:     @gray-lighter;
-//** Page header border color
-@page-header-border-color:    @gray-lighter;
-
-
-//== Miscellaneous
-//
-//##
-
-//** Horizontal line color.
-@hr-border:                   @gray-lighter;
-
-//** Horizontal offset for forms and lists.
-@component-offset-horizontal: 180px;
diff --git a/starterkits/less/logo.png b/starterkits/less/logo.png
deleted file mode 100644
index 9477336..0000000
Binary files a/starterkits/less/logo.png and /dev/null differ
diff --git a/starterkits/less/screenshot.png b/starterkits/less/screenshot.png
deleted file mode 100644
index 7b6893a..0000000
Binary files a/starterkits/less/screenshot.png and /dev/null differ
diff --git a/starterkits/less/template.php b/starterkits/less/template.php
deleted file mode 100755
index ffa1a05..0000000
--- a/starterkits/less/template.php
+++ /dev/null
@@ -1,5 +0,0 @@
-<?php
-/**
- * @file
- * template.php
- */
diff --git a/starterkits/less/templates/README.txt b/starterkits/less/templates/README.txt
deleted file mode 100644
index 6fa8a40..0000000
--- a/starterkits/less/templates/README.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-This folder is where you should place all your overriding template files. By
-default, the Bootstrap base theme provides all the necessary template files in
-various folders inside of sites/*/themes/bootstrap/templates. For example, the
-page.tpl.php template file is located at
-sites/*/themes/bootstrap/templates/system/page.tpl.php. To override any of these
-files, copy them from the Bootstrap base theme and place them in here.
diff --git a/starterkits/sass/README.txt b/starterkits/sass/README.txt
deleted file mode 100644
index a668d4b..0000000
--- a/starterkits/sass/README.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-To help consolidate and remove possible future inconsistencies, the
-documentation for this sub-theme starter kit has been moved to:
-http://drupal.org/node/1978010.
diff --git a/starterkits/sass/css/README.txt b/starterkits/sass/css/README.txt
deleted file mode 100644
index 923569d..0000000
--- a/starterkits/sass/css/README.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-If using Method 1, this folder is where the output from the compiled LESS files
-should be generated. If using the LESS module, this folder can be ignored or
-removed.
-
-If using Method 2, edit the style.css file to your liking.
diff --git a/starterkits/sass/css/style.css b/starterkits/sass/css/style.css
deleted file mode 100644
index e040090..0000000
--- a/starterkits/sass/css/style.css
+++ /dev/null
@@ -1,4 +0,0 @@
-/**
- * This file should get overwritten if Method 1 is used. If Method 2 is chosen,
- * remove this comment and start adding your styles to this file.
- */
diff --git a/starterkits/sass/favicon.ico b/starterkits/sass/favicon.ico
deleted file mode 100644
index dea5740..0000000
Binary files a/starterkits/sass/favicon.ico and /dev/null differ
diff --git a/starterkits/sass/logo.png b/starterkits/sass/logo.png
deleted file mode 100644
index 9477336..0000000
Binary files a/starterkits/sass/logo.png and /dev/null differ
diff --git a/starterkits/sass/sass.starterkit b/starterkits/sass/sass.starterkit
deleted file mode 100644
index f8bc3ef..0000000
--- a/starterkits/sass/sass.starterkit
+++ /dev/null
@@ -1,48 +0,0 @@
-name = SASS (source)
-description = Uses the SASS Bootstrap framework source files and must be compiled (not for beginners).
-core = 7.x
-base theme = bootstrap
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Regions
-;;;;;;;;;;;;;;;;;;;;;
-
-regions[navigation]     = 'Navigation'
-regions[header]         = 'Top Bar'
-regions[highlighted]    = 'Highlighted'
-regions[help]           = 'Help'
-regions[content]        = 'Content'
-regions[sidebar_first]  = 'Primary'
-regions[sidebar_second] = 'Secondary'
-regions[footer]         = 'Footer'
-regions[page_top]       = 'Page top'
-regions[page_bottom]    = 'Page bottom'
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Stylesheets
-;;;;;;;;;;;;;;;;;;;;;
-
-stylesheets[all][] = css/style.css
-
-
-;;;;;;;;;;;;;;;;;;;;;
-;; Scripts
-;;;;;;;;;;;;;;;;;;;;;
-
-scripts[] = 'bootstrap/js/affix.js'
-scripts[] = 'bootstrap/js/alert.js'
-scripts[] = 'bootstrap/js/button.js'
-scripts[] = 'bootstrap/js/carousel.js'
-scripts[] = 'bootstrap/js/collapse.js'
-scripts[] = 'bootstrap/js/dropdown.js'
-scripts[] = 'bootstrap/js/modal.js'
-scripts[] = 'bootstrap/js/tooltip.js'
-scripts[] = 'bootstrap/js/popover.js'
-scripts[] = 'bootstrap/js/scrollspy.js'
-scripts[] = 'bootstrap/js/tab.js'
-scripts[] = 'bootstrap/js/transition.js'
-
-; Disable BootstrapCDN so the compiled LESS source files can be used.
-settings[bootstrap_cdn] = ''
diff --git a/starterkits/sass/screenshot.png b/starterkits/sass/screenshot.png
deleted file mode 100644
index 7b6893a..0000000
Binary files a/starterkits/sass/screenshot.png and /dev/null differ
diff --git a/starterkits/sass/template.php b/starterkits/sass/template.php
deleted file mode 100755
index ffa1a05..0000000
--- a/starterkits/sass/template.php
+++ /dev/null
@@ -1,5 +0,0 @@
-<?php
-/**
- * @file
- * template.php
- */
diff --git a/starterkits/sass/templates/README.txt b/starterkits/sass/templates/README.txt
deleted file mode 100644
index 6fa8a40..0000000
--- a/starterkits/sass/templates/README.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-This folder is where you should place all your overriding template files. By
-default, the Bootstrap base theme provides all the necessary template files in
-various folders inside of sites/*/themes/bootstrap/templates. For example, the
-page.tpl.php template file is located at
-sites/*/themes/bootstrap/templates/system/page.tpl.php. To override any of these
-files, copy them from the Bootstrap base theme and place them in here.
diff --git a/template.php b/template.php
index 9b301ba..89a4504 100755
--- a/template.php
+++ b/template.php
@@ -15,7 +15,7 @@
  * live in the 'theme' folder. This is a highly automated and complex system
  * designed to only load the necessary files when a given theme hook is invoked.
  * @see _bootstrap_theme()
- * @see ./includes/registry.inc
+ * @see theme/registry.inc
  *
  * Due to a bug in Drush, these includes must live inside the 'theme' folder
  * instead of something like 'includes'. If a module or theme has an 'includes'
@@ -27,7 +27,7 @@
 /**
  * Include common functions used through out theme.
  */
-include_once dirname(__FILE__) . '/includes/common.inc';
+include_once dirname(__FILE__) . '/theme/common.inc';
 
 /**
  * Implements hook_theme().
@@ -43,7 +43,7 @@ include_once dirname(__FILE__) . '/includes/common.inc';
  * @see _bootstrap_theme()
  */
 function bootstrap_theme(&$existing, $type, $theme, $path) {
-  bootstrap_include($theme, 'includes/registry.inc');
+  bootstrap_include($theme, 'theme/registry.inc');
   return _bootstrap_theme($existing, $type, $theme, $path);
 }
 
@@ -53,4 +53,4 @@ function bootstrap_theme(&$existing, $type, $theme, $path) {
  * hook_*_alter() implementations must live (via include) inside this file so
  * they are properly detected when drupal_alter() is invoked.
  */
-bootstrap_include('bootstrap', 'includes/alter.inc');
+bootstrap_include('bootstrap', 'theme/alter.inc');
diff --git a/templates/block/block-admin-display-form.tpl.php b/templates/block/block-admin-display-form.tpl.php
deleted file mode 100644
index 4dc5755..0000000
--- a/templates/block/block-admin-display-form.tpl.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-/**
- * @file
- * Default theme implementation to configure blocks.
- *
- * Available variables:
- * - $block_regions: An array of regions. Keyed by name with the title as value.
- * - $block_listing: An array of blocks keyed by region and then delta.
- * - $form_submit: Form submit button.
- *
- * Each $block_listing[$region] contains an array of blocks for that region.
- *
- * Each $data in $block_listing[$region] contains:
- * - $data->region_title: Region title for the listed block.
- * - $data->block_title: Block title.
- * - $data->region_select: Drop-down menu for assigning a region.
- * - $data->weight_select: Drop-down menu for setting weights.
- * - $data->configure_link: Block configuration link.
- * - $data->delete_link: For deleting user added blocks.
- *
- * @see template_preprocess_block_admin_display_form()
- * @see theme_block_admin_display()
- *
- * @ingroup themeable
- */
-?>
-<?php
-  // Add table javascript.
-  drupal_add_js('misc/tableheader.js');
-  drupal_add_js(drupal_get_path('module', 'block') . '/block.js');
-  foreach ($block_regions as $region => $title):
-    drupal_add_tabledrag('blocks', 'match', 'sibling', 'block-region-select', 'block-region-' . $region, NULL, FALSE);
-    drupal_add_tabledrag('blocks', 'order', 'sibling', 'block-weight', 'block-weight-' . $region);
-  endforeach;
-?>
-<table id="blocks" class="table table-hover sticky-enabled">
-  <thead>
-    <tr>
-      <th><?php print t('Block'); ?></th>
-      <th><?php print t('Region'); ?></th>
-      <th><?php print t('Weight'); ?></th>
-      <th colspan="2"><?php print t('Operations'); ?></th>
-    </tr>
-  </thead>
-  <tbody>
-    <?php $row = 0; ?>
-    <?php foreach ($block_regions as $region => $title): ?>
-      <tr class="active region-title region-title-<?php print $region?>">
-        <td colspan="5"><?php print $title; ?></td>
-      </tr>
-      <tr class="region-message region-<?php print $region?>-message <?php print empty($block_listing[$region]) ? 'region-empty' : 'region-populated'; ?>">
-        <td colspan="5"><em><?php print t('No blocks in this region'); ?></em></td>
-      </tr>
-      <?php foreach ($block_listing[$region] as $delta => $data): ?>
-      <tr class="draggable <?php print $row % 2 == 0 ? 'odd' : 'even'; ?><?php print $data->row_class ? ' ' . $data->row_class : ''; ?>">
-        <td class="block"><?php print $data->block_title; ?></td>
-        <td><?php print $data->region_select; ?></td>
-        <td><?php print $data->weight_select; ?></td>
-        <td><?php print $data->configure_link; ?></td>
-        <td><?php print $data->delete_link; ?></td>
-      </tr>
-      <?php $row++; ?>
-      <?php endforeach; ?>
-    <?php endforeach; ?>
-  </tbody>
-</table>
-
-<?php print $form_submit; ?>
diff --git a/templates/block/block.tpl.php b/templates/block/block.tpl.php
deleted file mode 100644
index 6ef9f3a..0000000
--- a/templates/block/block.tpl.php
+++ /dev/null
@@ -1,58 +0,0 @@
-<?php
-/**
- * @file
- * Default theme implementation to display a block.
- *
- * Available variables:
- * - $block->subject: Block title.
- * - $content: Block content.
- * - $block->module: Module that generated the block.
- * - $block->delta: An ID for the block, unique within each module.
- * - $block->region: The block region embedding the current block.
- * - $classes: String of classes that can be used to style contextually through
- *   CSS. It can be manipulated through the variable $classes_array from
- *   preprocess functions. The default values can be one or more of the
- *   following:
- *   - block: The current template type, i.e., "theming hook".
- *   - block-[module]: The module generating the block. For example, the user
- *     module is responsible for handling the default user navigation block. In
- *     that case the class would be 'block-user'.
- * - $title_prefix (array): An array containing additional output populated by
- *   modules, intended to be displayed in front of the main title tag that
- *   appears in the template.
- * - $title_suffix (array): An array containing additional output populated by
- *   modules, intended to be displayed after the main title tag that appears in
- *   the template.
- *
- * Helper variables:
- * - $classes_array: Array of html class attribute values. It is flattened
- *   into a string within the variable $classes.
- * - $block_zebra: Outputs 'odd' and 'even' dependent on each block region.
- * - $zebra: Same output as $block_zebra but independent of any block region.
- * - $block_id: Counter dependent on each block region.
- * - $id: Same output as $block_id but independent of any block region.
- * - $is_front: Flags true when presented in the front page.
- * - $logged_in: Flags true when the current user is a logged-in member.
- * - $is_admin: Flags true when the current user is an administrator.
- * - $block_html_id: A valid HTML ID and guaranteed unique.
- *
- * @see bootstrap_preprocess_block()
- * @see template_preprocess()
- * @see template_preprocess_block()
- * @see bootstrap_process_block()
- * @see template_process()
- *
- * @ingroup themeable
- */
-?>
-<section id="<?php print $block_html_id; ?>" class="<?php print $classes; ?> clearfix"<?php print $attributes; ?>>
-
-  <?php print render($title_prefix); ?>
-  <?php if ($title): ?>
-    <h2<?php print $title_attributes; ?>><?php print $title; ?></h2>
-  <?php endif;?>
-  <?php print render($title_suffix); ?>
-
-  <?php print $content ?>
-
-</section>
diff --git a/templates/block/block.vars.php b/templates/block/block.vars.php
deleted file mode 100644
index 82e5f40..0000000
--- a/templates/block/block.vars.php
+++ /dev/null
@@ -1,24 +0,0 @@
-<?php
-/**
- * @file
- * block.vars.php
- */
-
-/**
- * Implements hook_preprocess_block().
- */
-function bootstrap_preprocess_block(&$variables) {
-  // Use a bare template for the page's main content.
-  if ($variables['block_html_id'] == 'block-system-main') {
-    $variables['theme_hook_suggestions'][] = 'block__no_wrapper';
-  }
-  $variables['title_attributes_array']['class'][] = 'block-title';
-}
-
-/**
- * Implements hook_process_block().
- */
-function bootstrap_process_block(&$variables) {
-  // Drupal 7 should use a $title variable instead of $block->subject.
-  $variables['title'] = $variables['block']->subject;
-}
diff --git a/templates/book/book-navigation.tpl.php b/templates/book/book-navigation.tpl.php
deleted file mode 100644
index ae1c630..0000000
--- a/templates/book/book-navigation.tpl.php
+++ /dev/null
@@ -1,54 +0,0 @@
-<?php
-
-/**
- * @file
- * Default theme implementation to navigate books.
- *
- * Presented under nodes that are a part of book outlines.
- *
- * Available variables:
- * - $tree: The immediate children of the current node rendered as an unordered
- *   list.
- * - $current_depth: Depth of the current node within the book outline. Provided
- *   for context.
- * - $prev_url: URL to the previous node.
- * - $prev_title: Title of the previous node.
- * - $parent_url: URL to the parent node.
- * - $parent_title: Title of the parent node. Not printed by default. Provided
- *   as an option.
- * - $next_url: URL to the next node.
- * - $next_title: Title of the next node.
- * - $has_links: Flags TRUE whenever the previous, parent or next data has a
- *   value.
- * - $book_id: The book ID of the current outline being viewed. Same as the node
- *   ID containing the entire outline. Provided for context.
- * - $book_url: The book/node URL of the current outline being viewed. Provided
- *   as an option. Not used by default.
- * - $book_title: The book/node title of the current outline being viewed.
- *   Provided as an option. Not used by default.
- *
- * @see template_preprocess_book_navigation()
- *
- * @ingroup themeable
- */
-?>
-<?php if ($tree || $has_links): ?>
-  <div id="book-navigation-<?php print $book_id; ?>" class="book-navigation">
-    <?php print $tree; ?>
-
-    <?php if ($has_links): ?>
-    <ul class="pager clearfix">
-      <?php if ($prev_url): ?>
-        <li class="previous"><a href="<?php print $prev_url; ?>" class="page-previous" title="<?php print t('Go to previous page'); ?>"><?php print t('‹ ') . $prev_title; ?></a></li>
-      <?php endif; ?>
-      <?php if ($parent_url): ?>
-        <li><a href="<?php print $parent_url; ?>" class="page-up" title="<?php print t('Go to parent page'); ?>"><?php print t('up'); ?></a></li>
-      <?php endif; ?>
-      <?php if ($next_url): ?>
-        <li class="next"><a href="<?php print $next_url; ?>" class="page-next" title="<?php print t('Go to next page'); ?>"><?php print $next_title . t(' ›'); ?></a></li>
-      <?php endif; ?>
-    </ul>
-    <?php endif; ?>
-
-  </div>
-<?php endif; ?>
diff --git a/templates/book/book-navigation.vars.php b/templates/book/book-navigation.vars.php
deleted file mode 100644
index b1a2744..0000000
--- a/templates/book/book-navigation.vars.php
+++ /dev/null
@@ -1,55 +0,0 @@
-<?php
-/**
- * @file
- * book-navigation.vars.php
- */
-
-/**
- * Implements hook_preprocess_book_navigation().
- */
-function bootstrap_process_book_navigation(&$variables) {
-  $variables['tree'] = _bootstrap_book_children($variables['book_link']);
-}
-
-/**
- * Formats the menu links for the child pages of the current page.
- *
- * @param array $book_link
- *   A fully loaded menu link that is part of the book hierarchy.
- *
- * @return string
- *   HTML for the links to the child pages of the current page.
- */
-function _bootstrap_book_children($book_link) {
-  // Rebuild entire menu tree for the book.
-  $tree = menu_build_tree($book_link['menu_name']);
-  $tree = menu_tree_output($tree);
-
-  // Fix the theme hook suggestions.
-  _bootstrap_book_fix_theme_hooks($book_link['nid'], $tree);
-
-  // Return the rendered output.
-  return drupal_render($tree);
-}
-
-/**
- * Helper function to fix theme hooks in book TOC menus.
- *
- * @param int $bid
- *   The book identification number.
- * @param array $element
- *   The element to iterate over, passed by reference.
- * @param int $level
- *   Used internally to determine the current level of the menu.
- */
-function _bootstrap_book_fix_theme_hooks($bid, array &$element, $level = 0) {
-  $hook = $level === 0 ? $bid : 'sub_menu__' . $bid;
-  $element['#theme_wrappers'] = array('menu_tree__book_toc__' . $hook);
-  foreach (element_children($element) as $child) {
-    $element[$child]['#theme'] = 'menu_link__book_toc__' . $hook;
-    // Iterate through all child menu items as well.
-    if (!empty($element[$child]['#below'])) {
-      _bootstrap_book_fix_theme_hooks($bid, $element[$child]['#below'], ($level + 1));
-    }
-  }
-}
diff --git a/templates/bootstrap/bootstrap-dropdown.func.php b/templates/bootstrap/bootstrap-dropdown.func.php
deleted file mode 100644
index 6dda24c..0000000
--- a/templates/bootstrap/bootstrap-dropdown.func.php
+++ /dev/null
@@ -1,12 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-dropdown.func.php
- */
-
-/**
- * Renders the Bootstrap dropdown.
- */
-function bootstrap_bootstrap_dropdown($variables) {
-  return drupal_render($variables['dropdown']);
-}
diff --git a/templates/bootstrap/bootstrap-dropdown.vars.php b/templates/bootstrap/bootstrap-dropdown.vars.php
deleted file mode 100644
index 6e54743..0000000
--- a/templates/bootstrap/bootstrap-dropdown.vars.php
+++ /dev/null
@@ -1,105 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-dropdown.vars.php
- */
-
-/**
- * Implements hook_preprocess_bootstrap_dropdown().
- */
-function bootstrap_preprocess_bootstrap_dropdown(&$variables) {
-  $element = &$variables['element'];
-
-  // Provide defaults.
-  $element += array(
-    '#wrapper_attributes' => NULL,
-    '#attributes' => NULL,
-    '#alignment' => NULL,
-    '#toggle' => NULL,
-    '#items' => NULL,
-  );
-
-  // Dropdown vertical alignment.
-  $element['#wrapper_attributes']['class'][] = 'dropdown';
-  if ($element['#alignment'] === 'up' || (is_array($element['#alignment']) && in_array('up', $element['#alignment']))) {
-    $element['#wrapper_attributes']['class'][] = 'dropup';
-  }
-
-  if (isset($element['#toggle'])) {
-    if (is_string($element['#toggle'])) {
-      $element['#toggle'] = array(
-        '#theme' => 'link__bootstrap_dropdown__toggle',
-        '#text' => $element['#toggle'],
-        '#path' => '#',
-        '#options' => array(
-          'attributes' => array(),
-          'html' => TRUE,
-          'external' => TRUE,
-        ),
-      );
-    }
-    if (isset($element['#toggle']['#options']['attributes'])) {
-      $element['#toggle']['#options']['attributes']['class'][] = 'dropdown-toggle';
-      $element['#toggle']['#options']['attributes']['data-toggle'] = 'dropdown';
-    }
-    else {
-      $element['#toggle']['#attributes']['class'][] = 'dropdown-toggle';
-      $element['#toggle']['#attributes']['data-toggle'] = 'dropdown';
-    }
-  }
-
-  // Menu items.
-  $element['#attributes']['role'] = 'menu';
-  $element['#attributes']['class'][] = 'dropdown-menu';
-  if ($element['#alignment'] === 'right' || (is_array($element['#alignment']) && in_array('right', $element['#alignment']))) {
-    $element['#attributes']['class'][] = 'dropdown-menu-right';
-  }
-}
-
-/**
- * Implements hook_process_bootstrap_dropdown().
- */
-function bootstrap_process_bootstrap_dropdown(&$variables) {
-  $element = &$variables['element'];
-
-  $items = array();
-  foreach ($element['#items'] as $data) {
-    $item_classes = array();
-
-    // Dividers.
-    if (empty($data)) {
-      $data = '';
-      $item_classes[] = 'divider';
-    }
-    // Headers (must be a string).
-    elseif (is_array($data) && (!empty($data['header']) || !empty($data['#header']))) {
-      $item_classes[] = 'dropdown-header';
-    }
-    // Disabled.
-    elseif (is_array($data) && (!empty($data['disabled']) || !empty($data['#disabled']))) {
-      $item_classes[] = 'disabled';
-    }
-
-    // Construct item_list item.
-    $item = array(
-      'data' => render($data),
-      'role' => 'presentation',
-    );
-    if (!empty($item_classes)) {
-      $item['class'] = $item_classes;
-    }
-    $items[] = $item;
-  }
-
-  // Create the dropdown.
-  $variables['dropdown'] = array(
-    '#theme_wrappers' => array('container'),
-    '#attributes' => $element['#wrapper_attributes'],
-    'toggle' => $element['#toggle'],
-    'items' => array(
-      '#theme' => 'item_list__bootstrap_dropdown',
-      '#items' => $items,
-      '#attributes' => $element['#attributes'],
-    ),
-  );
-}
diff --git a/templates/bootstrap/bootstrap-modal.tpl.php b/templates/bootstrap/bootstrap-modal.tpl.php
deleted file mode 100644
index 49a64d9..0000000
--- a/templates/bootstrap/bootstrap-modal.tpl.php
+++ /dev/null
@@ -1,26 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-modal.tpl.php
- *
- * Markup for Bootstrap modals.
- *
- * Variables:
- * - $attributes: Attributes for the outer modal div.
- * - $heading: Modal title.
- * - $body: The rendered body of the modal.
- * - $footer: The rendered footer of the modal.
- */
-?>
-<div<?php print $attributes; ?>>
-  <div class="modal-dialog">
-    <div class="modal-content">
-      <div class="modal-header">
-        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
-        <h4 class="modal-title"><?php print $heading; ?></h4>
-      </div>
-      <div class="modal-body"><?php print $body; ?></div>
-      <div class="modal-footer"><?php print $footer; ?></div>
-    </div>
-  </div>
-</div>
diff --git a/templates/bootstrap/bootstrap-modal.vars.php b/templates/bootstrap/bootstrap-modal.vars.php
deleted file mode 100644
index a900b0e..0000000
--- a/templates/bootstrap/bootstrap-modal.vars.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-modal.vars.php
- */
-
-/**
- * Implements theme_preprocess_bootstrap_modal().
- *
- * @todo: Replace with "bootstrap_effect_fade" theme setting.
- */
-function bootstrap_preprocess_bootstrap_modal(&$variables) {
-  if (empty($variables['attributes']['id'])) {
-    $variables['attributes']['id'] = drupal_html_id(strip_tags($variables['heading']));
-  }
-  $variables['attributes']['class'][] = 'modal';
-  $variables['attributes']['class'][] = 'fade';
-  $variables['attributes']['tabindex'] = -1;
-  $variables['attributes']['role'] = 'dialog';
-  $variables['attributes']['aria-hidden'] = 'true';
-
-  $variables['heading'] = $variables['html_heading'] ? $variables['heading'] : check_plain($variables['heading']);
-}
-
-/**
- * Implements theme_process_bootstrap_modal().
- */
-function bootstrap_process_bootstrap_modal(&$variables) {
-  $variables['attributes'] = drupal_attributes($variables['attributes']);
-  $variables['body'] = render($variables['body']);
-  $variables['footer'] = render($variables['footer']);
-}
diff --git a/templates/bootstrap/bootstrap-panel.tpl.php b/templates/bootstrap/bootstrap-panel.tpl.php
deleted file mode 100644
index b2d5a27..0000000
--- a/templates/bootstrap/bootstrap-panel.tpl.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-panel.tpl.php
- *
- * Markup for Bootstrap panels ([collapsible] fieldsets).
- */
-
-?>
-<fieldset <?php print $attributes; ?>>
-  <?php if ($title): ?>
-    <?php if ($collapsible): ?>
-    <legend class="panel-heading">
-      <a href="#" class="panel-title fieldset-legend" data-toggle="collapse" data-target="<?php print $target; ?>"><?php print $title; ?></a>
-    </legend>
-    <?php else: ?>
-    <legend class="panel-heading">
-      <span class="panel-title fieldset-legend"><?php print $title; ?></span>
-    </legend>
-    <?php endif; ?>
-  <?php endif; ?>
-  <?php if ($collapsible): ?>
-  <div class="panel-collapse collapse fade<?php print (!$collapsed ? ' in' : ''); ?>">
-  <?php endif; ?>
-  <div class="panel-body">
-    <?php if ($description): ?><div class="help-block"><?php print $description; ?></div><?php endif; ?>
-    <?php print $content; ?>
-  </div>
-  <?php if ($collapsible): ?>
-  </div>
-  <?php endif; ?>
-</fieldset>
diff --git a/templates/bootstrap/bootstrap-panel.vars.php b/templates/bootstrap/bootstrap-panel.vars.php
deleted file mode 100644
index 685b67a..0000000
--- a/templates/bootstrap/bootstrap-panel.vars.php
+++ /dev/null
@@ -1,61 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-panel.vars.php
- */
-
-/**
- * Implements hook_preprocess_bootstrap_panel().
- */
-function bootstrap_preprocess_bootstrap_panel(&$variables) {
-  $element = &$variables['element'];
-  $attributes = !empty($element['#attributes']) ? $element['#attributes'] : array();
-  $attributes['class'][] = 'panel';
-  $attributes['class'][] = 'panel-default';
-  // states.js requires form-wrapper on fieldset to work properly.
-  $attributes['class'][] = 'form-wrapper';
-  $variables['collapsible'] = FALSE;
-  if (isset($element['#collapsible'])) {
-    $variables['collapsible'] = $element['#collapsible'];
-  }
-  $variables['collapsed'] = FALSE;
-  if (isset($element['#collapsed'])) {
-    $variables['collapsed'] = $element['#collapsed'];
-  }
-  // Force grouped fieldsets to not be collapsible (for vertical tabs).
-  if (!empty($element['#group'])) {
-    $variables['collapsible'] = FALSE;
-    $variables['collapsed'] = FALSE;
-  }
-  if (!isset($element['#id']) && $variables['collapsible']) {
-    $element['#id'] = drupal_html_id('bootstrap-panel');
-  }
-  $variables['target'] = NULL;
-  if (isset($element['#id'])) {
-    $attributes['id'] = $element['#id'];
-    $variables['target'] = '#' . $element['#id'] . ' > .collapse';
-  }
-  $variables['content'] = $element['#children'];
-  if (isset($element['#value'])) {
-    $variables['content'] .= $element['#value'];
-  }
-
-  // Iterate over optional variables.
-  $keys = array(
-    'description',
-    'prefix',
-    'suffix',
-    'title',
-  );
-  foreach ($keys as $key) {
-    $variables[$key] = !empty($element["#$key"]) ? $element["#$key"] : FALSE;
-  }
-  $variables['attributes'] = $attributes;
-}
-
-/**
- * Implements hook_process_bootstrap_panel().
- */
-function bootstrap_process_bootstrap_panel(&$variables) {
-  $variables['attributes'] = drupal_attributes($variables['attributes']);
-}
diff --git a/templates/bootstrap/bootstrap-search-form-wrapper.func.php b/templates/bootstrap/bootstrap-search-form-wrapper.func.php
deleted file mode 100644
index 8cc98bf..0000000
--- a/templates/bootstrap/bootstrap-search-form-wrapper.func.php
+++ /dev/null
@@ -1,18 +0,0 @@
-<?php
-/**
- * @file
- * bootstrap-search-form-wrapper.func.php
- */
-
-/**
- * Theme function implementation for bootstrap_search_form_wrapper.
- */
-function bootstrap_bootstrap_search_form_wrapper($variables) {
-  $output = '<div class="input-group">';
-  $output .= $variables['element']['#children'];
-  $output .= '<span class="input-group-btn">';
-  $output .= '<button type="submit" class="btn btn-primary">' . _bootstrap_icon('search', t('Search')) . '</button>';
-  $output .= '</span>';
-  $output .= '</div>';
-  return $output;
-}
diff --git a/templates/file/file-managed-file.func.php b/templates/file/file-managed-file.func.php
deleted file mode 100644
index 6ae2704..0000000
--- a/templates/file/file-managed-file.func.php
+++ /dev/null
@@ -1,48 +0,0 @@
-<?php
-/**
- * @file
- * file-managed-file.func.php
- */
-
-/**
- * Overrides theme_file_managed_file().
- */
-function bootstrap_file_managed_file($variables) {
-  $element = $variables['element'];
-
-  $attributes = array();
-  if (isset($element['#id'])) {
-    $attributes['id'] = $element['#id'];
-  }
-  if (!empty($element['#attributes']['class'])) {
-    $attributes['class'] = (array) $element['#attributes']['class'];
-  }
-  $attributes['class'][] = 'form-managed-file';
-  $attributes['class'][] = 'input-group';
-
-  $element['upload_button']['#prefix'] = '<span class="input-group-btn">';
-  $element['upload_button']['#suffix'] = '</span>';
-  $element['remove_button']['#prefix'] = '<span class="input-group-btn">';
-  $element['remove_button']['#suffix'] = '</span>';
-
-  if (!empty($element['filename'])) {
-    $element['filename']['#prefix'] = '<div class="form-control">';
-    $element['filename']['#suffix'] = '</div>';
-  }
-
-  $hidden_elements = array();
-  foreach (element_children($element) as $child) {
-    if ($element[$child]['#type'] === 'hidden') {
-      $hidden_elements[$child] = $element[$child];
-      unset($element[$child]);
-    }
-  }
-
-  // This wrapper is required to apply JS behaviors and CSS styling.
-  $output = '';
-  $output .= '<div' . drupal_attributes($attributes) . '>';
-  $output .= drupal_render_children($element);
-  $output .= '</div>';
-  $output .= render($hidden_elements);
-  return $output;
-}
diff --git a/templates/file/file-widget.func.php b/templates/file/file-widget.func.php
deleted file mode 100644
index 5bbb241..0000000
--- a/templates/file/file-widget.func.php
+++ /dev/null
@@ -1,35 +0,0 @@
-<?php
-/**
- * @file
- * file-widget.func.php
- */
-
-/**
- * Overrides theme_file_widget().
- */
-function bootstrap_file_widget($variables) {
-  $element = $variables['element'];
-  $output = '';
-
-  $hidden_elements = array();
-  foreach (element_children($element) as $child) {
-    if (isset($element[$child]['#type']) && $element[$child]['#type'] === 'hidden') {
-      $hidden_elements[$child] = $element[$child];
-      unset($element[$child]);
-    }
-  }
-
-  $element['upload_button']['#prefix'] = '<span class="input-group-btn">';
-  $element['upload_button']['#suffix'] = '</span>';
-
-  // The "form-managed-file" class is required for proper Ajax functionality.
-  $output .= '<div class="file-widget form-managed-file clearfix input-group">';
-  if (!empty($element['fid']['#value'])) {
-    // Add the file size after the file name.
-    $element['filename']['#markup'] .= ' <span class="file-size">(' . format_size($element['#file']->filesize) . ')</span> ';
-  }
-  $output .= drupal_render_children($element);
-  $output .= '</div>';
-  $output .= render($hidden_elements);
-  return $output;
-}
diff --git a/templates/icon/icon.vars.php b/templates/icon/icon.vars.php
deleted file mode 100644
index 133b9a7..0000000
--- a/templates/icon/icon.vars.php
+++ /dev/null
@@ -1,20 +0,0 @@
-<?php
-/**
- * @file
- * icon.vars.php
- */
-
-/**
- * Implements hook_preprocess_icon().
- *
- * Bootstrap requires an additional "glyphicon" class for all icons.
- *
- * @see icon_preprocess_icon_image()
- * @see template_preprocess_icon()
- */
-function bootstrap_preprocess_icon(&$variables) {
-  $bundle = &$variables['bundle'];
-  if ($bundle['provider'] === 'bootstrap') {
-    $variables['attributes']['class'][] = 'glyphicon';
-  }
-}
diff --git a/templates/menu/menu-link.func.php b/templates/menu/menu-link.func.php
deleted file mode 100644
index ef42170..0000000
--- a/templates/menu/menu-link.func.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-/**
- * @file
- * menu-link.func.php
- */
-
-/**
- * Overrides theme_menu_link().
- */
-function bootstrap_menu_link(array $variables) {
-  $element = $variables['element'];
-  $sub_menu = '';
-
-  if ($element['#below']) {
-    // Prevent dropdown functions from being added to management menu so it
-    // does not affect the navbar module.
-    if (($element['#original_link']['menu_name'] == 'management') && (module_exists('navbar'))) {
-      $sub_menu = drupal_render($element['#below']);
-    }
-    elseif ((!empty($element['#original_link']['depth'])) && ($element['#original_link']['depth'] == 1)) {
-      // Add our own wrapper.
-      unset($element['#below']['#theme_wrappers']);
-      $sub_menu = '<ul class="dropdown-menu">' . drupal_render($element['#below']) . '</ul>';
-      // Generate as standard dropdown.
-      $element['#title'] .= ' <span class="caret"></span>';
-      $element['#attributes']['class'][] = 'dropdown';
-      $element['#localized_options']['html'] = TRUE;
-
-      // Set dropdown trigger element to # to prevent inadvertant page loading
-      // when a submenu link is clicked.
-      $element['#localized_options']['attributes']['data-target'] = '#';
-      $element['#localized_options']['attributes']['class'][] = 'dropdown-toggle';
-      $element['#localized_options']['attributes']['data-toggle'] = 'dropdown';
-    }
-  }
-  // On primary navigation menu, class 'active' is not set on active menu item.
-  // @see https://drupal.org/node/1896674
-  if (($element['#href'] == $_GET['q'] || ($element['#href'] == '<front>' && drupal_is_front_page())) && (empty($element['#localized_options']['language']))) {
-    $element['#attributes']['class'][] = 'active';
-  }
-  $output = l($element['#title'], $element['#href'], $element['#localized_options']);
-  return '<li' . drupal_attributes($element['#attributes']) . '>' . $output . $sub_menu . "</li>\n";
-}
-
-/**
- * Overrides theme_menu_link() for book module.
- */
-function bootstrap_menu_link__book_toc(array $variables) {
-  $element = $variables['element'];
-  $sub_menu = drupal_render($element['#below']);
-  $element['#attributes']['role'] = 'presentation';
-  $link = TRUE;
-  if ($element['#title'] && $element['#href'] === FALSE) {
-    $element['#attributes']['class'][] = 'dropdown-header';
-    $link = FALSE;
-  }
-  elseif ($element['#title'] === FALSE && $element['#href'] === FALSE) {
-    $element['#attributes']['class'][] = 'divider';
-    $link = FALSE;
-  }
-  elseif (($element['#href'] == $_GET['q'] || ($element['#href'] == '<front>' && drupal_is_front_page())) && (empty($element['#localized_options']['language']))) {
-    $element['#attributes']['class'][] = 'active';
-  }
-  if ($link) {
-    $element['#title'] = l($element['#title'], $element['#href'], $element['#localized_options']);
-  }
-  return '<li' . drupal_attributes($element['#attributes']) . '>' . $element['#title'] . $sub_menu . "</li>\n";
-}
diff --git a/templates/menu/menu-local-action.func.php b/templates/menu/menu-local-action.func.php
deleted file mode 100644
index 285070a..0000000
--- a/templates/menu/menu-local-action.func.php
+++ /dev/null
@@ -1,50 +0,0 @@
-<?php
-/**
- * @file
- * menu-local-action.func.php
- */
-
-/**
- * Overrides theme_menu_local_action().
- */
-function bootstrap_menu_local_action($variables) {
-  $link = $variables['element']['#link'];
-
-  $options = isset($link['localized_options']) ? $link['localized_options'] : array();
-
-  // If the title is not HTML, sanitize it.
-  if (empty($options['html'])) {
-    $link['title'] = check_plain($link['title']);
-  }
-
-  $icon = _bootstrap_iconize_text($link['title']);
-
-  // Format the action link.
-  $output = '';
-  if (isset($link['href'])) {
-    // Turn link into a mini-button and colorize based on title.
-    if ($class = _bootstrap_colorize_text($link['title'])) {
-      if (!isset($options['attributes']['class'])) {
-        $options['attributes']['class'] = array();
-      }
-      $string = is_string($options['attributes']['class']);
-      if ($string) {
-        $options['attributes']['class'] = explode(' ', $options['attributes']['class']);
-      }
-      $options['attributes']['class'][] = 'btn';
-      $options['attributes']['class'][] = 'btn-xs';
-      $options['attributes']['class'][] = 'btn-' . $class;
-      if ($string) {
-        $options['attributes']['class'] = implode(' ', $options['attributes']['class']);
-      }
-    }
-    // Force HTML so we can render any icon that may have been added.
-    $options['html'] = !empty($options['html']) || !empty($icon) ? TRUE : FALSE;
-    $output .= l($icon . $link['title'], $link['href'], $options);
-  }
-  else {
-    $output .= $icon . $link['title'];
-  }
-
-  return $output;
-}
diff --git a/templates/menu/menu-local-task.func.php b/templates/menu/menu-local-task.func.php
deleted file mode 100644
index c36937d..0000000
--- a/templates/menu/menu-local-task.func.php
+++ /dev/null
@@ -1,31 +0,0 @@
-<?php
-/**
- * @file
- * menu-local-task.func.php
- */
-
-/**
- * Overrides theme_menu_local_task().
- */
-function bootstrap_menu_local_task($variables) {
-  $link = $variables['element']['#link'];
-  $link_text = $link['title'];
-  $classes = array();
-
-  if (!empty($variables['element']['#active'])) {
-    // Add text to indicate active tab for non-visual users.
-    $active = '<span class="element-invisible">' . t('(active tab)') . '</span>';
-
-    // If the link does not contain HTML already, check_plain() it now.
-    // After we set 'html'=TRUE the link will not be sanitized by l().
-    if (empty($link['localized_options']['html'])) {
-      $link['title'] = check_plain($link['title']);
-    }
-    $link['localized_options']['html'] = TRUE;
-    $link_text = t('!local-task-title!active', array('!local-task-title' => $link['title'], '!active' => $active));
-
-    $classes[] = 'active';
-  }
-
-  return '<li class="' . implode(' ', $classes) . '">' . l($link_text, $link['href'], $link['localized_options']) . "</li>\n";
-}
diff --git a/templates/menu/menu-local-tasks.func.php b/templates/menu/menu-local-tasks.func.php
deleted file mode 100644
index f3d06a4..0000000
--- a/templates/menu/menu-local-tasks.func.php
+++ /dev/null
@@ -1,28 +0,0 @@
-<?php
-/**
- * @file
- * menu-local-tasks.func.php
- */
-
-/**
- * Overrides theme_menu_local_tasks().
- */
-function bootstrap_menu_local_tasks(&$variables) {
-  $output = '';
-
-  if (!empty($variables['primary'])) {
-    $variables['primary']['#prefix'] = '<h2 class="element-invisible">' . t('Primary tabs') . '</h2>';
-    $variables['primary']['#prefix'] .= '<ul class="tabs--primary nav nav-tabs">';
-    $variables['primary']['#suffix'] = '</ul>';
-    $output .= drupal_render($variables['primary']);
-  }
-
-  if (!empty($variables['secondary'])) {
-    $variables['secondary']['#prefix'] = '<h2 class="element-invisible">' . t('Secondary tabs') . '</h2>';
-    $variables['secondary']['#prefix'] .= '<ul class="tabs--secondary pagination pagination-sm">';
-    $variables['secondary']['#suffix'] = '</ul>';
-    $output .= drupal_render($variables['secondary']);
-  }
-
-  return $output;
-}
diff --git a/templates/menu/menu-tree.func.php b/templates/menu/menu-tree.func.php
deleted file mode 100644
index ca5ef9e..0000000
--- a/templates/menu/menu-tree.func.php
+++ /dev/null
@@ -1,49 +0,0 @@
-<?php
-/**
- * @file
- * menu-tree.func.php
- */
-
-/**
- * Overrides theme_menu_tree().
- */
-function bootstrap_menu_tree(&$variables) {
-  return '<ul class="menu nav">' . $variables['tree'] . '</ul>';
-}
-
-/**
- * Bootstrap theme wrapper function for the primary menu links.
- */
-function bootstrap_menu_tree__primary(&$variables) {
-  return '<ul class="menu nav navbar-nav">' . $variables['tree'] . '</ul>';
-}
-
-/**
- * Bootstrap theme wrapper function for the secondary menu links.
- */
-function bootstrap_menu_tree__secondary(&$variables) {
-  return '<ul class="menu nav navbar-nav secondary">' . $variables['tree'] . '</ul>';
-}
-
-/**
- * Overrides theme_menu_tree() for book module.
- */
-function bootstrap_menu_tree__book_toc(&$variables) {
-  $output = '<div class="book-toc btn-group pull-right">';
-  $output .= '  <button type="button" class="btn btn-link dropdown-toggle" data-toggle="dropdown">';
-  $output .= t('!icon Outline !caret', array(
-    '!icon' => _bootstrap_icon('list'),
-    '!caret' => '<span class="caret"></span>',
-  ));
-  $output .= '</button>';
-  $output .= '<ul class="dropdown-menu" role="menu">' . $variables['tree'] . '</ul>';
-  $output .= '</div>';
-  return $output;
-}
-
-/**
- * Overrides theme_menu_tree() for book module.
- */
-function bootstrap_menu_tree__book_toc__sub_menu(&$variables) {
-  return '<ul class="dropdown-menu" role="menu">' . $variables['tree'] . '</ul>';
-}
diff --git a/templates/node/node.tpl.php b/templates/node/node.tpl.php
deleted file mode 100644
index c990439..0000000
--- a/templates/node/node.tpl.php
+++ /dev/null
@@ -1,112 +0,0 @@
-<?php
-/**
- * @file
- * Default theme implementation to display a node.
- *
- * Available variables:
- * - $title: the (sanitized) title of the node.
- * - $content: An array of node items. Use render($content) to print them all,
- *   or print a subset such as render($content['field_example']). Use
- *   hide($content['field_example']) to temporarily suppress the printing of a
- *   given element.
- * - $user_picture: The node author's picture from user-picture.tpl.php.
- * - $date: Formatted creation date. Preprocess functions can reformat it by
- *   calling format_date() with the desired parameters on the $created variable.
- * - $name: Themed username of node author output from theme_username().
- * - $node_url: Direct URL of the current node.
- * - $display_submitted: Whether submission information should be displayed.
- * - $submitted: Submission information created from $name and $date during
- *   template_preprocess_node().
- * - $classes: String of classes that can be used to style contextually through
- *   CSS. It can be manipulated through the variable $classes_array from
- *   preprocess functions. The default values can be one or more of the
- *   following:
- *   - node: The current template type; for example, "theming hook".
- *   - node-[type]: The current node type. For example, if the node is a
- *     "Blog entry" it would result in "node-blog". Note that the machine
- *     name will often be in a short form of the human readable label.
- *   - node-teaser: Nodes in teaser form.
- *   - node-preview: Nodes in preview mode.
- *   The following are controlled through the node publishing options.
- *   - node-promoted: Nodes promoted to the front page.
- *   - node-sticky: Nodes ordered above other non-sticky nodes in teaser
- *     listings.
- *   - node-unpublished: Unpublished nodes visible only to administrators.
- * - $title_prefix (array): An array containing additional output populated by
- *   modules, intended to be displayed in front of the main title tag that
- *   appears in the template.
- * - $title_suffix (array): An array containing additional output populated by
- *   modules, intended to be displayed after the main title tag that appears in
- *   the template.
- *
- * Other variables:
- * - $node: Full node object. Contains data that may not be safe.
- * - $type: Node type; for example, story, page, blog, etc.
- * - $comment_count: Number of comments attached to the node.
- * - $uid: User ID of the node author.
- * - $created: Time the node was published formatted in Unix timestamp.
- * - $classes_array: Array of html class attribute values. It is flattened
- *   into a string within the variable $classes.
- * - $zebra: Outputs either "even" or "odd". Useful for zebra striping in
- *   teaser listings.
- * - $id: Position of the node. Increments each time it's output.
- *
- * Node status variables:
- * - $view_mode: View mode; for example, "full", "teaser".
- * - $teaser: Flag for the teaser state (shortcut for $view_mode == 'teaser').
- * - $page: Flag for the full page state.
- * - $promote: Flag for front page promotion state.
- * - $sticky: Flags for sticky post setting.
- * - $status: Flag for published status.
- * - $comment: State of comment settings for the node.
- * - $readmore: Flags true if the teaser content of the node cannot hold the
- *   main body content.
- * - $is_front: Flags true when presented in the front page.
- * - $logged_in: Flags true when the current user is a logged-in member.
- * - $is_admin: Flags true when the current user is an administrator.
- *
- * Field variables: for each field instance attached to the node a corresponding
- * variable is defined; for example, $node->body becomes $body. When needing to
- * access a field's raw values, developers/themers are strongly encouraged to
- * use these variables. Otherwise they will have to explicitly specify the
- * desired field language; for example, $node->body['en'], thus overriding any
- * language negotiation rule that was previously applied.
- *
- * @see template_preprocess()
- * @see template_preprocess_node()
- * @see template_process()
- *
- * @ingroup themeable
- */
-?>
-<article id="node-<?php print $node->nid; ?>" class="<?php print $classes; ?> clearfix"<?php print $attributes; ?>>
-  <?php if ((!$page && !empty($title)) || !empty($title_prefix) || !empty($title_suffix) || $display_submitted): ?>
-  <header>
-    <?php print render($title_prefix); ?>
-    <?php if (!$page && !empty($title)): ?>
-    <h2<?php print $title_attributes; ?>><a href="<?php print $node_url; ?>"><?php print $title; ?></a></h2>
-    <?php endif; ?>
-    <?php print render($title_suffix); ?>
-    <?php if ($display_submitted): ?>
-    <span class="submitted">
-      <?php print $user_picture; ?>
-      <?php print $submitted; ?>
-    </span>
-    <?php endif; ?>
-  </header>
-  <?php endif; ?>
-  <?php
-    // Hide comments, tags, and links now so that we can render them later.
-    hide($content['comments']);
-    hide($content['links']);
-    hide($content['field_tags']);
-    print render($content);
-  ?>
-  <?php if (!empty($content['field_tags']) || !empty($content['links'])): ?>
-  <footer>
-    <?php print render($content['field_tags']); ?>
-    <?php print render($content['links']); ?>
-  </footer>
-  <?php endif; ?>
-  <?php print render($content['comments']); ?>
-</article>
diff --git a/templates/poll/poll-bar--block.tpl.php b/templates/poll/poll-bar--block.tpl.php
deleted file mode 100644
index 1b6eadf..0000000
--- a/templates/poll/poll-bar--block.tpl.php
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-
-/**
- * @file
- * Default theme implementation to display the bar for a single choice in a
- * poll.
- *
- * Variables available:
- * - $title: The title of the poll.
- * - $votes: The number of votes for this choice
- * - $total_votes: The number of votes for this choice
- * - $percentage: The percentage of votes for this choice.
- * - $vote: The choice number of the current user's vote.
- * - $voted: Set to TRUE if the user voted for this choice.
- *
- * @see template_preprocess_poll_bar()
- */
-?>
-
-<div class="text"><?php print $title; ?></div>
-<div class="progress">
-  <div class="progress-bar" role="progressbar" aria-valuenow="<?php print $percentage; ?>" aria-valuemin="0" aria-valuemax="100" style="width: <?php print $percentage; ?>%;">
-    <?php print $percentage; ?>%
-  </div>
-</div>
diff --git a/templates/poll/poll-bar.tpl.php b/templates/poll/poll-bar.tpl.php
deleted file mode 100644
index 48fe645..0000000
--- a/templates/poll/poll-bar.tpl.php
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-
-/**
- * @file
- * Default theme implementation to display the bar for a single choice in a
- * poll.
- *
- * Variables available:
- * - $title: The title of the poll.
- * - $votes: The number of votes for this choice
- * - $total_votes: The number of votes for this choice
- * - $percentage: The percentage of votes for this choice.
- * - $vote: The choice number of the current user's vote.
- * - $voted: Set to TRUE if the user voted for this choice.
- *
- * @see template_preprocess_poll_bar()
- */
-?>
-
-<div class="text"><?php print $title; ?></div>
-<div class="progress">
-  <div class="progress-bar" role="progressbar" aria-valuenow="<?php print $percentage; ?>" aria-valuemin="0" aria-valuemax="100" style="width: <?php print $percentage; ?>%;">
-    <?php print $percentage; ?>% (<?php print format_plural($votes, '1 vote', '@count votes'); ?>)
-  </div>
-</div>
diff --git a/templates/search/search-block-form.tpl.php b/templates/search/search-block-form.tpl.php
deleted file mode 100644
index 4978c2a..0000000
--- a/templates/search/search-block-form.tpl.php
+++ /dev/null
@@ -1,36 +0,0 @@
-<?php
-/**
- * @file
- * Displays the search form block.
- *
- * Available variables:
- * - $search_form: The complete search form ready for print.
- * - $search: Associative array of search elements. Can be used to print each
- *   form element separately.
- *
- * Default elements within $search:
- * - $search['search_block_form']: Text input area wrapped in a div.
- * - $search['actions']: Rendered form buttons.
- * - $search['hidden']: Hidden form elements. Used to validate forms when
- *   submitted.
- *
- * Modules can add to the search form, so it is recommended to check for their
- * existence before printing. The default keys will always exist. To check for
- * a module-provided field, use code like this:
- * @code
- *   <?php if (isset($search['extra_field'])): ?>
- *     <div class="extra-field">
- *       <?php print $search['extra_field']; ?>
- *     </div>
- *   <?php endif; ?>
- * @endcode
- *
- * @see template_preprocess_search_block_form()
- */
-?>
-<div>
-  <?php if (empty($variables['form']['#block']->subject)): ?>
-    <h2 class="element-invisible"><?php print t('Search form'); ?></h2>
-  <?php endif; ?>
-  <?php print $search_form; ?>
-</div>
diff --git a/templates/system/breadcrumb.func.php b/templates/system/breadcrumb.func.php
deleted file mode 100644
index a5305b3..0000000
--- a/templates/system/breadcrumb.func.php
+++ /dev/null
@@ -1,28 +0,0 @@
-<?php
-/**
- * @file
- * breadcrumb.func.php
- */
-
-/**
- * Overrides theme_breadcrumb().
- *
- * Print breadcrumbs as an ordered list.
- */
-function bootstrap_breadcrumb($variables) {
-  $output = '';
-  $breadcrumb = $variables['breadcrumb'];
-
-  // Determine if we are to display the breadcrumb.
-  $bootstrap_breadcrumb = theme_get_setting('bootstrap_breadcrumb');
-  if (($bootstrap_breadcrumb == 1 || ($bootstrap_breadcrumb == 2 && arg(0) == 'admin')) && !empty($breadcrumb)) {
-    $output = theme('item_list', array(
-      'attributes' => array(
-        'class' => array('breadcrumb'),
-      ),
-      'items' => $breadcrumb,
-      'type' => 'ol',
-    ));
-  }
-  return $output;
-}
diff --git a/templates/system/breadcrumb.vars.php b/templates/system/breadcrumb.vars.php
deleted file mode 100644
index 70fb9d9..0000000
--- a/templates/system/breadcrumb.vars.php
+++ /dev/null
@@ -1,27 +0,0 @@
-<?php
-/**
- * @file
- * breadcrumb.vars.php
- */
-
-/**
- * Implements hook_preprocess_breadcrumb().
- */
-function bootstrap_preprocess_breadcrumb(&$variables) {
-  $breadcrumb = &$variables['breadcrumb'];
-
-  // Optionally get rid of the homepage link.
-  $show_breadcrumb_home = theme_get_setting('bootstrap_breadcrumb_home');
-  if (!$show_breadcrumb_home) {
-    array_shift($breadcrumb);
-  }
-
-  if (theme_get_setting('bootstrap_breadcrumb_title') && !empty($breadcrumb)) {
-    $item = menu_get_item();
-    $breadcrumb[] = array(
-      // If we are on a non-default tab, use the tab's title.
-      'data' => !empty($item['tab_parent']) ? check_plain($item['title']) : drupal_get_title(),
-      'class' => array('active'),
-    );
-  }
-}
diff --git a/templates/system/button.func.php b/templates/system/button.func.php
deleted file mode 100644
index d358e74..0000000
--- a/templates/system/button.func.php
+++ /dev/null
@@ -1,27 +0,0 @@
-<?php
-/**
- * @file
- * button.func.php
- */
-
-/**
- * Overrides theme_button().
- */
-function bootstrap_button($variables) {
-  $element = $variables['element'];
-
-  // Add icons before or after the value.
-  // @see https://drupal.org/node/2219965
-  $value = $element['#value'];
-  if (!empty($element['#icon'])) {
-    if ($element['#icon_position'] === 'before') {
-      $value = $element['#icon'] . ' ' . $value;
-    }
-    elseif ($element['#icon_position'] === 'after') {
-      $value .= ' ' . $element['#icon'];
-    }
-  }
-
-  // This line break adds inherent margin between multiple buttons.
-  return '<button' . drupal_attributes($element['#attributes']) . '>' . $value . "</button>\n";
-}
diff --git a/templates/system/button.vars.php b/templates/system/button.vars.php
deleted file mode 100644
index c195504..0000000
--- a/templates/system/button.vars.php
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-/**
- * @file
- * button.vars.php
- */
-
-/**
- * Implements hook_preprocess_button().
- */
-function bootstrap_preprocess_button(&$vars) {
-  $element = &$vars['element'];
-
-  // Set the element's attributes.
-  element_set_attributes($element, array('id', 'name', 'value', 'type'));
-
-  // Add the base Bootstrap button class.
-  $element['#attributes']['class'][] = 'btn';
-
-  // Add button size, if necessary.
-  if ($size = theme_get_setting('bootstrap_button_size')) {
-    $element['#attributes']['class'][] = $size;
-  }
-
-  // Colorize button.
-  _bootstrap_colorize_button($element);
-
-  // Add in the button type class.
-  $element['#attributes']['class'][] = 'form-' . $element['#button_type'];
-
-  // Ensure that all classes are unique, no need for duplicates.
-  $element['#attributes']['class'] = array_unique($element['#attributes']['class']);
-}
diff --git a/templates/system/container.func.php b/templates/system/container.func.php
deleted file mode 100644
index e72c1ac..0000000
--- a/templates/system/container.func.php
+++ /dev/null
@@ -1,28 +0,0 @@
-<?php
-/**
- * @file
- * container.func.php
- */
-
-/**
- * Overrides theme_container().
- */
-function bootstrap_container($variables) {
-  $element = $variables['element'];
-
-  // Special handling for form elements.
-  if (isset($element['#array_parents'])) {
-    // Assign an html ID.
-    if (!isset($element['#attributes']['id'])) {
-      $element['#attributes']['id'] = $element['#id'];
-    }
-
-    // Core's "form-wrapper" class is required for states.js to function.
-    $element['#attributes']['class'][] = 'form-wrapper';
-
-    // Add Bootstrap "form-group" class.
-    $element['#attributes']['class'][] = 'form-group';
-  }
-
-  return '<div' . drupal_attributes($element['#attributes']) . '>' . $element['#children'] . '</div>';
-}
diff --git a/templates/system/date.func.php b/templates/system/date.func.php
deleted file mode 100644
index 90cff64..0000000
--- a/templates/system/date.func.php
+++ /dev/null
@@ -1,23 +0,0 @@
-<?php
-/**
- * @file
- * date.func.php
- */
-
-/**
- * Overrides theme_date().
- */
-function bootstrap_date($variables) {
-  $element = $variables['element'];
-
-  $attributes = array();
-  if (isset($element['#id'])) {
-    $attributes['id'] = $element['#id'];
-  }
-  if (!empty($element['#attributes']['class'])) {
-    $attributes['class'] = (array) $element['#attributes']['class'];
-  }
-  $attributes['class'][] = 'form-inline';
-
-  return '<div' . drupal_attributes($attributes) . '>' . drupal_render_children($element) . '</div>';
-}
diff --git a/templates/system/exposed-filters.func.php b/templates/system/exposed-filters.func.php
deleted file mode 100644
index 2f93493..0000000
--- a/templates/system/exposed-filters.func.php
+++ /dev/null
@@ -1,38 +0,0 @@
-<?php
-/**
- * @file
- * exposed-filters.func.php
- */
-
-/**
- * Overrides theme_exposed_filters().
- */
-function bootstrap_exposed_filters($variables) {
-  $form = $variables['form'];
-  $output = '';
-
-  foreach (element_children($form['status']['filters']) as $key) {
-    $form['status']['filters'][$key]['#field_prefix'] = '<div class="col-sm-10">';
-    $form['status']['filters'][$key]['#field_suffix'] = '</div>';
-  }
-  $form['status']['actions']['#attributes']['class'][] = 'col-sm-offset-2';
-  $form['status']['actions']['#attributes']['class'][] = 'col-sm-10';
-
-  if (isset($form['current'])) {
-    $items = array();
-    foreach (element_children($form['current']) as $key) {
-      $items[] = drupal_render($form['current'][$key]);
-    }
-    $output .= theme('item_list', array(
-      'items' => $items,
-      'attributes' => array(
-        'class' => array(
-          'clearfix',
-          'current-filters',
-        ),
-      ),
-    ));
-  }
-  $output .= drupal_render_children($form);
-  return '<div class="form-horizontal">' . $output . '</div>';
-}
diff --git a/templates/system/fieldset.func.php b/templates/system/fieldset.func.php
deleted file mode 100644
index cb2eb90..0000000
--- a/templates/system/fieldset.func.php
+++ /dev/null
@@ -1,12 +0,0 @@
-<?php
-/**
- * @file
- * fieldset.func.php
- */
-
-/**
- * Overrides theme_fieldset().
- */
-function bootstrap_fieldset($variables) {
-  return theme('bootstrap_panel', $variables);
-}
diff --git a/templates/system/form-element-label.func.php b/templates/system/form-element-label.func.php
deleted file mode 100644
index 78939f7..0000000
--- a/templates/system/form-element-label.func.php
+++ /dev/null
@@ -1,55 +0,0 @@
-<?php
-/**
- * @file
- * form-element-label.func.php
- */
-
-/**
- * Overrides theme_form_element_label().
- */
-function bootstrap_form_element_label(&$variables) {
-  $element = $variables['element'];
-
-  // This is also used in the installer, pre-database setup.
-  $t = get_t();
-
-  // Determine if certain things should skip for checkbox or radio elements.
-  $skip = (isset($element['#type']) && ('checkbox' === $element['#type'] || 'radio' === $element['#type']));
-
-  // If title and required marker are both empty, output no label.
-  if ((!isset($element['#title']) || $element['#title'] === '' && !$skip) && empty($element['#required'])) {
-    return '';
-  }
-
-  // If the element is required, a required marker is appended to the label.
-  $required = !empty($element['#required']) ? theme('form_required_marker', array('element' => $element)) : '';
-
-  $title = filter_xss_admin($element['#title']);
-
-  $attributes = array();
-
-  // Style the label as class option to display inline with the element.
-  if ($element['#title_display'] == 'after' && !$skip) {
-    $attributes['class'][] = $element['#type'];
-  }
-  // Show label only to screen readers to avoid disruption in visual flows.
-  elseif ($element['#title_display'] == 'invisible') {
-    $attributes['class'][] = 'element-invisible';
-  }
-
-  if (!empty($element['#id'])) {
-    $attributes['for'] = $element['#id'];
-  }
-
-  // Insert radio and checkboxes inside label elements.
-  $output = '';
-  if (isset($variables['#children'])) {
-    $output .= $variables['#children'];
-  }
-
-  // Append label.
-  $output .= $t('!title !required', array('!title' => $title, '!required' => $required));
-
-  // The leading whitespace helps visually separate fields from inline labels.
-  return ' <label' . drupal_attributes($attributes) . '>' . $output . "</label>\n";
-}
diff --git a/templates/system/form-element.func.php b/templates/system/form-element.func.php
deleted file mode 100644
index 2a88eb5..0000000
--- a/templates/system/form-element.func.php
+++ /dev/null
@@ -1,138 +0,0 @@
-<?php
-/**
- * @file
- * form-element.func.php
- */
-
-/**
- * Overrides theme_form_element().
- */
-function bootstrap_form_element(&$variables) {
-  $element = &$variables['element'];
-  $is_checkbox = FALSE;
-  $is_radio = FALSE;
-
-  // This function is invoked as theme wrapper, but the rendered form element
-  // may not necessarily have been processed by form_builder().
-  $element += array(
-    '#title_display' => 'before',
-  );
-
-  if (empty($element['#wrapper_attributes'])) {
-    $element['#wrapper_attributes'] = array();
-  }
-  $wrapper_attributes = &$element['#wrapper_attributes'];
-
-  // Add element #id for #type 'item'.
-  if (isset($element['#markup']) && !empty($element['#id'])) {
-    $wrapper_attributes['id'] = $element['#id'];
-  }
-
-  // Check for errors and set correct error class.
-  if (isset($element['#parents']) && form_get_error($element)) {
-    $wrapper_attributes['class'][] = 'has-error';
-  }
-
-  if (!empty($element['#type'])) {
-    $wrapper_attributes['class'][] = 'form-type-' . strtr($element['#type'], '_', '-');
-  }
-  if (!empty($element['#name'])) {
-    $wrapper_attributes['class'][] = 'form-item-' . strtr($element['#name'], array(
-        ' ' => '-',
-        '_' => '-',
-        '[' => '-',
-        ']' => '',
-      ));
-  }
-  // Add a class for disabled elements to facilitate cross-browser styling.
-  if (!empty($element['#attributes']['disabled'])) {
-    $wrapper_attributes['class'][] = 'form-disabled';
-  }
-  if (!empty($element['#autocomplete_path']) && drupal_valid_path($element['#autocomplete_path'])) {
-    $wrapper_attributes['class'][] = 'form-autocomplete';
-  }
-  $wrapper_attributes['class'][] = 'form-item';
-
-  // See http://getbootstrap.com/css/#forms-controls.
-  if (isset($element['#type'])) {
-    if ($element['#type'] == "radio") {
-      $wrapper_attributes['class'][] = 'radio';
-      $is_radio = TRUE;
-    }
-    elseif ($element['#type'] == "checkbox") {
-      $wrapper_attributes['class'][] = 'checkbox';
-      $is_checkbox = TRUE;
-    }
-    else {
-      $wrapper_attributes['class'][] = 'form-group';
-    }
-  }
-
-  $tooltip_description = !empty($element['#description']) && _bootstrap_tooltip_description($element['#description']);
-  if ($tooltip_description && ($element['#type'] === 'checkbox' || $element['#type'] === 'radio' || $element['#type'] === 'checkboxes' || $element['#type'] === 'radios')) {
-    $wrapper_attributes['title'] = $element['#description'];
-    $wrapper_attributes['data-toggle'] = 'tooltip';
-  }
-
-  $output = '<div' . drupal_attributes($wrapper_attributes) . '>' . "\n";
-
-  // If #title is not set, we don't display any label or required marker.
-  if (!isset($element['#title'])) {
-    $element['#title_display'] = 'none';
-  }
-
-  $prefix = '';
-  $suffix = '';
-  if (isset($element['#field_prefix']) || isset($element['#field_suffix'])) {
-    // Determine if "#input_group" was specified.
-    if (!empty($element['#input_group'])) {
-      $prefix .= '<div class="input-group">';
-      $prefix .= isset($element['#field_prefix']) ? '<span class="input-group-addon">' . $element['#field_prefix'] . '</span>' : '';
-      $suffix .= isset($element['#field_suffix']) ? '<span class="input-group-addon">' . $element['#field_suffix'] . '</span>' : '';
-      $suffix .= '</div>';
-    }
-    // Determine if "#input_group_button" was specified.
-    elseif (!empty($element['#input_group_button'])) {
-      $prefix .= '<div class="input-group">';
-      $prefix .= isset($element['#field_prefix']) ? '<span class="input-group-btn">' . $element['#field_prefix'] . '</span>' : '';
-      $suffix .= isset($element['#field_suffix']) ? '<span class="input-group-btn">' . $element['#field_suffix'] . '</span>' : '';
-      $suffix .= '</div>';
-    }
-    else {
-      $prefix .= isset($element['#field_prefix']) ? $element['#field_prefix'] : '';
-      $suffix .= isset($element['#field_suffix']) ? $element['#field_suffix'] : '';
-    }
-  }
-
-  switch ($element['#title_display']) {
-    case 'before':
-    case 'invisible':
-      $output .= ' ' . theme('form_element_label', $variables);
-      $output .= ' ' . $prefix . $element['#children'] . $suffix . "\n";
-      break;
-
-    case 'after':
-      if ($is_radio || $is_checkbox) {
-        $variables['#children'] = $prefix . $element['#children'] . ' ' . $suffix;
-      }
-      else {
-        $output .= ' ' . $prefix . $element['#children'] . $suffix;
-      }
-      $output .= ' ' . theme('form_element_label', $variables) . "\n";
-      break;
-
-    case 'none':
-    case 'attribute':
-      // Output no label and no required marker, only the children.
-      $output .= ' ' . $prefix . $element['#children'] . $suffix . "\n";
-      break;
-  }
-
-  if (!empty($element['#description']) && !$tooltip_description && empty($element['#attributes']['title'])) {
-    $output .= '<p class="help-block">' . $element['#description'] . "</p>\n";
-  }
-
-  $output .= "</div>\n";
-
-  return $output;
-}
diff --git a/templates/system/html-tag.vars.php b/templates/system/html-tag.vars.php
deleted file mode 100644
index ee1ce25..0000000
--- a/templates/system/html-tag.vars.php
+++ /dev/null
@@ -1,51 +0,0 @@
-<?php
-/**
- * @file
- * html-tag.vars.php
- */
-
-/**
- * Implements hook_process_html_tag().
- */
-function bootstrap_process_html_tag(&$variables) {
-  // Reference the element and tag name for easier coding below.
-  $element = &$variables['element'];
-  $tag = $element['#tag'];
-  if ($tag === 'style' || $tag === 'script') {
-    // Remove default "type" attribute. Leave others unaffected as it may be
-    // needed and used for other purposes.
-    // @see http://stackoverflow.com/a/5265361/1226717
-    // @see https://drupal.org/node/2201779
-    $types = array(
-      // @see http://www.w3.org/TR/html5/document-metadata.html#attr-style-type
-      'style' => 'text/css',
-      // @see http://www.w3.org/TR/html5/scripting-1.html#attr-script-type
-      'script' => 'text/javascript',
-    );
-    if (!empty($element['#attributes']['type']) && $element['#attributes']['type'] === $types[$tag]) {
-      unset($element['#attributes']['type']);
-    }
-
-    // Remove CDATA comments. CDATA is only required for DOCTYPES that are XML
-    // based, HTML5 is not.
-    $cdata_prefix = array(
-      'style' => "\n<!--/*--><![CDATA[/*><!--*/\n",
-      'script' => "\n<!--//--><![CDATA[//><!--\n",
-    );
-    $cdata_suffix = array(
-      'style' => "\n/*]]>*/-->\n",
-      'script' => "\n//--><!]]>\n",
-    );
-    if (
-      !empty($element['#value_prefix']) && $element['#value_prefix'] === $cdata_prefix[$tag] &&
-      !empty($element['#value_suffix']) && $element['#value_suffix'] === $cdata_suffix[$tag]
-    ) {
-      unset($element['#value_prefix'], $element['#value_suffix']);
-    }
-
-    // Remove the "media=all" attribute, leave others unaffected.
-    if (isset($element['#attributes']['media']) && $element['#attributes']['media'] === 'all') {
-      unset($element['#attributes']['media']);
-    }
-  }
-}
diff --git a/templates/system/html.tpl.php b/templates/system/html.tpl.php
deleted file mode 100755
index 1d8815a..0000000
--- a/templates/system/html.tpl.php
+++ /dev/null
@@ -1,68 +0,0 @@
-<?php
-/**
- * @file
- * Default theme implementation to display the basic html structure of a single
- * Drupal page.
- *
- * Variables:
- * - $css: An array of CSS files for the current page.
- * - $language: (object) The language the site is being displayed in.
- *   $language->language contains its textual representation.
- *   $language->dir contains the language direction. It will either be 'ltr' or
- *   'rtl'.
- * - $rdf_namespaces: All the RDF namespace prefixes used in the HTML document.
- * - $grddl_profile: A GRDDL profile allowing agents to extract the RDF data.
- * - $head_title: A modified version of the page title, for use in the TITLE
- *   tag.
- * - $head_title_array: (array) An associative array containing the string parts
- *   that were used to generate the $head_title variable, already prepared to be
- *   output as TITLE tag. The key/value pairs may contain one or more of the
- *   following, depending on conditions:
- *   - title: The title of the current page, if any.
- *   - name: The name of the site.
- *   - slogan: The slogan of the site, if any, and if there is no title.
- * - $head: Markup for the HEAD section (including meta tags, keyword tags, and
- *   so on).
- * - $styles: Style tags necessary to import all CSS files for the page.
- * - $scripts: Script tags necessary to load the JavaScript files and settings
- *   for the page.
- * - $page_top: Initial markup from any modules that have altered the
- *   page. This variable should always be output first, before all other dynamic
- *   content.
- * - $page: The rendered page content.
- * - $page_bottom: Final closing markup from any modules that have altered the
- *   page. This variable should always be output last, after all other dynamic
- *   content.
- * - $classes String of classes that can be used to style contextually through
- *   CSS.
- *
- * @see bootstrap_preprocess_html()
- * @see template_preprocess()
- * @see template_preprocess_html()
- * @see template_process()
- *
- * @ingroup themeable
- */
-?><!DOCTYPE html>
-<html lang="<?php print $language->language; ?>" dir="<?php print $language->dir; ?>"<?php print $rdf_namespaces;?>>
-<head profile="<?php print $grddl_profile; ?>">
-  <meta charset="utf-8">
-  <meta name="viewport" content="width=device-width, initial-scale=1.0">
-  <?php print $head; ?>
-  <title><?php print $head_title; ?></title>
-  <?php print $styles; ?>
-  <!-- HTML5 element support for IE6-8 -->
-  <!--[if lt IE 9]>
-    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
-  <![endif]-->
-  <?php print $scripts; ?>
-</head>
-<body class="<?php print $classes; ?>" <?php print $attributes;?>>
-  <div id="skip-link">
-    <a href="#main-content" class="element-invisible element-focusable"><?php print t('Skip to main content'); ?></a>
-  </div>
-  <?php print $page_top; ?>
-  <?php print $page; ?>
-  <?php print $page_bottom; ?>
-</body>
-</html>
diff --git a/templates/system/html.vars.php b/templates/system/html.vars.php
deleted file mode 100644
index 569aa81..0000000
--- a/templates/system/html.vars.php
+++ /dev/null
@@ -1,26 +0,0 @@
-<?php
-/**
- * @file
- * html.vars.php
- *
- * @see html.tpl.php
- */
-
-/**
- * Implements hook_preprocess_html().
- */
-function bootstrap_preprocess_html(&$variables) {
-  switch (theme_get_setting('bootstrap_navbar_position')) {
-    case 'fixed-top':
-      $variables['classes_array'][] = 'navbar-is-fixed-top';
-      break;
-
-    case 'fixed-bottom':
-      $variables['classes_array'][] = 'navbar-is-fixed-bottom';
-      break;
-
-    case 'static-top':
-      $variables['classes_array'][] = 'navbar-is-static-top';
-      break;
-  }
-}
diff --git a/templates/system/image.vars.php b/templates/system/image.vars.php
deleted file mode 100644
index c6fd1c6..0000000
--- a/templates/system/image.vars.php
+++ /dev/null
@@ -1,27 +0,0 @@
-<?php
-/**
- * @file
- * image.vars.php
- */
-
-/**
- * Implements hook_preprocess_image().
- */
-function bootstrap_preprocess_image(&$variables) {
-  // Contrib modules have a very bad habit of frequently adding classes as
-  // strings, convert them to a proper array.
-  // @see https://www.drupal.org/node/2269653
-  if (isset($variables['attributes']['class']) && !is_array($variables['attributes']['class'])) {
-    $variables['attributes']['class'] = explode(' ', $variables['attributes']['class']);
-  }
-
-  // Add image shape, if necessary.
-  if ($shape = theme_get_setting('bootstrap_image_shape')) {
-    $variables['attributes']['class'][] = $shape;
-  }
-
-  // Add responsiveness, if necessary.
-  if ($shape = theme_get_setting('bootstrap_image_responsive')) {
-    $variables['attributes']['class'][] = 'img-responsive';
-  }
-}
diff --git a/templates/system/item-list.func.php b/templates/system/item-list.func.php
deleted file mode 100644
index a911ec9..0000000
--- a/templates/system/item-list.func.php
+++ /dev/null
@@ -1,99 +0,0 @@
-<?php
-/**
- * @file
- * item-list.func.php
- */
-
-/**
- * Overrides theme_item_list().
- *
- * - Uses an early D8 version of the theme function, which fixes bugs (and was
- *   refused for commit because it was "too late to change theme output)".
- * - Removes first/last, even/odd classes.
- * - Removes useless div.item-list wrapper, allows optional #wrapper_attributes.
- * - Removes hard-coded #title as <h3>, introduce support for #title as an array
- *   containing, text, tag and optional attributes.
- */
-function bootstrap_item_list($variables) {
-  $items = $variables['items'];
-  $title = $variables['title'];
-  $type = $variables['type'];
-  $list_attributes = $variables['attributes'];
-
-  // Drupal core only supports #title as a string. This implementation supports
-  // heading level, and attributes as well.
-  $heading = '';
-  if (!empty($title)) {
-    // If it's a string, normalize into an array.
-    if (is_string($title)) {
-      $title = array(
-        'text' => $title,
-      );
-    }
-    // Set defaults.
-    $title += array(
-      'level' => 'h3',
-      'attributes' => array(),
-    );
-    // Heading outputs only when it has text.
-    if (!empty($title['text'])) {
-      $heading .= '<' . $title['level'] . drupal_attributes($title['attributes']) . '>';
-      $heading .= empty($title['html']) ? check_plain($title['text']) : $title['text'];
-      $heading .= '</' . $title['level'] . '>';
-    }
-  }
-
-  $output = '';
-  if ($items) {
-    $output .= '<' . $type . drupal_attributes($list_attributes) . '>';
-    foreach ($items as $key => $item) {
-      $attributes = array();
-
-      if (is_array($item)) {
-        $value = '';
-        if (isset($item['data'])) {
-          // Allow data to be renderable.
-          if (is_array($item['data']) && (!empty($item['data']['#type']) || !empty($item['data']['#theme']))) {
-            $value .= drupal_render($item['data']);
-          }
-          else {
-            $value .= $item['data'];
-          }
-        }
-        $attributes = array_diff_key($item, array('data' => 0, 'children' => 0));
-
-        // Append nested child list, if any.
-        if (isset($item['children'])) {
-          // HTML attributes for the outer list are defined in the 'attributes'
-          // theme variable, but not inherited by children. For nested lists,
-          // all non-numeric keys in 'children' are used as list attributes.
-          $child_list_attributes = array();
-          foreach ($item['children'] as $child_key => $child_item) {
-            if (is_string($child_key)) {
-              $child_list_attributes[$child_key] = $child_item;
-              unset($item['children'][$child_key]);
-            }
-          }
-          $value .= theme('item_list', array(
-            'items' => $item['children'],
-            'type' => $type,
-            'attributes' => $child_list_attributes,
-          ));
-        }
-      }
-      else {
-        $value = $item;
-      }
-
-      $output .= '<li' . drupal_attributes($attributes) . '>' . $value . "</li>\n";
-    }
-    $output .= "</$type>";
-  }
-
-  // Output the list and title only if there are any list items.
-  if (!empty($output)) {
-    $output = $heading . $output;
-  }
-
-  return $output;
-}
diff --git a/templates/system/links.vars.php b/templates/system/links.vars.php
deleted file mode 100644
index 4d8a48e..0000000
--- a/templates/system/links.vars.php
+++ /dev/null
@@ -1,25 +0,0 @@
-<?php
-/**
- * @file
- * links.vars.php
- */
-
-/**
- * Implements hook_preprocess_links().
- */
-function bootstrap_preprocess_links(&$variables) {
-  if (isset($variables['attributes']) && isset($variables['attributes']['class'])) {
-    $string = is_string($variables['attributes']['class']);
-    if ($string) {
-      $variables['attributes']['class'] = explode(' ', $variables['attributes']['class']);
-    }
-
-    if ($key = array_search('inline', $variables['attributes']['class'])) {
-      $variables['attributes']['class'][$key] = 'list-inline';
-    }
-
-    if ($string) {
-      $variables['attributes']['class'] = implode(' ', $variables['attributes']['class']);
-    }
-  }
-}
diff --git a/templates/system/mark.func.php b/templates/system/mark.func.php
deleted file mode 100644
index 6c20135..0000000
--- a/templates/system/mark.func.php
+++ /dev/null
@@ -1,20 +0,0 @@
-<?php
-/**
- * @file
- * mark.func.php
- */
-
-/**
- * Overrides theme_mark().
- */
-function bootstrap_mark($variables) {
-  global $user;
-  if ($user->uid) {
-    if ($variables['type'] == MARK_NEW) {
-      return ' <span class="marker label label-primary">' . t('new') . '</span>';
-    }
-    elseif ($variables['type'] == MARK_UPDATED) {
-      return ' <span class="marker label label-info">' . t('updated') . '</span>';
-    }
-  }
-}
diff --git a/templates/system/page.tpl.php b/templates/system/page.tpl.php
deleted file mode 100644
index 42d5764..0000000
--- a/templates/system/page.tpl.php
+++ /dev/null
@@ -1,168 +0,0 @@
-<?php
-/**
- * @file
- * Default theme implementation to display a single Drupal page.
- *
- * The doctype, html, head and body tags are not in this template. Instead they
- * can be found in the html.tpl.php template in this directory.
- *
- * Available variables:
- *
- * General utility variables:
- * - $base_path: The base URL path of the Drupal installation. At the very
- *   least, this will always default to /.
- * - $directory: The directory the template is located in, e.g. modules/system
- *   or themes/bartik.
- * - $is_front: TRUE if the current page is the front page.
- * - $logged_in: TRUE if the user is registered and signed in.
- * - $is_admin: TRUE if the user has permission to access administration pages.
- *
- * Site identity:
- * - $front_page: The URL of the front page. Use this instead of $base_path,
- *   when linking to the front page. This includes the language domain or
- *   prefix.
- * - $logo: The path to the logo image, as defined in theme configuration.
- * - $site_name: The name of the site, empty when display has been disabled
- *   in theme settings.
- * - $site_slogan: The slogan of the site, empty when display has been disabled
- *   in theme settings.
- *
- * Navigation:
- * - $main_menu (array): An array containing the Main menu links for the
- *   site, if they have been configured.
- * - $secondary_menu (array): An array containing the Secondary menu links for
- *   the site, if they have been configured.
- * - $breadcrumb: The breadcrumb trail for the current page.
- *
- * Page content (in order of occurrence in the default page.tpl.php):
- * - $title_prefix (array): An array containing additional output populated by
- *   modules, intended to be displayed in front of the main title tag that
- *   appears in the template.
- * - $title: The page title, for use in the actual HTML content.
- * - $title_suffix (array): An array containing additional output populated by
- *   modules, intended to be displayed after the main title tag that appears in
- *   the template.
- * - $messages: HTML for status and error messages. Should be displayed
- *   prominently.
- * - $tabs (array): Tabs linking to any sub-pages beneath the current page
- *   (e.g., the view and edit tabs when displaying a node).
- * - $action_links (array): Actions local to the page, such as 'Add menu' on the
- *   menu administration interface.
- * - $feed_icons: A string of all feed icons for the current page.
- * - $node: The node object, if there is an automatically-loaded node
- *   associated with the page, and the node ID is the second argument
- *   in the page's path (e.g. node/12345 and node/12345/revisions, but not
- *   comment/reply/12345).
- *
- * Regions:
- * - $page['help']: Dynamic help text, mostly for admin pages.
- * - $page['highlighted']: Items for the highlighted content region.
- * - $page['content']: The main content of the current page.
- * - $page['sidebar_first']: Items for the first sidebar.
- * - $page['sidebar_second']: Items for the second sidebar.
- * - $page['header']: Items for the header region.
- * - $page['footer']: Items for the footer region.
- *
- * @see bootstrap_preprocess_page()
- * @see template_preprocess()
- * @see template_preprocess_page()
- * @see bootstrap_process_page()
- * @see template_process()
- * @see html.tpl.php
- *
- * @ingroup themeable
- */
-?>
-<header id="navbar" role="banner" class="<?php print $navbar_classes; ?>">
-  <div class="container">
-    <div class="navbar-header">
-      <?php if ($logo): ?>
-        <a class="logo navbar-btn pull-left" href="<?php print $front_page; ?>" title="<?php print t('Home'); ?>">
-          <img src="<?php print $logo; ?>" alt="<?php print t('Home'); ?>" />
-        </a>
-      <?php endif; ?>
-
-      <?php if (!empty($site_name)): ?>
-        <a class="name navbar-brand" href="<?php print $front_page; ?>" title="<?php print t('Home'); ?>"><?php print $site_name; ?></a>
-      <?php endif; ?>
-
-      <!-- .btn-navbar is used as the toggle for collapsed navbar content -->
-      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
-        <span class="sr-only">Toggle navigation</span>
-        <span class="icon-bar"></span>
-        <span class="icon-bar"></span>
-        <span class="icon-bar"></span>
-      </button>
-    </div>
-
-    <?php if (!empty($primary_nav) || !empty($secondary_nav) || !empty($page['navigation'])): ?>
-      <div class="navbar-collapse collapse">
-        <nav role="navigation">
-          <?php if (!empty($primary_nav)): ?>
-            <?php print render($primary_nav); ?>
-          <?php endif; ?>
-          <?php if (!empty($secondary_nav)): ?>
-            <?php print render($secondary_nav); ?>
-          <?php endif; ?>
-          <?php if (!empty($page['navigation'])): ?>
-            <?php print render($page['navigation']); ?>
-          <?php endif; ?>
-        </nav>
-      </div>
-    <?php endif; ?>
-  </div>
-</header>
-
-<div class="main-container container">
-
-  <header role="banner" id="page-header">
-    <?php if (!empty($site_slogan)): ?>
-      <p class="lead"><?php print $site_slogan; ?></p>
-    <?php endif; ?>
-
-    <?php print render($page['header']); ?>
-  </header> <!-- /#page-header -->
-
-  <div class="row">
-
-    <?php if (!empty($page['sidebar_first'])): ?>
-      <aside class="col-sm-3" role="complementary">
-        <?php print render($page['sidebar_first']); ?>
-      </aside>  <!-- /#sidebar-first -->
-    <?php endif; ?>
-
-    <section<?php print $content_column_class; ?>>
-      <?php if (!empty($page['highlighted'])): ?>
-        <div class="highlighted jumbotron"><?php print render($page['highlighted']); ?></div>
-      <?php endif; ?>
-      <?php if (!empty($breadcrumb)): print $breadcrumb; endif;?>
-      <a id="main-content"></a>
-      <?php print render($title_prefix); ?>
-      <?php if (!empty($title)): ?>
-        <h1 class="page-header"><?php print $title; ?></h1>
-      <?php endif; ?>
-      <?php print render($title_suffix); ?>
-      <?php print $messages; ?>
-      <?php if (!empty($tabs)): ?>
-        <?php print render($tabs); ?>
-      <?php endif; ?>
-      <?php if (!empty($page['help'])): ?>
-        <?php print render($page['help']); ?>
-      <?php endif; ?>
-      <?php if (!empty($action_links)): ?>
-        <ul class="action-links"><?php print render($action_links); ?></ul>
-      <?php endif; ?>
-      <?php print render($page['content']); ?>
-    </section>
-
-    <?php if (!empty($page['sidebar_second'])): ?>
-      <aside class="col-sm-3" role="complementary">
-        <?php print render($page['sidebar_second']); ?>
-      </aside>  <!-- /#sidebar-second -->
-    <?php endif; ?>
-
-  </div>
-</div>
-<footer class="footer container">
-  <?php print render($page['footer']); ?>
-</footer>
diff --git a/templates/system/page.vars.php b/templates/system/page.vars.php
deleted file mode 100644
index 727a517..0000000
--- a/templates/system/page.vars.php
+++ /dev/null
@@ -1,65 +0,0 @@
-<?php
-/**
- * @file
- * page.vars.php
- */
-
-/**
- * Implements hook_preprocess_page().
- *
- * @see page.tpl.php
- */
-function bootstrap_preprocess_page(&$variables) {
-  // Add information about the number of sidebars.
-  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
-    $variables['content_column_class'] = ' class="col-sm-6"';
-  }
-  elseif (!empty($variables['page']['sidebar_first']) || !empty($variables['page']['sidebar_second'])) {
-    $variables['content_column_class'] = ' class="col-sm-9"';
-  }
-  else {
-    $variables['content_column_class'] = ' class="col-sm-12"';
-  }
-
-  // Primary nav.
-  $variables['primary_nav'] = FALSE;
-  if ($variables['main_menu']) {
-    // Build links.
-    $variables['primary_nav'] = menu_tree(variable_get('menu_main_links_source', 'main-menu'));
-    // Provide default theme wrapper function.
-    $variables['primary_nav']['#theme_wrappers'] = array('menu_tree__primary');
-  }
-
-  // Secondary nav.
-  $variables['secondary_nav'] = FALSE;
-  if ($variables['secondary_menu']) {
-    // Build links.
-    $variables['secondary_nav'] = menu_tree(variable_get('menu_secondary_links_source', 'user-menu'));
-    // Provide default theme wrapper function.
-    $variables['secondary_nav']['#theme_wrappers'] = array('menu_tree__secondary');
-  }
-
-  $variables['navbar_classes_array'] = array('navbar');
-
-  if (theme_get_setting('bootstrap_navbar_position') !== '') {
-    $variables['navbar_classes_array'][] = 'navbar-' . theme_get_setting('bootstrap_navbar_position');
-  }
-  else {
-    $variables['navbar_classes_array'][] = 'container';
-  }
-  if (theme_get_setting('bootstrap_navbar_inverse')) {
-    $variables['navbar_classes_array'][] = 'navbar-inverse';
-  }
-  else {
-    $variables['navbar_classes_array'][] = 'navbar-default';
-  }
-}
-
-/**
- * Implements hook_process_page().
- *
- * @see page.tpl.php
- */
-function bootstrap_process_page(&$variables) {
-  $variables['navbar_classes'] = implode(' ', $variables['navbar_classes_array']);
-}
diff --git a/templates/system/pager.func.php b/templates/system/pager.func.php
deleted file mode 100644
index 8acb577..0000000
--- a/templates/system/pager.func.php
+++ /dev/null
@@ -1,150 +0,0 @@
-<?php
-/**
- * @file
- * pager.func.php
- */
-
-/**
- * Overrides theme_pager().
- */
-function bootstrap_pager($variables) {
-  $output = "";
-  $items = array();
-  $tags = $variables['tags'];
-  $element = $variables['element'];
-  $parameters = $variables['parameters'];
-  $quantity = $variables['quantity'];
-
-  global $pager_page_array, $pager_total;
-
-  // Calculate various markers within this pager piece:
-  // Middle is used to "center" pages around the current page.
-  $pager_middle = ceil($quantity / 2);
-  // Current is the page we are currently paged to.
-  $pager_current = $pager_page_array[$element] + 1;
-  // First is the first page listed by this pager piece (re quantity).
-  $pager_first = $pager_current - $pager_middle + 1;
-  // Last is the last page listed by this pager piece (re quantity).
-  $pager_last = $pager_current + $quantity - $pager_middle;
-  // Max is the maximum page number.
-  $pager_max = $pager_total[$element];
-
-  // Prepare for generation loop.
-  $i = $pager_first;
-  if ($pager_last > $pager_max) {
-    // Adjust "center" if at end of query.
-    $i = $i + ($pager_max - $pager_last);
-    $pager_last = $pager_max;
-  }
-  if ($i <= 0) {
-    // Adjust "center" if at start of query.
-    $pager_last = $pager_last + (1 - $i);
-    $i = 1;
-  }
-
-  // End of generation loop preparation.
-  // @todo add theme setting for this.
-  // $li_first = theme('pager_first', array(
-  // 'text' => (isset($tags[0]) ? $tags[0] : t('first')),
-  // 'element' => $element,
-  // 'parameters' => $parameters,
-  // ));
-  $li_previous = theme('pager_previous', array(
-    'text' => (isset($tags[1]) ? $tags[1] : t('previous')),
-    'element' => $element,
-    'interval' => 1,
-    'parameters' => $parameters,
-  ));
-  $li_next = theme('pager_next', array(
-    'text' => (isset($tags[3]) ? $tags[3] : t('next')),
-    'element' => $element,
-    'interval' => 1,
-    'parameters' => $parameters,
-  ));
-  // @todo add theme setting for this.
-  // $li_last = theme('pager_last', array(
-  // 'text' => (isset($tags[4]) ? $tags[4] : t('last')),
-  // 'element' => $element,
-  // 'parameters' => $parameters,
-  // ));
-  if ($pager_total[$element] > 1) {
-    // @todo add theme setting for this.
-    // if ($li_first) {
-    // $items[] = array(
-    // 'class' => array('pager-first'),
-    // 'data' => $li_first,
-    // );
-    // }
-    if ($li_previous) {
-      $items[] = array(
-        'class' => array('prev'),
-        'data' => $li_previous,
-      );
-    }
-    // When there is more than one page, create the pager list.
-    if ($i != $pager_max) {
-      if ($i > 1) {
-        $items[] = array(
-          'class' => array('pager-ellipsis', 'disabled'),
-          'data' => '<span>…</span>',
-        );
-      }
-      // Now generate the actual pager piece.
-      for (; $i <= $pager_last && $i <= $pager_max; $i++) {
-        if ($i < $pager_current) {
-          $items[] = array(
-            // 'class' => array('pager-item'),
-            'data' => theme('pager_previous', array(
-              'text' => $i,
-              'element' => $element,
-              'interval' => ($pager_current - $i),
-              'parameters' => $parameters,
-            )),
-          );
-        }
-        if ($i == $pager_current) {
-          $items[] = array(
-            // Add the active class.
-            'class' => array('active'),
-            'data' => "<span>$i</span>",
-          );
-        }
-        if ($i > $pager_current) {
-          $items[] = array(
-            'data' => theme('pager_next', array(
-              'text' => $i,
-              'element' => $element,
-              'interval' => ($i - $pager_current),
-              'parameters' => $parameters,
-            )),
-          );
-        }
-      }
-      if ($i < $pager_max) {
-        $items[] = array(
-          'class' => array('pager-ellipsis', 'disabled'),
-          'data' => '<span>…</span>',
-        );
-      }
-    }
-    // End generation.
-    if ($li_next) {
-      $items[] = array(
-        'class' => array('next'),
-        'data' => $li_next,
-      );
-    }
-    // @todo add theme setting for this.
-    // if ($li_last) {
-    // $items[] = array(
-    // 'class' => array('pager-last'),
-    // 'data' => $li_last,
-    // );
-    // }
-    return '<div class="text-center">' . theme('item_list', array(
-      'items' => $items,
-      'attributes' => array('class' => array('pagination')),
-    )) . '</div>';
-  }
-  return $output;
-}
diff --git a/templates/system/progress-bar.tpl.php b/templates/system/progress-bar.tpl.php
deleted file mode 100644
index 0c053c2..0000000
--- a/templates/system/progress-bar.tpl.php
+++ /dev/null
@@ -1,19 +0,0 @@
-<?php
-/**
- * @file
- * progress-bar.tpl.php
- *
- * Variables
- * - $percent: The percentage of the progress.
- * - $message: A string containing information to be displayed.
- */
-?>
-<div class="progress-wrapper" aria-live="polite">
-  <div id="progress" class="progress progress-striped active">
-    <div class="progress-bar" role="progressbar" style="width: <?php print $percent; ?>%" aria-valuemin="0" aria-valuemax="100" aria-valuenow="<?php print $percent; ?>">
-      <div class="percentage sr-only"><?php print $percent; ?>%</div>
-    </div>
-  </div>
-  <div class="percentage pull-right"><?php print $percent; ?>%</div>
-  <div class="message"><?php print $message; ?></div>
-</div>
diff --git a/templates/system/region.vars.php b/templates/system/region.vars.php
deleted file mode 100644
index 45ee306..0000000
--- a/templates/system/region.vars.php
+++ /dev/null
@@ -1,40 +0,0 @@
-<?php
-/**
- * @file
- * region.vars.php
- */
-
-/**
- * Implements hook_preprocess_region().
- */
-function bootstrap_preprocess_region(&$variables) {
-  global $theme;
-
-  $region = $variables['region'];
-  $classes = &$variables['classes_array'];
-
-  // Content region.
-  if ($region === 'content') {
-    // @todo is this actually used properly?
-    $variables['theme_hook_suggestions'][] = 'region__no_wrapper';
-  }
-  // Help region.
-  elseif ($region === 'help' && !empty($variables['content'])) {
-    $variables['content'] = _bootstrap_icon('question-sign') . $variables['content'];
-    $classes[] = 'alert';
-    $classes[] = 'alert-info';
-    $classes[] = 'messages';
-    $classes[] = 'info';
-  }
-
-  // Support for "well" classes in regions.
-  static $wells;
-  if (!isset($wells)) {
-    foreach (system_region_list($theme) as $name => $title) {
-      $wells[$name] = theme_get_setting('bootstrap_region_well-' . $name);
-    }
-  }
-  if (!empty($wells[$region])) {
-    $classes[] = $wells[$region];
-  }
-}
diff --git a/templates/system/status-messages.func.php b/templates/system/status-messages.func.php
deleted file mode 100644
index 90a40cf..0000000
--- a/templates/system/status-messages.func.php
+++ /dev/null
@@ -1,56 +0,0 @@
-<?php
-/**
- * @file
- * status-messages.func.php
- */
-
-/**
- * Overrides theme_status_messages().
- */
-function bootstrap_status_messages($variables) {
-  $display = $variables['display'];
-  $output = '';
-
-  $status_heading = array(
-    'status' => t('Status message'),
-    'error' => t('Error message'),
-    'warning' => t('Warning message'),
-    'info' => t('Informative message'),
-  );
-
-  // Map Drupal message types to their corresponding Bootstrap classes.
-  // @see http://twitter.github.com/bootstrap/components.html#alerts
-  $status_class = array(
-    'status' => 'success',
-    'error' => 'danger',
-    'warning' => 'warning',
-    // Not supported, but in theory a module could send any type of message.
-    // @see drupal_set_message()
-    // @see theme_status_messages()
-    'info' => 'info',
-  );
-
-  foreach (drupal_get_messages($display) as $type => $messages) {
-    $class = (isset($status_class[$type])) ? ' alert-' . $status_class[$type] : '';
-    $output .= "<div class=\"alert alert-block$class messages $type\">\n";
-    $output .= "  <a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>\n";
-
-    if (!empty($status_heading[$type])) {
-      $output .= '<h4 class="element-invisible">' . $status_heading[$type] . "</h4>\n";
-    }
-
-    if (count($messages) > 1) {
-      $output .= " <ul>\n";
-      foreach ($messages as $message) {
-        $output .= '  <li>' . $message . "</li>\n";
-      }
-      $output .= " </ul>\n";
-    }
-    else {
-      $output .= $messages[0];
-    }
-
-    $output .= "</div>\n";
-  }
-  return $output;
-}
diff --git a/templates/system/table.func.php b/templates/system/table.func.php
deleted file mode 100644
index d4b19bf..0000000
--- a/templates/system/table.func.php
+++ /dev/null
@@ -1,271 +0,0 @@
-<?php
-/**
- * @file
- * table.func.php
- */
-
-/**
- * Overrides theme_table().
- *
- * Returns HTML for a table.
- *
- * @param array $variables
- *   An associative array containing:
- *   - header: An array containing the table headers. Each element of the array
- *     can be either a localized string or an associative array with the
- *     following keys:
- *     - "data": The localized title of the table column.
- *     - "field": The database field represented in the table column (required
- *       if user is to be able to sort on this column).
- *     - "sort": A default sort order for this column ("asc" or "desc"). Only
- *       one column should be given a default sort order because table sorting
- *       only applies to one column at a time.
- *     - Any HTML attributes, such as "colspan", to apply to the column header
- *       cell.
- *   - rows: An array of table rows. Every row is an array of cells, or an
- *     associative array with the following keys:
- *     - "data": an array of cells
- *     - Any HTML attributes, such as "class", to apply to the table row.
- *     - "no_striping": a boolean indicating that the row should receive no
- *       'even / odd' styling. Defaults to FALSE.
- *     Each cell can be either a string or an associative array with the
- *     following keys:
- *     - "data": The string to display in the table cell.
- *     - "header": Indicates this cell is a header.
- *     - Any HTML attributes, such as "colspan", to apply to the table cell.
- *     Here's an example for $rows:
- * @code
- *     $rows = array(
- *       // Simple row
- *       array(
- *         'Cell 1', 'Cell 2', 'Cell 3'
- *       ),
- *       // Row with attributes on the row and some of its cells.
- *       array(
- *         'data' => array('Cell 1', array('data' => 'Cell 2', 'colspan' => 2)), 'class' => array('funky')
- *       )
- *     );
- * @endcode
- *   - footer: An array containing the table footer. Each element of the array
- *     can be either a localized string or an associative array with the
- *     following keys:
- *     - "data": The localized title of the table column.
- *     - "field": The database field represented in the table column (required
- *       if user is to be able to sort on this column).
- *     - "sort": A default sort order for this column ("asc" or "desc"). Only
- *       one column should be given a default sort order because table sorting
- *       only applies to one column at a time.
- *     - Any HTML attributes, such as "colspan", to apply to the column footer
- *       cell.
- *   - attributes: An array of HTML attributes to apply to the table tag.
- *   - caption: A localized string to use for the <caption> tag.
- *   - colgroups: An array of column groups. Each element of the array can be
- *     either:
- *     - An array of columns, each of which is an associative array of HTML
- *       attributes applied to the COL element.
- *     - An array of attributes applied to the COLGROUP element, which must
- *       include a "data" attribute. To add attributes to COL elements, set the
- *       "data" attribute with an array of columns, each of which is an
- *       associative array of HTML attributes.
- *     Here's an example for $colgroup:
- * @code
- *     $colgroup = array(
- *       // COLGROUP with one COL element.
- *       array(
- *         array(
- *           'class' => array('funky'), // Attribute for the COL element.
- *         ),
- *       ),
- *       // Colgroup with attributes and inner COL elements.
- *       array(
- *         'data' => array(
- *           array(
- *             'class' => array('funky'), // Attribute for the COL element.
- *           ),
- *         ),
- *         'class' => array('jazzy'), // Attribute for the COLGROUP element.
- *       ),
- *     );
- * @endcode
- *     These optional tags are used to group and set properties on columns
- *     within a table. For example, one may easily group three columns and
- *     apply same background style to all.
- *   - sticky: Use a "sticky" table header.
- *   - empty: The message to display in an extra row if table does not have any
- *     rows.
- */
-function bootstrap_table($variables) {
-  $header = $variables['header'];
-  $rows = $variables['rows'];
-  $footer = $variables['footer'];
-  $attributes = $variables['attributes'];
-  $caption = $variables['caption'];
-  $colgroups = $variables['colgroups'];
-  $sticky = $variables['sticky'];
-  $empty = $variables['empty'];
-  $responsive = $variables['responsive'];
-
-  // Add sticky headers, if applicable.
-  if (count($header) && $sticky) {
-    drupal_add_js('misc/tableheader.js');
-    // Add 'sticky-enabled' class to the table to identify it for JS.
-    // This is needed to target tables constructed by this function.
-    $attributes['class'][] = 'sticky-enabled';
-  }
-
-  $output = '';
-
-  if ($responsive) {
-    $output .= "<div class=\"table-responsive\">\n";
-  }
-
-  $output .= '<table' . drupal_attributes($attributes) . ">\n";
-
-  if (isset($caption)) {
-    $output .= '<caption>' . $caption . "</caption>\n";
-  }
-
-  // Format the table columns:
-  if (count($colgroups)) {
-    foreach ($colgroups as $number => $colgroup) {
-      $attributes = array();
-
-      // Check if we're dealing with a simple or complex column.
-      if (isset($colgroup['data'])) {
-        foreach ($colgroup as $key => $value) {
-          if ($key == 'data') {
-            $cols = $value;
-          }
-          else {
-            $attributes[$key] = $value;
-          }
-        }
-      }
-      else {
-        $cols = $colgroup;
-      }
-
-      // Build colgroup.
-      if (is_array($cols) && count($cols)) {
-        $output .= ' <colgroup' . drupal_attributes($attributes) . '>';
-        $i = 0;
-        foreach ($cols as $col) {
-          $output .= ' <col' . drupal_attributes($col) . ' />';
-        }
-        $output .= " </colgroup>\n";
-      }
-      else {
-        $output .= ' <colgroup' . drupal_attributes($attributes) . " />\n";
-      }
-    }
-  }
-
-  // Add the 'empty' row message if available.
-  if (!count($rows) && $empty) {
-    $header_count = 0;
-    foreach ($header as $header_cell) {
-      if (is_array($header_cell)) {
-        $header_count += isset($header_cell['colspan']) ? $header_cell['colspan'] : 1;
-      }
-      else {
-        $header_count++;
-      }
-    }
-    $rows[] = array(
-      array(
-        'data' => $empty,
-        'colspan' => $header_count,
-        'class' => array('empty', 'message'),
-      ),
-    );
-  }
-
-  // Format the table header:
-  if (count($header)) {
-    $ts = tablesort_init($header);
-    // HTML requires that the thead tag has tr tags in it followed by tbody
-    // tags. Using ternary operator to check and see if we have any rows.
-    $output .= (count($rows) ? ' <thead><tr>' : ' <tr>');
-    foreach ($header as $cell) {
-      $cell = tablesort_header($cell, $header, $ts);
-      $output .= _theme_table_cell($cell, TRUE);
-    }
-    // Using ternary operator to close the tags based on whether or not there
-    // are rows.
-    $output .= (count($rows) ? " </tr></thead>\n" : "</tr>\n");
-  }
-  else {
-    $ts = array();
-  }
-
-  // Format the table rows:
-  if (count($rows)) {
-    $output .= "<tbody>\n";
-    foreach ($rows as $row) {
-      // Check if we're dealing with a simple or complex row.
-      if (isset($row['data'])) {
-        $cells = $row['data'];
-
-        // Set the attributes array and exclude 'data' and 'no_striping'.
-        $attributes = $row;
-        unset($attributes['data']);
-        unset($attributes['no_striping']);
-      }
-      else {
-        $cells = $row;
-        $attributes = array();
-      }
-      if (count($cells)) {
-        // Build row.
-        $output .= ' <tr' . drupal_attributes($attributes) . '>';
-        $i = 0;
-        foreach ($cells as $cell) {
-          $cell = tablesort_cell($cell, $header, $ts, $i++);
-          $output .= _theme_table_cell($cell);
-        }
-        $output .= " </tr>\n";
-      }
-    }
-    $output .= "</tbody>\n";
-  }
-
-  // Format the table footer:
-  if (count($footer)) {
-    $output .= "<tfoot>\n";
-    foreach ($footer as $row) {
-      // Check if we're dealing with a simple or complex row.
-      if (isset($row['data'])) {
-        $cells = $row['data'];
-
-        // Set the attributes array and exclude 'data'.
-        $attributes = $row;
-        unset($attributes['data']);
-      }
-      else {
-        $cells = $row;
-        $attributes = array();
-      }
-      if (count($cells)) {
-        // Build row.
-        $output .= ' <tr' . drupal_attributes($attributes) . '>';
-        $i = 0;
-        foreach ($cells as $cell) {
-          $cell = tablesort_cell($cell, $header, $ts, $i++);
-          $output .= _theme_table_cell($cell);
-        }
-        $output .= " </tr>\n";
-      }
-    }
-    // Using ternary operator to close the tags based on whether or not there
-    // are rows.
-    $output .= "</tfoot>\n";
-  }
-
-  $output .= "</table>\n";
-
-  if ($responsive) {
-    $output .= "</div>\n";
-  }
-
-  return $output;
-}
diff --git a/templates/system/table.vars.php b/templates/system/table.vars.php
deleted file mode 100644
index 88adad0..0000000
--- a/templates/system/table.vars.php
+++ /dev/null
@@ -1,60 +0,0 @@
-<?php
-/**
- * @file
- * table.vars.php
- */
-
-/**
- * Implements hook_preprocess_table().
- */
-function bootstrap_preprocess_table(&$variables) {
-  // Prepare classes array if necessary.
-  if (!isset($variables['attributes']['class'])) {
-    $variables['attributes']['class'] = array();
-  }
-  // Convert classes to an array.
-  elseif (isset($variables['attributes']['class']) && is_string($variables['attributes']['class'])) {
-    $variables['attributes']['class'] = explode(' ', $variables['attributes']['class']);
-  }
-
-  // Add the necessary classes to the table.
-  _bootstrap_table_add_classes($variables['attributes']['class'], $variables);
-}
-
-/**
- * Helper function for adding the necessary classes to a table.
- *
- * @param array $classes
- *   The array of classes, passed by reference.
- * @param array $variables
- *   The variables of the theme hook, passed by reference.
- */
-function _bootstrap_table_add_classes(&$classes, &$variables) {
-  $context = $variables['context'];
-
-  // Generic table class for all tables.
-  $classes[] = 'table';
-
-  // Bordered table.
-  if (!empty($context['bordered']) || (!isset($context['bordered']) && theme_get_setting('bootstrap_table_bordered'))) {
-    $classes[] = 'table-bordered';
-  }
-
-  // Condensed table.
-  if (!empty($context['condensed']) || (!isset($context['condensed']) && theme_get_setting('bootstrap_table_condensed'))) {
-    $classes[] = 'table-condensed';
-  }
-
-  // Hover rows.
-  if (!empty($context['hover']) || (!isset($context['hover']) && theme_get_setting('bootstrap_table_hover'))) {
-    $classes[] = 'table-hover';
-  }
-
-  // Striped rows.
-  if (!empty($context['striped']) || (!isset($context['striped']) && theme_get_setting('bootstrap_table_striped'))) {
-    $classes[] = 'table-striped';
-  }
-
-  // Responsive table.
-  $variables['responsive'] = isset($context['responsive']) ? $context['responsive'] : theme_get_setting('bootstrap_table_responsive');
-}
diff --git a/templates/system/textfield.func.php b/templates/system/textfield.func.php
deleted file mode 100644
index 016e6ee..0000000
--- a/templates/system/textfield.func.php
+++ /dev/null
@@ -1,52 +0,0 @@
-<?php
-/**
- * @file
- * textfield.func.php
- */
-
-/**
- * Overrides theme_textfield().
- */
-function bootstrap_textfield($variables) {
-  $element = $variables['element'];
-  $element['#attributes']['type'] = 'text';
-  element_set_attributes($element, array(
-    'id',
-    'name',
-    'value',
-    'size',
-    'maxlength',
-  ));
-  _form_set_class($element, array('form-text'));
-
-  $output = '<input' . drupal_attributes($element['#attributes']) . ' />';
-
-  $extra = '';
-  if ($element['#autocomplete_path'] && drupal_valid_path($element['#autocomplete_path'])) {
-    drupal_add_library('system', 'drupal.autocomplete');
-    $element['#attributes']['class'][] = 'form-autocomplete';
-
-    $attributes = array();
-    $attributes['type'] = 'hidden';
-    $attributes['id'] = $element['#attributes']['id'] . '-autocomplete';
-    $attributes['value'] = url($element['#autocomplete_path'], array('absolute' => TRUE));
-    $attributes['disabled'] = 'disabled';
-    $attributes['class'][] = 'autocomplete';
-    // Uses icon for autocomplete "throbber".
-    if ($icon = _bootstrap_icon('refresh')) {
-      $output = '<div class="input-group">' . $output . '<span class="input-group-addon">' . $icon . '</span></div>';
-    }
-    // Fallback to using core's throbber.
-    else {
-      $output = '<div class="input-group">' . $output . '<span class="input-group-addon">';
-      // The throbber's background image must be set here because sites may not
-      // be at the root of the domain (ie: /) and this value cannot be set via
-      // CSS.
-      $output .= '<span class="autocomplete-throbber" style="background-image:url(' . url('misc/throbber.gif') . ')"></span>';
-      $output .= '</span></div>';
-    }
-    $extra = '<input' . drupal_attributes($attributes) . ' />';
-  }
-
-  return $output . $extra;
-}
diff --git a/templates/views/views-view-table.tpl.php b/templates/views/views-view-table.tpl.php
deleted file mode 100644
index 9a032df..0000000
--- a/templates/views/views-view-table.tpl.php
+++ /dev/null
@@ -1,57 +0,0 @@
-<?php
-/**
- * @file
- * views-view-table.tpl.php
- */
-
-/**
- * Template to display a view as a table.
- *
- * - $title : The title of this group of rows.  May be empty.
- * - $header: An array of header labels keyed by field id.
- * - $caption: The caption for this table. May be empty.
- * - $header_classes: An array of header classes keyed by field id.
- * - $fields: An array of CSS IDs to use for each field id.
- * - $classes: A class or classes to apply to the table, based on settings.
- * - $row_classes: An array of classes to apply to each row, indexed by row
- *   number. This matches the index in $rows.
- * - $rows: An array of row items. Each row is an array of content.
- *   $rows are keyed by row number, fields within rows are keyed by field ID.
- * - $field_classes: An array of classes to apply to each field, indexed by
- *   field id, then row number. This matches the index in $rows.
- * @ingroup views_templates
- */
-?>
-<?php if ($responsive): ?>
-<div class="table-responsive">
-<?php endif; ?>
-<table <?php if ($classes) { print 'class="'. $classes . '" '; } ?><?php print $attributes; ?>>
-   <?php if (!empty($title) || !empty($caption)) : ?>
-     <caption><?php print $caption . $title; ?></caption>
-  <?php endif; ?>
-  <?php if (!empty($header)) : ?>
-    <thead>
-      <tr>
-        <?php foreach ($header as $field => $label): ?>
-          <th <?php if ($header_classes[$field]) { print 'class="'. $header_classes[$field] . '" '; } ?>>
-            <?php print $label; ?>
-          </th>
-        <?php endforeach; ?>
-      </tr>
-    </thead>
-  <?php endif; ?>
-  <tbody>
-    <?php foreach ($rows as $row_count => $row): ?>
-      <tr <?php if ($row_classes[$row_count]) { print 'class="' . implode(' ', $row_classes[$row_count]) .'"';  } ?>>
-        <?php foreach ($row as $field => $content): ?>
-          <td <?php if ($field_classes[$field][$row_count]) { print 'class="'. $field_classes[$field][$row_count] . '" '; } ?><?php print drupal_attributes($field_attributes[$field][$row_count]); ?>>
-            <?php print $content; ?>
-          </td>
-        <?php endforeach; ?>
-      </tr>
-    <?php endforeach; ?>
-  </tbody>
-</table>
-<?php if ($responsive): ?>
-  </div>
-<?php endif; ?>
diff --git a/templates/views/views-view-table.vars.php b/templates/views/views-view-table.vars.php
deleted file mode 100644
index 8fdc85f..0000000
--- a/templates/views/views-view-table.vars.php
+++ /dev/null
@@ -1,13 +0,0 @@
-<?php
-/**
- * @file
- * views-view-table.vars.php
- */
-
-/**
- * Implements hook_preprocess_views_view_table().
- */
-function bootstrap_preprocess_views_view_table(&$variables) {
-  bootstrap_include('bootstrap', 'templates/system/table.vars.php');
-  _bootstrap_table_add_classes($variables['classes_array'], $variables);
-}
diff --git a/templates/webform/webform-element.vars.php b/templates/webform/webform-element.vars.php
deleted file mode 100644
index c3ea7d7..0000000
--- a/templates/webform/webform-element.vars.php
+++ /dev/null
@@ -1,31 +0,0 @@
-<?php
-/**
- * @file
- * webform-element.func.php
- */
-
-/**
- * Implements hook_preprocess_webform_element().
- */
-function bootstrap_preprocess_webform_element(&$variables) {
-  $element = $variables['element'];
-  $wrapper_attributes = array();
-  if (isset($element['#wrapper_attributes'])) {
-    $wrapper_attributes = $element['#wrapper_attributes'];
-  }
-
-  // See http://getbootstrap.com/css/#forms-controls.
-  if (isset($element['#type'])) {
-    if ($element['#type'] == "radio") {
-      $wrapper_attributes['class'][] = 'radio';
-    }
-    elseif ($element['#type'] == "checkbox") {
-      $wrapper_attributes['class'][] = 'checkbox';
-    }
-    else {
-      $wrapper_attributes['class'][] = 'form-group';
-    }
-  }
-
-  $variables['element']['#wrapper_attributes'] = $wrapper_attributes;
-}
diff --git a/theme-settings.php b/theme-settings.php
index f4ee36b..57d4087 100644
--- a/theme-settings.php
+++ b/theme-settings.php
@@ -5,13 +5,13 @@
  *
  * Provides theme settings for Bootstrap based themes when admin theme is not.
  *
- * @see ./includes/settings.inc
+ * @see theme/settings.inc
  */
 
 /**
  * Include common Bootstrap functions.
  */
-include_once dirname(__FILE__) . '/includes/common.inc';
+include_once dirname(__FILE__) . '/theme/common.inc';
 
 /**
  * Implements hook_form_FORM_ID_alter().
@@ -23,7 +23,7 @@ function bootstrap_form_system_theme_settings_alter(&$form, $form_state, $form_i
     return;
   }
   // Include theme settings file.
-  bootstrap_include('bootstrap', 'includes/settings.inc');
+  bootstrap_include('bootstrap', 'theme/settings.inc');
   // Alter theme settings form.
   _bootstrap_settings_form($form, $form_state);
 }
