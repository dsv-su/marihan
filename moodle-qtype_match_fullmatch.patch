From 757da77295cb8b5c4a90a4d741b7c40fc62143df Mon Sep 17 00:00:00 2001
From: Pavel Sokolov <psokolov@dsv.su.se>
Date: Wed, 15 May 2019 22:15:05 +0200
Subject: [PATCH] Add fullmatch option to matching qtype

---
 question/type/match/edit_match_form.php     | 6 ++++++
 question/type/match/lang/en/qtype_match.php | 2 ++
 question/type/match/question.php            | 7 ++++++-
 question/type/match/questiontype.php        | 3 +++
 4 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/question/type/match/edit_match_form.php b/question/type/match/edit_match_form.php
index 5ee734a8804..54deb45afdc 100644
--- a/question/type/match/edit_match_form.php
+++ b/question/type/match/edit_match_form.php
@@ -62,6 +62,11 @@ class qtype_match_edit_form extends question_edit_form {
         $mform->addHelpButton('shuffleanswers', 'shuffle', 'qtype_match');
         $mform->setDefault('shuffleanswers', 1);
 
+        $mform->addElement('advcheckbox', 'fullmatch',
+                get_string('fullmatch', 'qtype_match'), null, null, array(0, 1));
+        $mform->addHelpButton('fullmatch', 'fullmatch', 'qtype_match');
+        $mform->setDefault('fullmatch', 0);
+
         $this->add_per_answer_fields($mform, get_string('questionno', 'question', '{no}'), 0);
 
         $this->add_combined_feedback_fields(true);
@@ -85,6 +90,7 @@ class qtype_match_edit_form extends question_edit_form {
         }
 
         $question->shuffleanswers = $question->options->shuffleanswers;
+	$question->fullmatch = $question->options->fullmatch;
 
         $key = 0;
         foreach ($question->options->subquestions as $subquestion) {
diff --git a/question/type/match/lang/en/qtype_match.php b/question/type/match/lang/en/qtype_match.php
index 8d20a72aa5c..0ece0578ddf 100644
--- a/question/type/match/lang/en/qtype_match.php
+++ b/question/type/match/lang/en/qtype_match.php
@@ -29,6 +29,8 @@ $string['correctansweris'] = 'The correct answer is: {$a}';
 $string['deletedchoice'] = '[Deleted choice]';
 $string['deletedsubquestion'] = 'This part of the question was deleted after the attempt was started.';
 $string['filloutthreeqsandtwoas'] = 'You must provide at least two questions and three answers. You can provide extra wrong answers by giving an answer with a blank question. Entries where both the question and the answer are blank will be ignored.';
+$string['fullmatch'] = 'Require full match';
+$string['fullmatch_help'] = 'If activated, all matches have to be correct in order to get 100% mark, otherise 0% given';
 $string['nomatchinganswer'] = 'You must specify an answer matching the question \'{$a}\'.';
 $string['nomatchinganswerforq'] = 'You must specify an answer for this question.';
 $string['notenoughqsandas'] = 'You must supply at least {$a->q} questions and {$a->a} answers.';
diff --git a/question/type/match/question.php b/question/type/match/question.php
index 41130100daf..4044d234b4b 100644
--- a/question/type/match/question.php
+++ b/question/type/match/question.php
@@ -36,6 +36,7 @@ require_once($CFG->dirroot . '/question/type/questionbase.php');
 class qtype_match_question extends question_graded_automatically_with_countback {
     /** @var boolean Whether the question stems should be shuffled. */
     public $shufflestems;
+    public $fullmatch;
 
     public $correctfeedback;
     public $correctfeedbackformat;
@@ -298,7 +299,11 @@ class qtype_match_question extends question_graded_automatically_with_countback
 
     public function grade_response(array $response) {
         list($right, $total) = $this->get_num_parts_right($response);
-        $fraction = $right / $total;
+        if ($this->fullmatch) {
+            $fraction = ($right == $total) ? 1 : 0;
+        } else {
+            $fraction = $right / $total;
+        }
         return array($fraction, question_state::graded_state_for_fraction($fraction));
     }
 
diff --git a/question/type/match/questiontype.php b/question/type/match/questiontype.php
index ffc9b4d455e..3ab8948534f 100644
--- a/question/type/match/questiontype.php
+++ b/question/type/match/questiontype.php
@@ -101,6 +101,8 @@ class qtype_match extends question_type {
         }
 
         $options->shuffleanswers = $question->shuffleanswers;
+	$options->fullmatch = $question->fullmatch;
+
         $options = $this->save_combined_feedback_helper($options, $question, $context, true);
         $DB->update_record('qtype_match_options', $options);
 
@@ -117,6 +119,7 @@ class qtype_match extends question_type {
         parent::initialise_question_instance($question, $questiondata);
 
         $question->shufflestems = $questiondata->options->shuffleanswers;
+	$question->fullmatch = $questiondata->options->fullmatch;
         $this->initialise_combined_feedback($question, $questiondata, true);
 
         $question->stems = array();
-- 
2.11.0

